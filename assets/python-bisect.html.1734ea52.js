import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as t}from"./app.bfa28fe2.js";const e={},p=t(`<h2 id="\u4E8C\u5206\u67E5\u627E\u6A21\u5757-bisect" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u67E5\u627E\u6A21\u5757-bisect" aria-hidden="true">#</a> \u4E8C\u5206\u67E5\u627E\u6A21\u5757 bisect</h2><p><code>bisect_left(a, x, lo=0, hi=len(a))</code></p><p>\u76F8\u5F53\u4E8E left_bound\uFF0C\u8FD4\u56DE\u76EE\u6807\u503C\u7684\u5DE6\u4FA7\u8FB9\u754C\uFF0C\u5176\u8FD4\u56DE\u503C\u7684\u89E3\u8BFB\uFF1A</p><ul><li>\u89E3\u8BFB 1\uFF1A\u5C06 x \u63D2\u5165\u6709\u5E8F\u6570\u7EC4 a \u4E2D\u7684\u6700\u5DE6\u4FA7\u7D22\u5F15</li><li>\u89E3\u8BFB 2\uFF1Aa \u4E2D\u5C0F\u4E8E x \u7684\u503C\u7684\u6570\u91CF</li><li>\u89E3\u8BFB 3\uFF1A\u6709\u5E8F\u6570\u7EC4 a \u4E2D\u5927\u4E8E\u7B49\u4E8E x \u7684\u6700\u5C0F\u5143\u7D20\u7D22\u5F15</li></ul><hr><p><code>bisect_right(a, x, lo=0, hi=len(a))</code></p><p><code>bisect(a, x, lo=0, hi=len(a))</code></p><p>\u26A0\uFE0F \u4E0D\u76F8\u5F53\u4E8E right_bound\uFF0C\u8FD4\u56DE\u76EE\u6807\u503C\u7684\u53F3\u4FA7\u8FB9\u754C+1\uFF0C\u5176\u8FD4\u56DE\u503C\u7684\u89E3\u8BFB\uFF1A</p><ul><li>\u89E3\u8BFB 1\uFF1A\u5C06 x \u63D2\u5165\u6709\u5E8F\u6570\u7EC4 a \u4E2D\u7684\u6700\u53F3\u4FA7\u7D22\u5F15</li><li>\u89E3\u8BFB 2\uFF1Aa \u4E2D\u5C0F\u4E8E\u7B49\u4E8E x \u7684\u503C\u7684\u6570\u91CF</li><li>\u89E3\u8BFB 3\uFF1A\u6709\u5E8F\u6570\u7EC4 a \u4E2D\u5927\u4E8E x \u7684\u6700\u5C0F\u5143\u7D20\u7D22\u5F15\uFF08\u8FD4\u56DE\u7684\u7D22\u5F15\u4F4D\u7F6E\u7684\u503C\u80AF\u5B9A\u4E0D\u7B49\u4E8E x\uFF01\uFF01\uFF01</li></ul><hr><p><code>insort_left(a, x, lo=0, hi=len(a))</code></p><p>\u7B49\u4EF7\u4E8E a.insert(bisect.bisect_left(a, x, lo, hi), x)</p><hr><p><code>insort_right(a, x, lo=0, hi=len(a))</code><code>insort(a, x, lo=0, hi=len(a))</code></p><p>\u7B49\u4EF7\u4E8E a.insert(bisect.bisect_right(a, x, lo, hi), x)</p><hr><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#idx 0, 1, 2, 3, 4, 5, 6, 7, 8, 9</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token number">3</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> bisect_right<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># bisect(a, 3)</span>
<span class="token number">8</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
<span class="token number">8</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> bisect_right<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
<span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="python3-10-\u4E4B\u540E\u7684\u7248\u672C\u65B0\u589E\u53C2\u6570-key" tabindex="-1"><a class="header-anchor" href="#python3-10-\u4E4B\u540E\u7684\u7248\u672C\u65B0\u589E\u53C2\u6570-key" aria-hidden="true">#</a> python3.10 \u4E4B\u540E\u7684\u7248\u672C\u65B0\u589E\u53C2\u6570 key</h2><p>\u7C7B\u4F3C sort \u7684 key \u53C2\u6570\uFF0C\u53EF\u4EE5\u6307\u5B9A\u641C\u7D22\u65F6\u4F7F\u7528\u7684\u5177\u4F53\u7684\u952E</p><p>\u4F8B\u5B50\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># leetcode #875</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">minEatingSpeed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> piles<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> h<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">canEatAll</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">False</span>
            cost_time <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">for</span> pile <span class="token keyword">in</span> piles<span class="token punctuation">:</span>
                cost_time <span class="token operator">+=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>pile <span class="token operator">/</span> k<span class="token punctuation">)</span>
            <span class="token keyword">return</span> cost_time <span class="token operator">&lt;=</span> h
        <span class="token keyword">return</span> bisect_left<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>piles<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> key<span class="token operator">=</span>canEatAll<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>\u82E5\u4F7F\u7528\u8FD9\u79CD\u65B9\u6CD5\u89E3\u9898\uFF0Ca \u8981\u5305\u62EC\u6240\u6709\u7684\u7B54\u6848\u57DF\uFF0C\u4E14\u5982\u679C\u4F7F\u7528 range\uFF0C\u5C3D\u91CF\u4F7F\u7528 range(max_ans+1)\u7684\u5F62\u5F0F\uFF0C\u82E5\u4F7F\u7528 range(min_ans, max_ans+1)\uFF0C\u9700\u8981\u7ED9\u8FD4\u56DE\u7684\u7ED3\u679C\u6DFB\u52A0\u504F\u7F6E min_ans\uFF01</p></div><h2 id="\u5728\u6709\u5E8F\u5217\u8868\u4E2D\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u5728\u6709\u5E8F\u5217\u8868\u4E2D\u641C\u7D22" aria-hidden="true">#</a> \u5728\u6709\u5E8F\u5217\u8868\u4E2D\u641C\u7D22</h2><p>\u5982\u4F55\u5C06 bisect \u8F6C\u6362\u4E3A\u4E00\u822C\u7684\u641C\u7D22\u65B9\u6CD5\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Locate the leftmost value exactly equal to x&#39;</span>
    i <span class="token operator">=</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token keyword">and</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> x<span class="token punctuation">:</span>
        <span class="token keyword">return</span> i
    <span class="token keyword">raise</span> ValueError

<span class="token keyword">def</span> <span class="token function">find_lt</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Find rightmost value less than x&#39;</span>
    i <span class="token operator">=</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i<span class="token punctuation">:</span>
        <span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">raise</span> ValueError

<span class="token keyword">def</span> <span class="token function">find_le</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Find rightmost value less than or equal to x&#39;</span>
    i <span class="token operator">=</span> bisect_right<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i<span class="token punctuation">:</span>
        <span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">raise</span> ValueError

<span class="token keyword">def</span> <span class="token function">find_gt</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Find leftmost value greater than x&#39;</span>
    i <span class="token operator">=</span> bisect_right<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">raise</span> ValueError

<span class="token keyword">def</span> <span class="token function">find_ge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Find leftmost item greater than or equal to x&#39;</span>
    i <span class="token operator">=</span> bisect_left<span class="token punctuation">(</span>a<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">raise</span> ValueError
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),o=[p];function c(i,l){return s(),a("div",null,o)}var k=n(e,[["render",c],["__file","python-bisect.html.vue"]]);export{k as default};
