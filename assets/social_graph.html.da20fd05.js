import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as l,c as r,a as n,b as e,w as c,e as s,d as t,r as o}from"./app.ea83ca89.js";const d={},u=s("\u539F\u6587\u5730\u5740\uFF1A"),_={href:"https://github.com/donnemartin/system-design-primer",target:"_blank",rel:"noopener noreferrer"},k=s("github.com/donnemartin/system-design-primer"),h=s("\u8BD1\u6587\u51FA\u81EA\uFF1A"),m={href:"https://github.com/xitu/gold-miner",target:"_blank",rel:"noopener noreferrer"},v=s("\u6398\u91D1\u7FFB\u8BD1\u8BA1\u5212"),b=s("\u8BD1\u8005\uFF1A"),g={href:"https://github.com/XatMassacrE",target:"_blank",rel:"noopener noreferrer"},f=s("XatMassacrE"),y=s("\u3001"),w={href:"https://github.com/L9m",target:"_blank",rel:"noopener noreferrer"},q=s("L9m"),x=s("\u3001"),N={href:"https://github.com/Airmacho",target:"_blank",rel:"noopener noreferrer"},S=s("Airmacho"),j=s("\u3001"),L={href:"https://github.com/xiaoyusilen",target:"_blank",rel:"noopener noreferrer"},B=s("xiaoyusilen"),I=s("\u3001"),P={href:"https://github.com/jifaxu",target:"_blank",rel:"noopener noreferrer"},Q=s("jifaxu"),A=s("\u3001"),E={href:"https://github.com/sqrthree",target:"_blank",rel:"noopener noreferrer"},R=s("\u6839\u53F7\u4E09"),z=n("h1",{id:"\u4E3A\u793E\u4EA4\u7F51\u7EDC\u8BBE\u8BA1\u6570\u636E\u7ED3\u6784",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E3A\u793E\u4EA4\u7F51\u7EDC\u8BBE\u8BA1\u6570\u636E\u7ED3\u6784","aria-hidden":"true"},"#"),s(" \u4E3A\u793E\u4EA4\u7F51\u7EDC\u8BBE\u8BA1\u6570\u636E\u7ED3\u6784")],-1),C=s("\u6CE8\u91CA\uFF1A\u4E3A\u4E86\u907F\u514D\u91CD\u590D\uFF0C\u8FD9\u7BC7\u6587\u7AE0\u7684\u94FE\u63A5\u76F4\u63A5\u5173\u8054\u5230 "),F={href:"https://github.com/donnemartin/system-design-primer#index-of-system-design-topics",target:"_blank",rel:"noopener noreferrer"},G=s("\u7CFB\u7EDF\u8BBE\u8BA1\u4E3B\u9898"),T=s(" \u7684\u76F8\u5173\u7AE0\u8282\u3002\u4E3A\u4E00\u8BA8\u8BBA\u8981\u70B9\u3001\u6298\u4E2D\u65B9\u6848\u548C\u53EF\u9009\u65B9\u6848\u505A\u53C2\u8003\u3002"),W=t('<h2 id="\u7B2C-1-\u6B65-\u7528\u4F8B\u548C\u7EA6\u675F\u6982\u8981" tabindex="-1"><a class="header-anchor" href="#\u7B2C-1-\u6B65-\u7528\u4F8B\u548C\u7EA6\u675F\u6982\u8981" aria-hidden="true">#</a> \u7B2C 1 \u6B65\uFF1A\u7528\u4F8B\u548C\u7EA6\u675F\u6982\u8981</h2><blockquote><p>\u6536\u96C6\u9700\u6C42\u5E76\u8C03\u67E5\u95EE\u9898\u3002 \u901A\u8FC7\u63D0\u95EE\u6E05\u6670\u7528\u4F8B\u548C\u7EA6\u675F\u3002 \u8BA8\u8BBA\u5047\u8BBE\u3002</p></blockquote><p>\u5982\u679C\u6CA1\u6709\u9762\u8BD5\u5B98\u63D0\u51FA\u660E\u786E\u7684\u95EE\u9898\uFF0C\u6211\u4EEC\u5C06\u81EA\u5DF1\u5B9A\u4E49\u4E00\u4E9B\u7528\u4F8B\u548C\u7EA6\u675F\u6761\u4EF6\u3002</p><h3 id="\u7528\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u7528\u4F8B" aria-hidden="true">#</a> \u7528\u4F8B</h3><h4 id="\u6211\u4EEC\u5C31\u5904\u7406\u4EE5\u4E0B\u7528\u4F8B\u5BA1\u89C6\u8FD9\u4E00\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u6211\u4EEC\u5C31\u5904\u7406\u4EE5\u4E0B\u7528\u4F8B\u5BA1\u89C6\u8FD9\u4E00\u95EE\u9898" aria-hidden="true">#</a> \u6211\u4EEC\u5C31\u5904\u7406\u4EE5\u4E0B\u7528\u4F8B\u5BA1\u89C6\u8FD9\u4E00\u95EE\u9898</h4><ul><li><strong>\u7528\u6237</strong> \u5BFB\u627E\u67D0\u4EBA\u5E76\u663E\u793A\u4E0E\u88AB\u5BFB\u4EBA\u4E4B\u95F4\u7684\u6700\u77ED\u8DEF\u5F84</li><li><strong>\u670D\u52A1</strong> \u9AD8\u53EF\u7528</li></ul><h3 id="\u7EA6\u675F\u548C\u5047\u8BBE" tabindex="-1"><a class="header-anchor" href="#\u7EA6\u675F\u548C\u5047\u8BBE" aria-hidden="true">#</a> \u7EA6\u675F\u548C\u5047\u8BBE</h3><h4 id="\u72B6\u6001\u5047\u8BBE" tabindex="-1"><a class="header-anchor" href="#\u72B6\u6001\u5047\u8BBE" aria-hidden="true">#</a> \u72B6\u6001\u5047\u8BBE</h4><ul><li>\u6D41\u91CF\u5206\u5E03\u4E0D\u5747 <ul><li>\u67D0\u4E9B\u641C\u7D22\u6BD4\u522B\u7684\u66F4\u70ED\u95E8\uFF0C\u540C\u65F6\u67D0\u4E9B\u641C\u7D22\u4EC5\u6267\u884C\u4E00\u6B21</li></ul></li><li>\u56FE\u6570\u636E\u4E0D\u9002\u7528\u5355\u4E00\u673A\u5668</li><li>\u56FE\u7684\u8FB9\u6CA1\u6709\u6743\u91CD</li><li>1 \u5343\u4E07\u7528\u6237</li><li>\u6BCF\u4E2A\u7528\u6237\u5E73\u5747\u6709 50 \u4E2A\u670B\u53CB</li><li>\u6BCF\u6708 10 \u4EBF\u6B21\u670B\u53CB\u641C\u7D22</li></ul>',9),D=s("\u8BAD\u7EC3\u4F7F\u7528\u66F4\u4F20\u7EDF\u7684\u7CFB\u7EDF - \u522B\u7528\u56FE\u7279\u6709\u7684\u89E3\u51B3\u65B9\u6848\u4F8B\u5982 "),M={href:"http://graphql.org/",target:"_blank",rel:"noopener noreferrer"},V=s("GraphQL"),U=s(" \u6216\u56FE\u6570\u636E\u5E93\u5982 "),X={href:"https://neo4j.com/",target:"_blank",rel:"noopener noreferrer"},H=s("Neo4j"),J=s("\u3002"),$=t(`<h4 id="\u8BA1\u7B97\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u7B97\u4F7F\u7528" aria-hidden="true">#</a> \u8BA1\u7B97\u4F7F\u7528</h4><p><strong>\u5411\u4F60\u7684\u9762\u8BD5\u5B98\u5398\u6E05\u4F60\u662F\u5426\u5E94\u8BE5\u505A\u7C97\u7565\u7684\u4F7F\u7528\u8BA1\u7B97</strong></p><ul><li>50 \u4EBF\u670B\u53CB\u5173\u7CFB <ul><li>1 \u4EBF\u7528\u6237 * \u5E73\u5747\u6BCF\u4EBA 50 \u4E2A\u670B\u53CB</li></ul></li><li>\u6BCF\u79D2 400 \u6B21\u641C\u7D22\u8BF7\u6C42</li></ul><p>\u4FBF\u6377\u7684\u8F6C\u6362\u6307\u5357\uFF1A</p><ul><li>\u6BCF\u6708 250 \u4E07\u79D2</li><li>\u6BCF\u79D2 1 \u4E2A\u8BF7\u6C42 = \u6BCF\u6708 250 \u4E07\u6B21\u8BF7\u6C42</li><li>\u6BCF\u79D2 40 \u4E2A\u8BF7\u6C42 = \u6BCF\u6708 1 \u4EBF\u6B21\u8BF7\u6C42</li><li>\u6BCF\u79D2 400 \u4E2A\u8BF7\u6C42 = \u6BCF\u6708 10 \u4EBF\u6B21\u8BF7\u6C42</li></ul><h2 id="\u7B2C-2-\u6B65-\u521B\u5EFA\u9AD8\u7EA7\u8BBE\u8BA1\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u7B2C-2-\u6B65-\u521B\u5EFA\u9AD8\u7EA7\u8BBE\u8BA1\u65B9\u6848" aria-hidden="true">#</a> \u7B2C 2 \u6B65\uFF1A\u521B\u5EFA\u9AD8\u7EA7\u8BBE\u8BA1\u65B9\u6848</h2><blockquote><p>\u7528\u6240\u6709\u91CD\u8981\u7EC4\u4EF6\u6982\u8FF0\u9AD8\u6C34\u5E73\u8BBE\u8BA1</p></blockquote><p><img src="http://i.imgur.com/wxXyq2J.png" alt="Imgur" loading="lazy"></p><h2 id="\u7B2C-3-\u6B65-\u8BBE\u8BA1\u6838\u5FC3\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u7B2C-3-\u6B65-\u8BBE\u8BA1\u6838\u5FC3\u7EC4\u4EF6" aria-hidden="true">#</a> \u7B2C 3 \u6B65\uFF1A\u8BBE\u8BA1\u6838\u5FC3\u7EC4\u4EF6</h2><blockquote><p>\u6DF1\u5165\u6BCF\u4E2A\u6838\u5FC3\u7EC4\u4EF6\u7684\u7EC6\u8282\u3002</p></blockquote><h3 id="\u7528\u4F8B-\u7528\u6237\u641C\u7D22\u67D0\u4EBA\u5E76\u67E5\u770B\u5230\u88AB\u641C\u4EBA\u7684\u6700\u77ED\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u7528\u4F8B-\u7528\u6237\u641C\u7D22\u67D0\u4EBA\u5E76\u67E5\u770B\u5230\u88AB\u641C\u4EBA\u7684\u6700\u77ED\u8DEF\u5F84" aria-hidden="true">#</a> \u7528\u4F8B\uFF1A \u7528\u6237\u641C\u7D22\u67D0\u4EBA\u5E76\u67E5\u770B\u5230\u88AB\u641C\u4EBA\u7684\u6700\u77ED\u8DEF\u5F84</h3><p><strong>\u548C\u4F60\u7684\u9762\u8BD5\u5B98\u8BF4\u6E05\u4F60\u671F\u671B\u7684\u4EE3\u7801\u91CF</strong></p><p>\u6CA1\u6709\u767E\u4E07\u7528\u6237\uFF08\u70B9\uFF09\u7684\u548C\u5341\u4EBF\u670B\u53CB\u5173\u7CFB\uFF08\u8FB9\uFF09\u7684\u9650\u5236\uFF0C\u6211\u4EEC\u80FD\u591F\u7528\u4E00\u822C BFS \u65B9\u6CD5\u89E3\u51B3\u65E0\u6743\u91CD\u6700\u77ED\u8DEF\u5F84\u4EFB\u52A1\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Graph</span><span class="token punctuation">(</span>Graph<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">shortest_path</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> source<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> source <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> dest <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        <span class="token keyword">if</span> source <span class="token keyword">is</span> dest<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span>source<span class="token punctuation">.</span>key<span class="token punctuation">]</span>
        prev_node_keys <span class="token operator">=</span> self<span class="token punctuation">.</span>_shortest_path<span class="token punctuation">(</span>source<span class="token punctuation">,</span> dest<span class="token punctuation">)</span>
        <span class="token keyword">if</span> prev_node_keys <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            path_ids <span class="token operator">=</span> <span class="token punctuation">[</span>dest<span class="token punctuation">.</span>key<span class="token punctuation">]</span>
            prev_node_key <span class="token operator">=</span> prev_node_keys<span class="token punctuation">[</span>dest<span class="token punctuation">.</span>key<span class="token punctuation">]</span>
            <span class="token keyword">while</span> prev_node_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                path_ids<span class="token punctuation">.</span>append<span class="token punctuation">(</span>prev_node_key<span class="token punctuation">)</span>
                prev_node_key <span class="token operator">=</span> prev_node_keys<span class="token punctuation">[</span>prev_node_key<span class="token punctuation">]</span>
            <span class="token keyword">return</span> path_ids<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">_shortest_path</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> source<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">:</span>
        queue <span class="token operator">=</span> deque<span class="token punctuation">(</span><span class="token punctuation">)</span>
        queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>source<span class="token punctuation">)</span>
        prev_node_keys <span class="token operator">=</span> <span class="token punctuation">{</span>source<span class="token punctuation">.</span>key<span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">}</span>
        source<span class="token punctuation">.</span>visit_state <span class="token operator">=</span> State<span class="token punctuation">.</span>visited
        <span class="token keyword">while</span> queue<span class="token punctuation">:</span>
            node <span class="token operator">=</span> queue<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> node <span class="token keyword">is</span> dest<span class="token punctuation">:</span>
                <span class="token keyword">return</span> prev_node_keys
            prev_node <span class="token operator">=</span> node
            <span class="token keyword">for</span> adj_node <span class="token keyword">in</span> node<span class="token punctuation">.</span>adj_nodes<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> adj_node<span class="token punctuation">.</span>visit_state <span class="token operator">==</span> State<span class="token punctuation">.</span>unvisited<span class="token punctuation">:</span>
                    queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>adj_node<span class="token punctuation">)</span>
                    prev_node_keys<span class="token punctuation">[</span>adj_node<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> prev_node<span class="token punctuation">.</span>key
                    adj_node<span class="token punctuation">.</span>visit_state <span class="token operator">=</span> State<span class="token punctuation">.</span>visited
        <span class="token keyword">return</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),K=s("\u6211\u4EEC\u4E0D\u80FD\u5728\u540C\u4E00\u53F0\u673A\u5668\u4E0A\u6EE1\u8DB3\u6240\u6709\u7528\u6237\uFF0C\u6211\u4EEC\u9700\u8981\u901A\u8FC7 "),O=n("strong",null,"\u4EBA\u5458\u670D\u52A1\u5668",-1),Y=s(),Z={href:"https://github.com/donnemartin/system-design-primer#sharding",target:"_blank",rel:"noopener noreferrer"},nn=s("\u62C6\u5206"),sn=s(" \u7528\u6237\u5E76\u4E14\u901A\u8FC7 "),en=n("strong",null,"\u67E5\u8BE2\u670D\u52A1",-1),an=s(" \u8BBF\u95EE\u3002"),tn=n("strong",null,"\u5BA2\u6237\u7AEF",-1),on=s(" \u5411 "),pn=n("strong",null,"\u670D\u52A1\u5668",-1),ln=s(" \u53D1\u9001\u8BF7\u6C42\uFF0C"),rn=n("strong",null,"\u670D\u52A1\u5668",-1),cn=s(" \u4F5C\u4E3A "),dn={href:"https://github.com/donnemartin/system-design-primer#reverse-proxy-web-server",target:"_blank",rel:"noopener noreferrer"},un=s("\u53CD\u5411\u4EE3\u7406"),_n=t("<li><strong>\u641C\u7D22 API</strong> \u670D\u52A1\u5668\u5411 <strong>\u7528\u6237\u56FE\u670D\u52A1</strong> \u8F6C\u53D1\u8BF7\u6C42</li><li><strong>\u7528\u6237\u56FE\u670D\u52A1</strong> \u6709\u4EE5\u4E0B\u529F\u80FD\uFF1A <ul><li>\u4F7F\u7528 <strong>\u67E5\u8BE2\u670D\u52A1</strong> \u627E\u5230\u5F53\u524D\u7528\u6237\u4FE1\u606F\u5B58\u50A8\u7684 <strong>\u4EBA\u5458\u670D\u52A1\u5668</strong></li><li>\u627E\u5230\u9002\u5F53\u7684 <strong>\u4EBA\u5458\u670D\u52A1\u5668</strong> \u68C0\u7D22\u5F53\u524D\u7528\u6237\u7684 <code>friend_ids</code> \u5217\u8868</li><li>\u628A\u5F53\u524D\u7528\u6237\u4F5C\u4E3A <code>source</code> \u8FD0\u884C BFS \u641C\u7D22\u7B97\u6CD5\u540C\u65F6 \u5F53\u524D\u7528\u6237\u7684 <code>friend_ids</code> \u4F5C\u4E3A\u6BCF\u4E2A <code>adjacent_node</code> \u7684 ids</li><li>\u7ED9\u5B9A id \u83B7\u53D6 <code>adjacent_node</code>: <ul><li><strong>\u7528\u6237\u56FE\u670D\u52A1</strong> \u5C06 <strong>\u518D\u6B21</strong> \u548C <strong>\u67E5\u8BE2\u670D\u52A1</strong> \u901A\u8BAF\uFF0C\u6700\u540E\u5224\u65AD\u51FA\u548C\u7ED9\u5B9A id \u76F8\u5339\u914D\u7684\u5B58\u50A8 <code>adjacent_node</code> \u7684 <strong>\u4EBA\u5458\u670D\u52A1\u5668</strong>\uFF08\u6709\u5F85\u4F18\u5316\uFF09</li></ul></li></ul></li>",2),kn=t(`<p><strong>\u548C\u4F60\u7684\u9762\u8BD5\u5B98\u8BF4\u6E05\u4F60\u5E94\u8BE5\u5199\u7684\u4EE3\u7801\u91CF</strong></p><p><strong>\u6CE8\u91CA</strong>\uFF1A\u7B80\u6613\u7248\u9519\u8BEF\u5904\u7406\u6267\u884C\u5982\u4E0B\u3002\u8BE2\u95EE\u4F60\u662F\u5426\u9700\u8981\u7F16\u5199\u9002\u5F53\u7684\u9519\u8BEF\u5904\u7406\u65B9\u6CD5\u3002</p><p><strong>\u67E5\u8BE2\u670D\u52A1</strong> \u5B9E\u73B0\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">LookupService</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>lookup <span class="token operator">=</span> self<span class="token punctuation">.</span>_init_lookup<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># key: person_id, value: person_server</span>

    <span class="token keyword">def</span> <span class="token function">_init_lookup</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token keyword">def</span> <span class="token function">lookup_person_server</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> person_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>lookup<span class="token punctuation">[</span>person_id<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u4EBA\u5458\u670D\u52A1\u5668</strong> \u5B9E\u73B0\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">PersonServer</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>people <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment"># key: person_id, value: person</span>

    <span class="token keyword">def</span> <span class="token function">add_person</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> person<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token keyword">def</span> <span class="token function">people</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> ids<span class="token punctuation">)</span><span class="token punctuation">:</span>
        results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> <span class="token builtin">id</span> <span class="token keyword">in</span> ids<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">id</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>people<span class="token punctuation">:</span>
                results<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>people<span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> results
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7528\u6237</strong> \u5B9E\u73B0\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> friend_ids<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">id</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
        self<span class="token punctuation">.</span>friend_ids <span class="token operator">=</span> friend_ids
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7528\u6237\u56FE\u670D\u52A1</strong> \u5B9E\u73B0\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">UserGraphService</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> lookup_service<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>lookup_service <span class="token operator">=</span> lookup_service

    <span class="token keyword">def</span> <span class="token function">person</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> person_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        person_server <span class="token operator">=</span> self<span class="token punctuation">.</span>lookup_service<span class="token punctuation">.</span>lookup_person_server<span class="token punctuation">(</span>person_id<span class="token punctuation">)</span>
        <span class="token keyword">return</span> person_server<span class="token punctuation">.</span>people<span class="token punctuation">(</span><span class="token punctuation">[</span>person_id<span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">shortest_path</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> source_key<span class="token punctuation">,</span> dest_key<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> source_key <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> dest_key <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        <span class="token keyword">if</span> source_key <span class="token keyword">is</span> dest_key<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span>source_key<span class="token punctuation">]</span>
        prev_node_keys <span class="token operator">=</span> self<span class="token punctuation">.</span>_shortest_path<span class="token punctuation">(</span>source_key<span class="token punctuation">,</span> dest_key<span class="token punctuation">)</span>
        <span class="token keyword">if</span> prev_node_keys <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token comment"># Iterate through the path_ids backwards, starting at dest_key</span>
            path_ids <span class="token operator">=</span> <span class="token punctuation">[</span>dest_key<span class="token punctuation">]</span>
            prev_node_key <span class="token operator">=</span> prev_node_keys<span class="token punctuation">[</span>dest_key<span class="token punctuation">]</span>
            <span class="token keyword">while</span> prev_node_key <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                path_ids<span class="token punctuation">.</span>append<span class="token punctuation">(</span>prev_node_key<span class="token punctuation">)</span>
                prev_node_key <span class="token operator">=</span> prev_node_keys<span class="token punctuation">[</span>prev_node_key<span class="token punctuation">]</span>
            <span class="token comment"># Reverse the list since we iterated backwards</span>
            <span class="token keyword">return</span> path_ids<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">_shortest_path</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> source_key<span class="token punctuation">,</span> dest_key<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Use the id to get the Person</span>
        source <span class="token operator">=</span> self<span class="token punctuation">.</span>person<span class="token punctuation">(</span>source_key<span class="token punctuation">)</span>
        <span class="token comment"># Update our bfs queue</span>
        queue <span class="token operator">=</span> deque<span class="token punctuation">(</span><span class="token punctuation">)</span>
        queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>source<span class="token punctuation">)</span>
        <span class="token comment"># prev_node_keys keeps track of each hop from</span>
        <span class="token comment"># the source_key to the dest_key</span>
        prev_node_keys <span class="token operator">=</span> <span class="token punctuation">{</span>source_key<span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">}</span>
        <span class="token comment"># We&#39;ll use visited_ids to keep track of which nodes we&#39;ve</span>
        <span class="token comment"># visited, which can be different from a typical bfs where</span>
        <span class="token comment"># this can be stored in the node itself</span>
        visited_ids <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        visited_ids<span class="token punctuation">.</span>add<span class="token punctuation">(</span>source<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span>
        <span class="token keyword">while</span> queue<span class="token punctuation">:</span>
            node <span class="token operator">=</span> queue<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> node<span class="token punctuation">.</span>key <span class="token keyword">is</span> dest_key<span class="token punctuation">:</span>
                <span class="token keyword">return</span> prev_node_keys
            prev_node <span class="token operator">=</span> node
            <span class="token keyword">for</span> friend_id <span class="token keyword">in</span> node<span class="token punctuation">.</span>friend_ids<span class="token punctuation">:</span>
                <span class="token keyword">if</span> friend_id <span class="token keyword">not</span> <span class="token keyword">in</span> visited_ids<span class="token punctuation">:</span>
                    friend_node <span class="token operator">=</span> self<span class="token punctuation">.</span>person<span class="token punctuation">(</span>friend_id<span class="token punctuation">)</span>
                    queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>friend_node<span class="token punctuation">)</span>
                    prev_node_keys<span class="token punctuation">[</span>friend_id<span class="token punctuation">]</span> <span class="token operator">=</span> prev_node<span class="token punctuation">.</span>key
                    visited_ids<span class="token punctuation">.</span>add<span class="token punctuation">(</span>friend_id<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),hn=s("\u6211\u4EEC\u7528\u7684\u662F\u516C\u5171\u7684 "),mn={href:"https://github.com/donnemartin/system-design-primer#representational-state-transfer-rest",target:"_blank",rel:"noopener noreferrer"},vn=n("strong",null,"REST API",-1),bn=s("\uFF1A"),gn=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ curl https://social.com/api/v1/friend_search?person_id=1234
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u54CD\u5E94\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{
    &quot;person_id&quot;: &quot;100&quot;,
    &quot;name&quot;: &quot;foo&quot;,
    &quot;link&quot;: &quot;https://social.com/foo&quot;,
},
{
    &quot;person_id&quot;: &quot;53&quot;,
    &quot;name&quot;: &quot;bar&quot;,
    &quot;link&quot;: &quot;https://social.com/bar&quot;,
},
{
    &quot;person_id&quot;: &quot;1234&quot;,
    &quot;name&quot;: &quot;baz&quot;,
    &quot;link&quot;: &quot;https://social.com/baz&quot;,
},
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),fn=s("\u5185\u90E8\u901A\u4FE1\u4F7F\u7528 "),yn={href:"https://github.com/donnemartin/system-design-primer#remote-procedure-call-rpc",target:"_blank",rel:"noopener noreferrer"},wn=s("\u8FDC\u7AEF\u8FC7\u7A0B\u8C03\u7528"),qn=s("\u3002"),xn=n("h2",{id:"\u7B2C-4-\u6B65-\u6269\u5C55\u8BBE\u8BA1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B2C-4-\u6B65-\u6269\u5C55\u8BBE\u8BA1","aria-hidden":"true"},"#"),s(" \u7B2C 4 \u6B65\uFF1A\u6269\u5C55\u8BBE\u8BA1")],-1),Nn=n("blockquote",null,[n("p",null,"\u5728\u7ED9\u5B9A\u7EA6\u675F\u6761\u4EF6\u4E0B\uFF0C\u5B9A\u4E49\u548C\u786E\u8BA4\u74F6\u9888\u3002")],-1),Sn=n("p",null,[n("img",{src:"http://i.imgur.com/cdCv5g7.png",alt:"Imgur",loading:"lazy"})],-1),jn=n("p",null,[n("strong",null,"\u91CD\u8981\uFF1A\u522B\u7B80\u5316\u4ECE\u6700\u521D\u8BBE\u8BA1\u5230\u6700\u7EC8\u8BBE\u8BA1\u7684\u8FC7\u7A0B\uFF01")],-1),Ln=s("\u4F60\u5C06\u8981\u505A\u7684\u662F\uFF1A1) "),Bn=n("strong",null,"\u57FA\u51C6/\u8D1F\u8F7D \u6D4B\u8BD5",-1),In=s("\uFF0C 2) \u74F6\u9888 "),Pn=n("strong",null,"\u6982\u8FF0",-1),Qn=s("\uFF0C 3) \u5F53\u8BC4\u4F30\u53EF\u9009\u548C\u6298\u4E2D\u65B9\u6848\u65F6\u5B9A\u4F4D\u74F6\u9888\uFF0C4) \u91CD\u590D\u3002\u4EE5 "),An=s("\u5728 AWS \u4E0A\u8BBE\u8BA1\u652F\u6301\u767E\u4E07\u7EA7\u5230\u5343\u4E07\u7EA7\u7528\u6237\u7684\u7CFB\u7EDF"),En=s(" \u4E3A\u53C2\u8003\u8FED\u4EE3\u5730\u6269\u5C55\u6700\u521D\u8BBE\u8BA1\u3002"),Rn=n("p",null,[s("\u8BA8\u8BBA\u6700\u521D\u8BBE\u8BA1\u53EF\u80FD\u9047\u5230\u7684\u74F6\u9888\u548C\u5904\u7406\u65B9\u6CD5\u5341\u5206\u91CD\u8981\u3002\u4F8B\u5982\uFF0C\u4EC0\u4E48\u95EE\u9898\u53EF\u4EE5\u901A\u8FC7\u6DFB\u52A0\u591A\u53F0 "),n("strong",null,"Web \u670D\u52A1\u5668"),s(" \u4F5C\u4E3A "),n("strong",null,"\u8D1F\u8F7D\u5747\u8861"),s(" \u89E3\u51B3\uFF1F"),n("strong",null,"CDN"),s("\uFF1F"),n("strong",null,"\u4E3B\u4ECE\u526F\u672C"),s("\uFF1F\u6BCF\u4E2A\u95EE\u9898\u90FD\u6709\u54EA\u4E9B\u66FF\u4EE3\u548C "),n("strong",null,"\u6298\u4E2D"),s(" \u65B9\u6848\uFF1F")],-1),zn=n("p",null,"\u6211\u4EEC\u5373\u5C06\u4ECB\u7ECD\u4E00\u4E9B\u7EC4\u4EF6\u6765\u5B8C\u6210\u8BBE\u8BA1\u548C\u89E3\u51B3\u6269\u5C55\u6027\u95EE\u9898\u3002\u5185\u90E8\u8D1F\u8F7D\u5747\u8861\u4E0D\u663E\u793A\u4EE5\u51CF\u5C11\u6DF7\u4E71\u3002",-1),Cn=n("strong",null,"\u907F\u514D\u91CD\u590D\u8BA8\u8BBA",-1),Fn=s("\uFF0C\u4EE5\u4E0B\u7F51\u5740\u94FE\u63A5\u5230 "),Gn={href:"https://github.com/donnemartin/system-design-primer#index-of-system-design-topics",target:"_blank",rel:"noopener noreferrer"},Tn=s("\u7CFB\u7EDF\u8BBE\u8BA1\u4E3B\u9898"),Wn=s(" \u76F8\u5173\u7684\u4E3B\u6D41\u65B9\u6848\u3001\u6298\u4E2D\u65B9\u6848\u548C\u66FF\u4EE3\u65B9\u6848\u3002"),Dn={href:"https://github.com/donnemartin/system-design-primer#domain-name-system",target:"_blank",rel:"noopener noreferrer"},Mn=s("DNS"),Vn={href:"https://github.com/donnemartin/system-design-primer#load-balancer",target:"_blank",rel:"noopener noreferrer"},Un=s("\u8D1F\u8F7D\u5747\u8861"),Xn={href:"https://github.com/donnemartin/system-design-primer#horizontal-scaling",target:"_blank",rel:"noopener noreferrer"},Hn=s("\u6A2A\u5411\u6269\u5C55"),Jn={href:"https://github.com/donnemartin/system-design-primer#reverse-proxy-web-server",target:"_blank",rel:"noopener noreferrer"},$n=s("Web \u670D\u52A1\u5668\uFF08\u53CD\u5411\u4EE3\u7406\uFF09"),Kn={href:"https://github.com/donnemartin/system-design-primer#application-layer",target:"_blank",rel:"noopener noreferrer"},On=s("API \u670D\u52A1\u5668\uFF08\u5E94\u7528\u5C42\uFF09"),Yn={href:"https://github.com/donnemartin/system-design-primer#cache",target:"_blank",rel:"noopener noreferrer"},Zn=s("\u7F13\u5B58"),ns={href:"https://github.com/donnemartin/system-design-primer#consistency-patterns",target:"_blank",rel:"noopener noreferrer"},ss=s("\u4E00\u81F4\u6027\u6A21\u5F0F"),es={href:"https://github.com/donnemartin/system-design-primer#availability-patterns",target:"_blank",rel:"noopener noreferrer"},as=s("\u53EF\u7528\u6027\u6A21\u5F0F"),ts=n("p",null,[s("\u89E3\u51B3 "),n("strong",null,"\u5E73\u5747"),s(" \u6BCF\u79D2 400 \u6B21\u8BF7\u6C42\u7684\u9650\u5236\uFF08\u5CF0\u503C\uFF09\uFF0C\u4EBA\u5458\u6570\u636E\u53EF\u4EE5\u5B58\u5728\u4F8B\u5982 Redis \u6216 Memcached \u8FD9\u6837\u7684 "),n("strong",null,"\u5185\u5B58"),s(" \u4E2D\u4EE5\u51CF\u5C11\u54CD\u5E94\u6B21\u6570\u548C\u4E0B\u6E38\u6D41\u91CF\u901A\u4FE1\u670D\u52A1\u3002\u8FD9\u5C24\u5176\u5728\u7528\u6237\u6267\u884C\u591A\u6B21\u8FDE\u7EED\u67E5\u8BE2\u548C\u67E5\u8BE2\u54EA\u4E9B\u5E7F\u6CDB\u8FDE\u63A5\u7684\u4EBA\u65F6\u5341\u5206\u6709\u7528\u3002\u4ECE\u5185\u5B58\u4E2D\u8BFB\u53D6 1MB \u6570\u636E\u5927\u7EA6\u8981 250 \u5FAE\u79D2\uFF0C\u4ECE SSD \u4E2D\u8BFB\u53D6\u540C\u6837\u5927\u5C0F\u7684\u6570\u636E\u65F6\u95F4\u8981\u957F 4 \u500D\uFF0C\u4ECE\u786C\u76D8\u8981\u957F 80 \u500D\u3002"),n("sup",null,[n("a",{href:"https://github.com/donnemartin/system-design-primer#latency-numbers-every-programmer-should-know"},"1")])],-1),os=n("p",null,"\u4EE5\u4E0B\u662F\u8FDB\u4E00\u6B65\u4F18\u5316\u65B9\u6848\uFF1A",-1),is=n("li",null,[s("\u5728 "),n("strong",null,"\u5185\u5B58"),s(" \u4E2D\u5B58\u50A8\u5B8C\u6574\u7684\u6216\u90E8\u5206\u7684 BFS \u904D\u5386\u52A0\u5FEB\u540E\u7EED\u67E5\u627E")],-1),ps=n("li",null,[s("\u5728 "),n("strong",null,"NoSQL \u6570\u636E\u5E93"),s(" \u4E2D\u6279\u91CF\u79BB\u7EBF\u8BA1\u7B97\u5E76\u5B58\u50A8\u5B8C\u6574\u7684\u6216\u90E8\u5206\u7684 BFS \u904D\u5386\u52A0\u5FEB\u540E\u7EED\u67E5\u627E")],-1),ls=s("\u5728\u540C\u4E00\u53F0 "),rs=n("strong",null,"\u4EBA\u5458\u670D\u52A1\u5668",-1),cs=s(" \u4E0A\u6258\u7BA1\u6279\u5904\u7406\u540C\u4E00\u6279\u670B\u53CB\u67E5\u627E\u51CF\u5C11\u673A\u5668\u8DF3\u8F6C "),ds=s("\u901A\u8FC7\u5730\u7406\u4F4D\u7F6E "),us={href:"https://github.com/donnemartin/system-design-primer#sharding",target:"_blank",rel:"noopener noreferrer"},_s=s("\u62C6\u5206"),ks=s(),hs=n("strong",null,"\u4EBA\u5458\u670D\u52A1\u5668",-1),ms=s(" \u6765\u8FDB\u4E00\u6B65\u4F18\u5316\uFF0C\u56E0\u4E3A\u670B\u53CB\u901A\u5E38\u4F4F\u5F97\u90FD\u6BD4\u8F83\u8FD1"),vs=n("li",null,"\u540C\u65F6\u8FDB\u884C\u4E24\u4E2A BFS \u67E5\u627E\uFF0C\u4E00\u4E2A\u4ECE source \u5F00\u59CB\uFF0C\u4E00\u4E2A\u4ECE destination \u5F00\u59CB\uFF0C\u7136\u540E\u5408\u5E76\u4E24\u4E2A\u8DEF\u5F84",-1),bs=s("\u4ECE\u6709\u5E9E\u5927\u670B\u53CB\u5708\u7684\u4EBA\u5F00\u59CB\u627E\u8D77\uFF0C\u8FD9\u6837\u66F4\u6709\u53EF\u80FD\u51CF\u5C0F\u5F53\u524D\u7528\u6237\u548C\u641C\u7D22\u76EE\u6807\u4E4B\u95F4\u7684 "),gs={href:"https://en.wikipedia.org/wiki/Six_degrees_of_separation",target:"_blank",rel:"noopener noreferrer"},fs=s("\u79BB\u6563\u5EA6\u6570"),ys=n("li",null,"\u5728\u8BE2\u95EE\u7528\u6237\u662F\u5426\u7EE7\u7EED\u67E5\u8BE2\u4E4B\u524D\u8BBE\u7F6E\u57FA\u4E8E\u65F6\u95F4\u6216\u8DF3\u8DC3\u6570\u9608\u503C\uFF0C\u5F53\u5728\u67D0\u4E9B\u6848\u4F8B\u4E2D\u641C\u7D22\u8017\u8D39\u65F6\u95F4\u8FC7\u957F\u65F6\u3002",-1),ws=s("\u4F7F\u7528\u7C7B\u4F3C "),qs={href:"https://neo4j.com/",target:"_blank",rel:"noopener noreferrer"},xs=s("Neo4j"),Ns=s(" \u7684 "),Ss=n("strong",null,"\u56FE\u6570\u636E\u5E93",-1),js=s(" \u6216\u56FE\u7279\u5B9A\u67E5\u8BE2\u8BED\u6CD5\uFF0C\u4F8B\u5982 "),Ls={href:"http://graphql.org/",target:"_blank",rel:"noopener noreferrer"},Bs=s("GraphQL"),Is=s("\uFF08\u5982\u679C\u6CA1\u6709\u7981\u6B62\u4F7F\u7528 "),Ps=n("strong",null,"\u56FE\u6570\u636E\u5E93",-1),Qs=s(" \u7684\u9650\u5236\u7684\u8BDD\uFF09"),As=n("h2",{id:"\u989D\u5916\u7684\u8BDD\u9898",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u989D\u5916\u7684\u8BDD\u9898","aria-hidden":"true"},"#"),s(" \u989D\u5916\u7684\u8BDD\u9898")],-1),Es=n("blockquote",null,[n("p",null,"\u6839\u636E\u95EE\u9898\u7684\u8303\u56F4\u548C\u5269\u4F59\u65F6\u95F4\uFF0C\u8FD8\u9700\u8981\u6DF1\u5165\u8BA8\u8BBA\u5176\u4ED6\u95EE\u9898\u3002")],-1),Rs=n("h3",{id:"sql-\u6269\u5C55\u6A21\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sql-\u6269\u5C55\u6A21\u5F0F","aria-hidden":"true"},"#"),s(" SQL \u6269\u5C55\u6A21\u5F0F")],-1),zs={href:"https://github.com/donnemartin/system-design-primer#master-slave-replication",target:"_blank",rel:"noopener noreferrer"},Cs=s("\u8BFB\u53D6\u526F\u672C"),Fs={href:"https://github.com/donnemartin/system-design-primer#federation",target:"_blank",rel:"noopener noreferrer"},Gs=s("\u96C6\u5408"),Ts={href:"https://github.com/donnemartin/system-design-primer#sharding",target:"_blank",rel:"noopener noreferrer"},Ws=s("\u5206\u533A"),Ds={href:"https://github.com/donnemartin/system-design-primer#denormalization",target:"_blank",rel:"noopener noreferrer"},Ms=s("\u53CD\u89C4\u8303\u5316"),Vs={href:"https://github.com/donnemartin/system-design-primer#sql-tuning",target:"_blank",rel:"noopener noreferrer"},Us=s("SQL \u8C03\u4F18"),Xs=n("h4",{id:"nosql",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nosql","aria-hidden":"true"},"#"),s(" NoSQL")],-1),Hs={href:"https://github.com/donnemartin/system-design-primer#key-value-store",target:"_blank",rel:"noopener noreferrer"},Js=s("\u952E\u503C\u5B58\u50A8"),$s={href:"https://github.com/donnemartin/system-design-primer#document-store",target:"_blank",rel:"noopener noreferrer"},Ks=s("\u6587\u6863\u5B58\u50A8"),Os={href:"https://github.com/donnemartin/system-design-primer#wide-column-store",target:"_blank",rel:"noopener noreferrer"},Ys=s("\u5BBD\u8868\u5B58\u50A8"),Zs={href:"https://github.com/donnemartin/system-design-primer#graph-database",target:"_blank",rel:"noopener noreferrer"},ne=s("\u56FE\u6570\u636E\u5E93"),se={href:"https://github.com/donnemartin/system-design-primer#sql-or-nosql",target:"_blank",rel:"noopener noreferrer"},ee=s("SQL vs NoSQL"),ae=n("h3",{id:"\u7F13\u5B58",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7F13\u5B58","aria-hidden":"true"},"#"),s(" \u7F13\u5B58")],-1),te=s("\u7F13\u5B58\u5230\u54EA\u91CC "),oe={href:"https://github.com/donnemartin/system-design-primer#client-caching",target:"_blank",rel:"noopener noreferrer"},ie=s("\u5BA2\u6237\u7AEF\u7F13\u5B58"),pe={href:"https://github.com/donnemartin/system-design-primer#cdn-caching",target:"_blank",rel:"noopener noreferrer"},le=s("CDN \u7F13\u5B58"),re={href:"https://github.com/donnemartin/system-design-primer#web-server-caching",target:"_blank",rel:"noopener noreferrer"},ce=s("Web \u670D\u52A1\u7F13\u5B58"),de={href:"https://github.com/donnemartin/system-design-primer#database-caching",target:"_blank",rel:"noopener noreferrer"},ue=s("\u6570\u636E\u5E93\u7F13\u5B58"),_e={href:"https://github.com/donnemartin/system-design-primer#application-caching",target:"_blank",rel:"noopener noreferrer"},ke=s("\u5E94\u7528\u7F13\u5B58"),he=s("\u7F13\u5B58\u4EC0\u4E48 "),me={href:"https://github.com/donnemartin/system-design-primer#caching-at-the-database-query-level",target:"_blank",rel:"noopener noreferrer"},ve=s("\u6570\u636E\u5E93\u8BF7\u6C42\u5C42\u7F13\u5B58"),be={href:"https://github.com/donnemartin/system-design-primer#caching-at-the-object-level",target:"_blank",rel:"noopener noreferrer"},ge=s("\u5BF9\u8C61\u5C42\u7F13\u5B58"),fe=s("\u4F55\u65F6\u66F4\u65B0\u7F13\u5B58 "),ye={href:"https://github.com/donnemartin/system-design-primer#cache-aside",target:"_blank",rel:"noopener noreferrer"},we=s("\u9884\u7559\u7F13\u5B58"),qe={href:"https://github.com/donnemartin/system-design-primer#write-through",target:"_blank",rel:"noopener noreferrer"},xe=s("\u5B8C\u5168\u5199\u5165"),Ne={href:"https://github.com/donnemartin/system-design-primer#write-behind-write-back",target:"_blank",rel:"noopener noreferrer"},Se=s("\u5EF6\u8FDF\u5199 (\u5199\u56DE)"),je={href:"https://github.com/donnemartin/system-design-primer#refresh-ahead",target:"_blank",rel:"noopener noreferrer"},Le=s("\u4E8B\u5148\u66F4\u65B0"),Be=n("h3",{id:"\u5F02\u6B65\u6027\u548C\u5FAE\u670D\u52A1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F02\u6B65\u6027\u548C\u5FAE\u670D\u52A1","aria-hidden":"true"},"#"),s(" \u5F02\u6B65\u6027\u548C\u5FAE\u670D\u52A1")],-1),Ie={href:"https://github.com/donnemartin/system-design-primer#message-queues",target:"_blank",rel:"noopener noreferrer"},Pe=s("\u6D88\u606F\u961F\u5217"),Qe={href:"https://github.com/donnemartin/system-design-primer#task-queues",target:"_blank",rel:"noopener noreferrer"},Ae=s("\u4EFB\u52A1\u961F\u5217"),Ee={href:"https://github.com/donnemartin/system-design-primer#back-pressure",target:"_blank",rel:"noopener noreferrer"},Re=s("\u56DE\u9000\u538B\u529B"),ze={href:"https://github.com/donnemartin/system-design-primer#microservices",target:"_blank",rel:"noopener noreferrer"},Ce=s("\u5FAE\u670D\u52A1"),Fe=n("h3",{id:"\u6C9F\u901A",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6C9F\u901A","aria-hidden":"true"},"#"),s(" \u6C9F\u901A")],-1),Ge=s("\u5173\u4E8E\u6298\u4E2D\u65B9\u6848\u7684\u8BA8\u8BBA: "),Te=s("\u5BA2\u6237\u7AEF\u7684\u5916\u90E8\u901A\u8BAF - "),We={href:"https://github.com/donnemartin/system-design-primer#representational-state-transfer-rest",target:"_blank",rel:"noopener noreferrer"},De=s("\u9075\u5FAA REST \u7684 HTTP APIs"),Me=s("\u5185\u90E8\u901A\u8BAF - "),Ve={href:"https://github.com/donnemartin/system-design-primer#remote-procedure-call-rpc",target:"_blank",rel:"noopener noreferrer"},Ue=s("RPC"),Xe={href:"https://github.com/donnemartin/system-design-primer#service-discovery",target:"_blank",rel:"noopener noreferrer"},He=s("\u670D\u52A1\u63A2\u7D22"),Je=n("h3",{id:"\u5B89\u5168\u6027",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B89\u5168\u6027","aria-hidden":"true"},"#"),s(" \u5B89\u5168\u6027")],-1),$e=s("\u53C2\u8003 "),Ke={href:"https://github.com/donnemartin/system-design-primer#security",target:"_blank",rel:"noopener noreferrer"},Oe=s("\u5B89\u5168\u7AE0\u8282"),Ye=n("h3",{id:"\u5EF6\u8FDF\u6570\u5B57\u6307\u6807",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5EF6\u8FDF\u6570\u5B57\u6307\u6807","aria-hidden":"true"},"#"),s(" \u5EF6\u8FDF\u6570\u5B57\u6307\u6807")],-1),Ze=s("\u67E5\u9605 "),na={href:"https://github.com/donnemartin/system-design-primer#latency-numbers-every-programmer-should-know",target:"_blank",rel:"noopener noreferrer"},sa=s("\u6BCF\u4E2A\u7A0B\u5E8F\u5458\u5FC5\u61C2\u7684\u5EF6\u8FDF\u6570\u5B57"),ea=n("h3",{id:"\u6B63\u5728\u8FDB\u884C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6B63\u5728\u8FDB\u884C","aria-hidden":"true"},"#"),s(" \u6B63\u5728\u8FDB\u884C")],-1),aa=n("ul",null,[n("li",null,"\u7EE7\u7EED\u57FA\u51C6\u6D4B\u8BD5\u5E76\u76D1\u63A7\u4F60\u7684\u7CFB\u7EDF\u4EE5\u89E3\u51B3\u51FA\u73B0\u7684\u74F6\u9888\u95EE\u9898"),n("li",null,"\u6269\u5C55\u662F\u4E00\u4E2A\u8FED\u4EE3\u7684\u8FC7\u7A0B")],-1);function ta(oa,ia){const a=o("ExternalLinkIcon"),i=o("RouterLink");return l(),r("div",null,[n("blockquote",null,[n("ul",null,[n("li",null,[u,n("a",_,[k,e(a)])]),n("li",null,[h,n("a",m,[v,e(a)])]),n("li",null,[b,n("a",g,[f,e(a)]),y,n("a",w,[q,e(a)]),x,n("a",N,[S,e(a)]),j,n("a",L,[B,e(a)]),I,n("a",P,[Q,e(a)]),A,n("a",E,[R,e(a)])])])]),z,n("p",null,[n("strong",null,[C,n("a",F,[G,e(a)]),T])]),W,n("p",null,[D,n("a",M,[V,e(a)]),U,n("a",X,[H,e(a)]),J]),$,n("p",null,[K,O,Y,n("a",Z,[nn,e(a)]),sn,en,an]),n("ul",null,[n("li",null,[tn,on,pn,ln,rn,cn,n("a",dn,[un,e(a)])]),_n]),kn,n("p",null,[hn,n("a",mn,[vn,e(a)]),bn]),gn,n("p",null,[fn,n("a",yn,[wn,e(a)]),qn]),xn,Nn,Sn,jn,n("p",null,[Ln,Bn,In,Pn,Qn,e(i,{to:"/code/system-design/system-design-primer/scaling_aws.html"},{default:c(()=>[An]),_:1}),En]),Rn,zn,n("p",null,[Cn,Fn,n("a",Gn,[Tn,e(a)]),Wn]),n("ul",null,[n("li",null,[n("a",Dn,[Mn,e(a)])]),n("li",null,[n("a",Vn,[Un,e(a)])]),n("li",null,[n("a",Xn,[Hn,e(a)])]),n("li",null,[n("a",Jn,[$n,e(a)])]),n("li",null,[n("a",Kn,[On,e(a)])]),n("li",null,[n("a",Yn,[Zn,e(a)])]),n("li",null,[n("a",ns,[ss,e(a)])]),n("li",null,[n("a",es,[as,e(a)])])]),ts,os,n("ul",null,[is,ps,n("li",null,[ls,rs,cs,n("ul",null,[n("li",null,[ds,n("a",us,[_s,e(a)]),ks,hs,ms])])]),vs,n("li",null,[bs,n("a",gs,[fs,e(a)])]),ys,n("li",null,[ws,n("a",qs,[xs,e(a)]),Ns,Ss,js,n("a",Ls,[Bs,e(a)]),Is,Ps,Qs])]),As,Es,Rs,n("ul",null,[n("li",null,[n("a",zs,[Cs,e(a)])]),n("li",null,[n("a",Fs,[Gs,e(a)])]),n("li",null,[n("a",Ts,[Ws,e(a)])]),n("li",null,[n("a",Ds,[Ms,e(a)])]),n("li",null,[n("a",Vs,[Us,e(a)])])]),Xs,n("ul",null,[n("li",null,[n("a",Hs,[Js,e(a)])]),n("li",null,[n("a",$s,[Ks,e(a)])]),n("li",null,[n("a",Os,[Ys,e(a)])]),n("li",null,[n("a",Zs,[ne,e(a)])]),n("li",null,[n("a",se,[ee,e(a)])])]),ae,n("ul",null,[n("li",null,[te,n("ul",null,[n("li",null,[n("a",oe,[ie,e(a)])]),n("li",null,[n("a",pe,[le,e(a)])]),n("li",null,[n("a",re,[ce,e(a)])]),n("li",null,[n("a",de,[ue,e(a)])]),n("li",null,[n("a",_e,[ke,e(a)])])])]),n("li",null,[he,n("ul",null,[n("li",null,[n("a",me,[ve,e(a)])]),n("li",null,[n("a",be,[ge,e(a)])])])]),n("li",null,[fe,n("ul",null,[n("li",null,[n("a",ye,[we,e(a)])]),n("li",null,[n("a",qe,[xe,e(a)])]),n("li",null,[n("a",Ne,[Se,e(a)])]),n("li",null,[n("a",je,[Le,e(a)])])])])]),Be,n("ul",null,[n("li",null,[n("a",Ie,[Pe,e(a)])]),n("li",null,[n("a",Qe,[Ae,e(a)])]),n("li",null,[n("a",Ee,[Re,e(a)])]),n("li",null,[n("a",ze,[Ce,e(a)])])]),Fe,n("ul",null,[n("li",null,[Ge,n("ul",null,[n("li",null,[Te,n("a",We,[De,e(a)])]),n("li",null,[Me,n("a",Ve,[Ue,e(a)])])])]),n("li",null,[n("a",Xe,[He,e(a)])])]),Je,n("p",null,[$e,n("a",Ke,[Oe,e(a)])]),Ye,n("p",null,[Ze,n("a",na,[sa,e(a)])]),ea,aa])}var ra=p(d,[["render",ta],["__file","social_graph.html.vue"]]);export{ra as default};
