import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";import{o as i,c as l,a as n,b as a,w as r,e as s,d as e,r as o}from"./app.5e11581e.js";const u={},d={class:"custom-container warning"},k=n("p",{class:"custom-container-title"},"\u6CE8\u610F",-1),h=s("\u8FD9\u91CC\u5B9E\u9645\u4E0A\u5C31\u662F\u5B98\u65B9\u6587\u6863\u7684\u642C\u8FD0\uFF0C\u975E\u5E38\u4E0D\u5B8C\u6574\uFF0C\u5EFA\u8BAE\u76F4\u63A5\u770B"),_={href:"https://docs.python.org/zh-cn/3.10/library/asyncio.html",target:"_blank",rel:"noopener noreferrer"},m=s("\u5B98\u65B9\u6587\u6863"),v=s("\u3002"),y=n("h2",{id:"asyncio-\u2014-\u5F02\u6B65-i-o-\u534F\u7A0B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#asyncio-\u2014-\u5F02\u6B65-i-o-\u534F\u7A0B","aria-hidden":"true"},"#"),s(" asyncio \u2014 \u5F02\u6B65 I/O & \u534F\u7A0B")],-1),b=s("\u534F\u7A0B\u8FD0\u884C\u7684\u539F\u7406\u89C1\uFF1A "),f=s("\u534F\u7A0B\u7684\u539F\u7406\u4EE5\u53CA\u4EE3\u7801"),g=e("<p>asyncio \u662F\u7528\u6765\u7F16\u5199 \xA0<strong>\u5E76\u53D1</strong>\xA0 \u4EE3\u7801\u7684\u5E93\uFF0C\u4F7F\u7528 \xA0<strong>async/await</strong>\xA0 \u8BED\u6CD5\u3002</p><p>asyncio \u88AB\u7528\u4F5C\u591A\u4E2A\u63D0\u4F9B\u9AD8\u6027\u80FD Python \u5F02\u6B65\u6846\u67B6\u7684\u57FA\u7840\uFF0C\u5305\u62EC\u7F51\u7EDC\u548C\u7F51\u7AD9\u670D\u52A1\uFF0C\u6570\u636E\u5E93\u8FDE\u63A5\u5E93\uFF0C\u5206\u5E03\u5F0F\u4EFB\u52A1\u961F\u5217\u7B49\u7B49\u3002</p><p>asyncio \u5F80\u5F80\u662F\u6784\u5EFA IO \u5BC6\u96C6\u578B\u548C\u9AD8\u5C42\u7EA7 \xA0<strong>\u7ED3\u6784\u5316</strong>\xA0 \u7F51\u7EDC\u4EE3\u7801\u7684\u6700\u4F73\u9009\u62E9\u3002</p><p>asyncio \u63D0\u4F9B\u4E00\u7EC4 \xA0<strong>\u9AD8\u5C42\u7EA7</strong>\xA0API \u7528\u4E8E:</p>",4),w=s("\u5E76\u53D1\u5730 \xA0"),x={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#coroutine",target:"_blank",rel:"noopener noreferrer"},z=s("\u8FD0\u884C Python \u534F\u7A0B"),T=s("\xA0 \u5E76\u5BF9\u5176\u6267\u884C\u8FC7\u7A0B\u5B9E\u73B0\u5B8C\u5168\u63A7\u5236;"),q=s("\u6267\u884C \xA0"),E={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-stream.html#asyncio-streams",target:"_blank",rel:"noopener noreferrer"},C=s("\u7F51\u7EDC IO \u548C IPC"),F=s(";"),S=s("\u63A7\u5236 \xA0"),I={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-subprocess.html#asyncio-subprocess",target:"_blank",rel:"noopener noreferrer"},A=s("\u5B50\u8FDB\u7A0B"),P=s(";"),L=s("\u901A\u8FC7 \xA0"),N={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html#asyncio-queues",target:"_blank",rel:"noopener noreferrer"},O=s("\u961F\u5217"),j=s("\xA0 \u5B9E\u73B0\u5206\u5E03\u5F0F\u4EFB\u52A1;"),Q={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#asyncio-sync",target:"_blank",rel:"noopener noreferrer"},B=s("\u540C\u6B65"),R=s("\xA0 \u5E76\u53D1\u4EE3\u7801;"),W=n("p",null,[s("\u6B64\u5916\uFF0C\u8FD8\u6709\u4E00\u4E9B \xA0"),n("strong",null,"\u4F4E\u5C42\u7EA7"),s("\xA0API \u4EE5\u652F\u6301 \xA0"),n("em",null,"\u5E93\u548C\u6846\u67B6\u7684\u5F00\u53D1\u8005"),s("\xA0 \u5B9E\u73B0:")],-1),X=s("\u521B\u5EFA\u548C\u7BA1\u7406 \xA0"),D={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-eventloop.html#asyncio-event-loop",target:"_blank",rel:"noopener noreferrer"},V=s("\u4E8B\u4EF6\u5FAA\u73AF"),M=s("\uFF0C\u4EE5\u63D0\u4F9B\u5F02\u6B65 API \u7528\u4E8E \xA0"),U={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-eventloop.html#asyncio.loop.create_server",target:"_blank",rel:"noopener noreferrer"},G=s("\u7F51\u7EDC\u5316"),H=s(", \u8FD0\u884C \xA0"),J={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-eventloop.html#asyncio.loop.subprocess_exec",target:"_blank",rel:"noopener noreferrer"},K=s("\u5B50\u8FDB\u7A0B"),Y=s("\uFF0C\u5904\u7406 \xA0"),Z={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-eventloop.html#asyncio.loop.add_signal_handler",target:"_blank",rel:"noopener noreferrer"},$=s("OS \u4FE1\u53F7"),nn=s("\xA0 \u7B49\u7B49;"),sn=s("\u4F7F\u7528 \xA0"),an={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-protocol.html#asyncio-transports-protocols",target:"_blank",rel:"noopener noreferrer"},tn=s("transports"),en=s("\xA0 \u5B9E\u73B0\u9AD8\u6548\u7387\u534F\u8BAE;"),on=s("\u901A\u8FC7 async/await \u8BED\u6CD5 \xA0"),pn={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-future.html#asyncio-futures",target:"_blank",rel:"noopener noreferrer"},cn=s("\u6865\u63A5"),ln=s("\xA0 \u57FA\u4E8E\u56DE\u8C03\u7684\u5E93\u548C\u4EE3\u7801\u3002"),rn=e(`<h2 id="\u534F\u7A0B\u4E0E\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B\u4E0E\u4EFB\u52A1" aria-hidden="true">#</a> \u534F\u7A0B\u4E0E\u4EFB\u52A1 <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></h2><h3 id="\u534F\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B" aria-hidden="true">#</a> \u534F\u7A0B</h3><p>\u901A\u8FC7 async/await \u5173\u952E\u5B57\u6765\u5B9A\u4E49\u7684\u534F\u7A0B\u662F\u4E00\u79CD\u88AB\u63A8\u8350\u7684\u7F16\u5199\u5F02\u6B65\u7A0B\u5E8F\u7684\u65B9\u5F0F\u3002</p><p>\u4E0B\u9762\u7684\u4EE3\u7801\u5B9A\u4E49\u5E76\u8FD0\u884C\u4E86\u4E00\u4E2A\u534F\u7A0B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> asyncio

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
hello
world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF1A\u7B80\u5355\u5730\u8C03\u7528\u4E00\u4E2A\u534F\u7A0B\u5E76\u4E0D\u4F1A\u4F7F\u5176\u88AB\u8C03\u5EA6\u6267\u884C\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> main<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span>coroutine <span class="token builtin">object</span> main at <span class="token number">0x1053bb7c8</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u6B63\u5728\u8FD0\u884C\u4E00\u4E2A\u534F\u7A0B\uFF0Casyncio \u63D0\u4F9B\u4E86\u4E09\u79CD\u4E3B\u8981\u673A\u5236\uFF1A</p><ol><li><p><code>asyncio.run()</code> \u51FD\u6570\u7528\u6765\u8FD0\u884C\u6700\u9AD8\u5C42\u7EA7\u7684\u5165\u53E3\u70B9 \u201Cmain()\u201D \u51FD\u6570</p></li><li><p><code>await</code> \u4E00\u4E2A\u534F\u7A0B\u3002\u4EE5\u4E0B\u4EE3\u7801\u4F1A\u5728\u7B49\u5F85 1 \u79D2\u540E\u6253\u5370\u201Chello\u201D\uFF0C\u7136\u540E\u7B49\u5F85 2 \u79D2\u540E\u6253\u5370\u201Cworld\u201D\u3002\uFF08await \u4E00\u4E2A\u534F\u7A0B\u4F1A\u8BA9\u5176\u5F00\u59CB\u8FD0\u884C\uFF0C\u5E76\u7B49\u5F85\u5176\u5B8C\u6210\uFF09</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> time

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">say_after</span><span class="token punctuation">(</span>delay<span class="token punctuation">,</span> what<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>what<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;started at </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">await</span> say_after<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> say_after<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;finished at </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># started at 17:13:52</span>
<span class="token comment"># hello</span>
<span class="token comment"># world</span>
<span class="token comment"># finished at 17:13:55</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>asyncio.create_task()</code> \u51FD\u6570\u7528\u6765\u5E76\u53D1\u8FD0\u884C\u4F5C\u4E3A asyncio \u4EFB\u52A1\u7684\u591A\u4E2A\u534F\u7A0B\u3002\uFF08create_task()\u4E4B\u540E\u4F1A\u4F7F\u4EFB\u52A1\u51FA\u4E8E\u5C31\u7EEA\u72B6\u6001\u968F\u65F6\u51C6\u5907\u8FD0\u884C\uFF0C\u800C await task \u5219\u662F\u7B49\u5F85\u8FD9\u4E2A\u4EFB\u52A1\u8FD0\u884C\u5B8C\u6210\uFF09</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    task1 <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>
        say_after<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    task2 <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>
        say_after<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;started at </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token comment"># Wait until both tasks are completed (should take</span>
    <span class="token comment"># around 2 seconds.)</span>
    <span class="token keyword">await</span> task1
    <span class="token keyword">await</span> task2

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;finished at </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

<span class="token comment"># \u6BD4\u4E0A\u9762\u7684\u8981\u5FEB1\u79D2\uFF0C\u56E0\u4E3A\u4E24\u4E2Atask\u662F\u540C\u65F6\u8FD0\u884C\u7684</span>
<span class="token comment"># started at 17:14:32</span>
<span class="token comment"># hello</span>
<span class="token comment"># world</span>
<span class="token comment"># finished at 17:14:34</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="\u53EF\u7B49\u5F85\u5BF9\u8C61-awaitable-objects" tabindex="-1"><a class="header-anchor" href="#\u53EF\u7B49\u5F85\u5BF9\u8C61-awaitable-objects" aria-hidden="true">#</a> \u53EF\u7B49\u5F85\u5BF9\u8C61 awaitable objects</h3><p>\u5982\u679C\u4E00\u4E2A\u5BF9\u8C61\u53EF\u4EE5\u5728 await \u8BED\u53E5\u4E2D\u4F7F\u7528\uFF0C\u90A3\u4E48\u5B83\u5C31\u662F awaitable \u5BF9\u8C61\u3002\u8BB8\u591A asyncio API \u90FD\u88AB\u8BBE\u8BA1\u4E3A\u63A5\u53D7 awaitable \u5BF9\u8C61\u3002</p><p>\u53EF\u7B49\u5F85 \u5BF9\u8C61\u6709\u4E09\u79CD\u4E3B\u8981\u7C7B\u578B\uFF1A\u534F\u7A0B\uFF08Coroutine\uFF09\u3001\u4EFB\u52A1\uFF08Task\uFF09\u3001Future\u3002</p><h3 id="\u534F\u7A0B-1" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B-1" aria-hidden="true">#</a> \u534F\u7A0B</h3><p>Python \u534F\u7A0B\u5C5E\u4E8E\u53EF\u7B49\u5F85\u5BF9\u8C61\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5728\u5176\u4ED6\u534F\u7A0B\u4E2D\u88AB\u7B49\u5F85\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">nested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">42</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Nothing happens if we just call &quot;nested()&quot;.</span>
    <span class="token comment"># A coroutine object is created but not awaited,</span>
    <span class="token comment"># so it *won&#39;t run at all*.</span>
    nested<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># \u8FD9\u4E2A\u4E0D\u4F1A\u8FD0\u884C\uFF0C\u53EA\u662F\u5355\u7EAF\u8FD4\u56DE\u4E86\u4E00\u4E2Acoroutine\u5BF9\u8C61</span>

    <span class="token comment"># Let&#39;s do it differently now and await it:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> nested<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># will print &quot;42&quot;.  # \u8FD9\u91CC\u4F1A\u8FD0\u884C\uFF0C\u56E0\u4E3A\u6709await</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u91CD\u8981</strong></p><p>\u5728\u672C\u6587\u6863\u4E2D &quot;\u534F\u7A0B&quot; \u53EF\u7528\u6765\u8868\u793A\u4E24\u4E2A\u7D27\u5BC6\u5173\u8054\u7684\u6982\u5FF5:</p><ul><li><em>\u534F\u7A0B\u51FD\u6570</em>: \u5B9A\u4E49\u5F62\u5F0F\u4E3A \xA0<code>[async def](https://docs.python.org/zh-cn/3/reference/compound_stmts.html#async-def)</code>\xA0 \u7684\u51FD\u6570;</li><li><em>\u534F\u7A0B\u5BF9\u8C61</em>: \u8C03\u7528 \xA0<em>\u534F\u7A0B\u51FD\u6570</em>\xA0 \u6240\u8FD4\u56DE\u7684\u5BF9\u8C61\u3002</li></ul><h3 id="\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u4EFB\u52A1" aria-hidden="true">#</a> \u4EFB\u52A1</h3><p>Task \u88AB\u7528\u6765 \u201C\u5E76\u884C\u5730\u201D \u8C03\u5EA6\u534F\u7A0B\u3002</p><p>\u5F53\u4E00\u4E2A\u534F\u7A0B\u901A\u8FC7 asyncio.create_task() \u7B49\u51FD\u6570\u88AB\u5C01\u88C5\u4E3A\u4E86\u4E00\u4E2A Task\uFF0C\u8BE5\u534F\u7A0B\u4F1A\u88AB\u81EA\u52A8\u8C03\u5EA6\u6267\u884C\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">nested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">42</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Schedule nested() to run soon concurrently</span>
    <span class="token comment"># with &quot;main()&quot;.</span>
    task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>nested<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># \u8FD9\u91CC task \u5C31\u5F00\u59CB\u8FD0\u884C\u4E86</span>

    <span class="token comment"># &quot;task&quot; can now be used to cancel &quot;nested()&quot;, or</span>
    <span class="token comment"># can simply be awaited to wait until it is complete:</span>
    <span class="token keyword">await</span> task  <span class="token comment"># \u8FD9\u91CC\u53EA\u662F\u5355\u7EAF\u5730\u7B49\u5F85\u5176\u8FD0\u884C\u5B8C</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="futures" tabindex="-1"><a class="header-anchor" href="#futures" aria-hidden="true">#</a> Futures</h3><p>Future \u662F\u4E00\u79CD\u7279\u6B8A\u7684 <strong>\u4F4E\u5C42\u7EA7</strong> \u53EF\u7B49\u5F85\u5BF9\u8C61\uFF0C\u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u7684 <strong>\u6700\u7EC8\u7ED3\u679C</strong>\u3002</p><p>\u5F53\u4E00\u4E2A Future \u5BF9\u8C61 <em>\u88AB\u7B49\u5F85</em>\uFF0C\u8FD9\u610F\u5473\u7740\u534F\u7A0B\u5C06\u4FDD\u6301\u7B49\u5F85\u76F4\u5230\u8BE5 Future \u5BF9\u8C61\u5728\u5176\u4ED6\u5730\u65B9\u64CD\u4F5C\u5B8C\u6BD5\u3002</p><p>\u5728 asyncio \u4E2D\u9700\u8981 Future \u5BF9\u8C61\u4EE5\u4FBF\u5141\u8BB8 async/await \u4F7F\u7528\u57FA\u4E8E\u56DE\u8C03\u7684\u4EE3\u7801\u3002</p><p>\u901A\u5E38\u60C5\u51B5\u4E0B <strong>\u6CA1\u6709\u5FC5\u8981</strong> \u5728\u5E94\u7528\u5C42\u7EA7\u7684\u4EE3\u7801\u4E2D\u521B\u5EFA Future \u5BF9\u8C61\u3002</p><p>Future \u5BF9\u8C61\u6709\u65F6\u4F1A\u7531\u5E93\u548C\u67D0\u4E9B asyncio API \u66B4\u9732\u7ED9\u7528\u6237\uFF0C\u7528\u4F5C\u53EF\u7B49\u5F85\u5BF9\u8C61\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> function_that_returns_a_future_object<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># this is also valid:</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>
        function_that_returns_a_future_object<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        some_python_coroutine<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u4E2A\u5F88\u597D\u7684\u8FD4\u56DE\u5BF9\u8C61\u7684\u4F4E\u5C42\u7EA7\u51FD\u6570\u7684\u793A\u4F8B\u662F\uFF1Aloop.run_in_executor()</p><h3 id="\u8FD0\u884C-asyncio-\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C-asyncio-\u7A0B\u5E8F" aria-hidden="true">#</a> \u8FD0\u884C asyncio \u7A0B\u5E8F</h3><p><code>asyncio.run(coro, *, debug=False)</code></p><p>\u6267\u884C coro \u5E76\u8FD4\u56DE\u7ED3\u679C\u3002</p><p>\u5403\u51FD\u6570\u4F1A\u8FD0\u884C\u4F20\u5165\u7684\u534F\u7A0B\uFF0C\u8D1F\u8D23\u7BA1\u7406 asyncio \u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u7EC8\u7ED3\u5F02\u6B65\u751F\u6210\u5668\uFF0C\u5E76\u5173\u95ED\u7EBF\u7A0B\u6C60\u3002</p><p>\u4F46\u6709\u5176\u4ED6 asyncio \u4E8B\u4EF6\u5FAA\u73AF\u5728\u540C\u4E00\u7EBF\u7A0B\u4E2D\u8FD0\u884C\u65F6\uFF0C\u6B64\u51FD\u6570\u4E0D\u80FD\u88AB\u8C03\u7528\u3002</p><p>\u5982\u679C debug \u4E3A True\uFF0C\u4E8B\u4EF6\u5FAA\u73AF\u5C06\u4EE5\u8C03\u8BD5\u6A21\u5F0F\u8FD0\u884C\u3002</p><p>\u6B64\u51FD\u6570<strong>\u603B\u662F\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u4E8B\u4EF6\u5FAA\u73AF</strong>\u5E76\u5728\u7ED3\u675F\u65F6\u5173\u95ED\u4E4B\u3002\u5B83\u5E94\u5F53\u7528\u4F5C asyncio \u7A0B\u5E8F\u7684\u4E3B\u5165\u53E3\u70B9\uFF0C\u7406\u60F3\u60C5\u51B5\u4E0B\u5E94\u5F53\u53EA\u88AB\u8C03\u7528\u4E00\u6B21\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u521B\u5EFA\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u4EFB\u52A1" aria-hidden="true">#</a> \u521B\u5EFA\u4EFB\u52A1</h3><p><code>asyncio.create_task(coro, *, name=None)</code></p><p>\u5C06 coro \u5C01\u88C5\u4E3A\u4E00\u4E2A Task \u5E76\u8C03\u5EA6\u5176\u6267\u884C\u3002\u8FD4\u56DE Task \u5BF9\u8C61\u3002</p><p>name \u4E0D\u4E3A None \u65F6\uFF0C\u5B83\u5C06\u4F7F\u7528 Task.set_name() \u6765\u8BBE\u4E3A\u4EFB\u52A1\u7684\u540D\u79F0\u3002</p><p>\u8BE5\u4EFB\u52A1\u4F1A\u5728 get_running_loop() \u8FD4\u56DE\u7684\u5FAA\u73AF\u4E2D\u6267\u884C\uFF0C\u5982\u679C\u5F53\u524D\u7EBF\u7A0B\u6CA1\u6709\u5728\u8FD0\u884C\u7684\u5FAA\u73AF\u5219\u4F1A\u5F15\u53D1 RuntimeError\u3002</p><div class="custom-container info"><p class="custom-container-title">\u76F8\u5173\u4FE1\u606F</p><p>\u9700\u8981\u4FDD\u5B58\u8FD9\u4E2A\u65B9\u6CD5\u8FD4\u56DE\u503C Task \u7684\u5F15\u7528\uFF0C\u56E0\u4E3A event_loop \u4E2D\u53EA\u4F1A\u4FDD\u5B58\u4E00\u4E2A\u5F31\u5F15\u7528\uFF0C\u5982\u679C\u4E0D\u4FDD\u5B58\u5F15\u7528\uFF0C\u53EF\u80FD\u8FD9\u4E2A\u534F\u7A0B\u6CA1\u6709\u88AB\u6267\u884C\u5B8C\u6BD5\u5C31\u88AB\u5783\u573E\u56DE\u6536\u7ED9\u6E05\u7406\u4E86\u3002</p></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>background_tasks <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>some_coro<span class="token punctuation">(</span>param<span class="token operator">=</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment"># Add task to the set. This creates a strong reference.</span>
    background_tasks<span class="token punctuation">.</span>add<span class="token punctuation">(</span>task<span class="token punctuation">)</span>

    <span class="token comment"># To prevent keeping references to finished tasks forever,</span>
    <span class="token comment"># make each task remove its own reference from the set after</span>
    <span class="token comment"># completion:</span>
    task<span class="token punctuation">.</span>add_done_callback<span class="token punctuation">(</span>background_tasks<span class="token punctuation">.</span>discard<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F11\u7720" tabindex="-1"><a class="header-anchor" href="#\u4F11\u7720" aria-hidden="true">#</a> \u4F11\u7720</h3><p><code>coroutine asyncio.sleep(delay, result=None)</code></p><p>\u963B\u585E delay \u6307\u5B9A\u7684\u79D2\u6570\u3002</p><p>\u5982\u679C\u6307\u5B9A\u4E86 result\uFF0C\u5219\u5F53\u534F\u7A0B\u5B8C\u6210\u65F6 result \u5176\u8FD4\u56DE\u7ED9\u8C03\u7528\u8005\u3002</p><p>sleep() \u603B\u662F\u4F1A\u6302\u8D77\u5F53\u524D\u4EFB\u52A1\uFF0C\u4EE5\u5141\u8BB8\u5176\u4ED6\u4EFB\u52A1\u8FD0\u884C\u3002</p><p>\u5C06 delay \u8BBE\u4E3A 0 \u5C06\u63D0\u4F9B\u4E00\u4E2A\u7ECF\u4F18\u5316\u7684\u8DEF\u5F84\u4EE5\u5141\u8BB8\u5176\u4ED6\u4EFB\u52A1\u8FD0\u884C\u3002 \u8FD9\u53EF\u4F9B\u957F\u671F\u95F4\u8FD0\u884C\u7684\u51FD\u6570\u4F7F\u7528\u4EE5\u907F\u514D\u5728\u51FD\u6570\u8C03\u7528\u7684\u5168\u8FC7\u7A0B\u4E2D\u963B\u585E\u4E8B\u4EF6\u5FAA\u73AF\u3002</p><p>\u4EE5\u4E0B\u534F\u7A0B\u793A\u4F8B\u8FD0\u884C 5 \u79D2\uFF0C\u6BCF\u79D2\u663E\u793A\u4E00\u6B21\u5F53\u524D\u65E5\u671F:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> datetime

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">display_date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_running_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    end_time <span class="token operator">=</span> loop<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">5.0</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>loop<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> end_time<span class="token punctuation">:</span>
            <span class="token keyword">break</span>
        <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>display_date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E76\u53D1\u8FD0\u884C\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1\u8FD0\u884C\u4EFB\u52A1" aria-hidden="true">#</a> \u5E76\u53D1\u8FD0\u884C\u4EFB\u52A1</h3><p><code>awaitable asyncio.gather(*aws, return_exceptions=False)</code></p><p><em>\u5E76\u53D1</em> \u8FD0\u884C aws \u5E8F\u5217\u4E2D\u7684 \u53EF\u7B49\u5F85\u5BF9\u8C61\u3002</p><p>\u5982\u679C aws \u4E2D\u7684\u67D0\u4E2A\u53EF\u7B49\u5F85\u5BF9\u8C61\u4E3A\u534F\u7A0B\uFF0C\u5B83\u5C06\u81EA\u52A8\u88AB\u4F5C\u4E3A\u4E00\u4E2A\u4EFB\u52A1\u8C03\u5EA6\u3002</p><p>\u5982\u679C\u6240\u6709\u53EF\u7B49\u5F85\u5BF9\u8C61\u90FD\u6210\u529F\u5B8C\u6210\uFF0C\u7ED3\u679C\u5C06\u662F\u4E00\u4E2A\u7531\u6240\u6709\u8FD4\u56DE\u503C\u805A\u5408\u800C\u5C42\u7684\u5217\u8868\u3002\u7ED3\u679C\u503C\u7684\u987A\u5E8F\u4E0E aws \u4E2D\u53EF\u7B49\u5F85\u5BF9\u8C61\u7684<strong>\u987A\u5E8F\u4E00\u81F4</strong>\u3002</p><p>\u5982\u679C return_exceptions \u4E3A False\uFF0C\u6240\u5F15\u53D1\u7684\u9996\u4E2A\u5F02\u5E38\u4F1A\u7ACB\u5373\u4F20\u64AD\u7ED9\u7B49\u5F85 gather() \u7684\u4EFB\u52A1\u3002aws \u5E8F\u5217\u4E2D\u7684\u5176\u4ED6\u53EF\u7B49\u5F85\u5BF9\u8C61 <strong>\u4E0D\u4F1A\u88AB\u53D6\u6D88</strong> \u5E76\u7EE7\u7EED\u8FD0\u884C\u3002</p><p>\u5982\u679C return_exceptions \u4E3A True\uFF0C\u5F02\u5E38\u4F1A\u548C\u6210\u529F\u7684\u7ED3\u679C\u4E00\u6837\u5904\u7406\uFF0C\u5E76\u805A\u5408\u81F3\u7ED3\u679C\u5217\u8868\u3002</p><p>\u5982\u679C gather() \u88AB\u53D6\u6D88\uFF0C\u6240\u6709\u88AB\u63D0\u4EA4\uFF08\u5C1A\u672A\u5B8C\u6210\uFF09\u7684\u53EF\u7B49\u5F85\u5BF9\u8C61\u4E5F\u4F1A \u88AB\u53D6\u6D88\u3002</p><p>\u5982\u679C aws \u5E8F\u5217\u4E2D\u7684\u4EFB\u4E00 Task \u6216 Future \u5BF9\u8C61 \u88AB\u53D6\u6D88\uFF0C\u5B83\u5C06\u88AB\u5F53\u4F5C\u5F15\u53D1\u4E86 CancelledError \u4E00\u6837\u5904\u7406 \u2014 \u5728\u6B64\u60C5\u51B5\u4E0B gather() \u8C03\u7528 <strong>\u4E0D\u4F1A</strong> \u88AB\u53D6\u6D88\u3002\u8FD9\u662F\u4E3A\u4E86\u9632\u6B62\u4E00\u4E2A\u5DF2\u63D0\u4EA4\u7684 Task/Future \u88AB\u53D6\u6D88\u5BFC\u81F4\u5176\u4ED6 Tasks/Future \u4E5F\u88AB\u53D6\u6D88\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">factorial</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> number<span class="token punctuation">)</span><span class="token punctuation">:</span>
    f <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Task </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">: Compute factorial(</span><span class="token interpolation"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span><span class="token string">), currently i=</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">...&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        f <span class="token operator">*=</span> i
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Task </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">: factorial(</span><span class="token interpolation"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span><span class="token string">) = </span><span class="token interpolation"><span class="token punctuation">{</span>f<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> f

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Schedule three calls *concurrently*:</span>
    L <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>
        factorial<span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        factorial<span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        factorial<span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Expected output:</span>
<span class="token comment">#</span>
<span class="token comment">#     Task A: Compute factorial(2), currently i=2...</span>
<span class="token comment">#     Task B: Compute factorial(3), currently i=2...</span>
<span class="token comment">#     Task C: Compute factorial(4), currently i=2...</span>
<span class="token comment">#     Task A: factorial(2) = 2</span>
<span class="token comment">#     Task B: Compute factorial(3), currently i=3...</span>
<span class="token comment">#     Task C: Compute factorial(4), currently i=3...</span>
<span class="token comment">#     Task B: factorial(3) = 6</span>
<span class="token comment">#     Task C: Compute factorial(4), currently i=4...</span>
<span class="token comment">#     Task C: factorial(4) = 24</span>
<span class="token comment">#     [2, 6, 24]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container info"><p class="custom-container-title">\u76F8\u5173\u4FE1\u606F</p><p>\u5982\u679C \xA0<em>return_exceptions</em>\xA0 \u4E3A False\uFF0C\u5219\u5728 gather() \u88AB\u6807\u8BB0\u4E3A\u5DF2\u5B8C\u6210\u540E\u53D6\u6D88\u5B83\u5C06\u4E0D\u4F1A\u53D6\u6D88\u4EFB\u4F55\u5DF2\u63D0\u4EA4\u7684\u53EF\u7B49\u5F85\u5BF9\u8C61\u3002 \u4F8B\u5982\uFF0C\u5728\u5C06\u4E00\u4E2A\u5F02\u5E38\u4F20\u64AD\u7ED9\u8C03\u7528\u8005\u4E4B\u540E\uFF0Cgather \u53EF\u88AB\u6807\u8BB0\u4E3A\u5DF2\u5B8C\u6210\uFF0C\u56E0\u6B64\uFF0C\u5728\u4ECE gather \u6355\u83B7\u4E00\u4E2A\uFF08\u7531\u53EF\u7B49\u5F85\u5BF9\u8C61\u6240\u5F15\u53D1\u7684\uFF09\u5F02\u5E38\u4E4B\u540E\u8C03\u7528 \xA0<code>gather.cancel()</code>\xA0 \u5C06\u4E0D\u4F1A\u53D6\u6D88\u4EFB\u4F55\u5176\u4ED6\u53EF\u7B49\u5F85\u5BF9\u8C61\u3002</p></div><h3 id="\u5C4F\u853D\u53D6\u6D88\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5C4F\u853D\u53D6\u6D88\u64CD\u4F5C" aria-hidden="true">#</a> \u5C4F\u853D\u53D6\u6D88\u64CD\u4F5C</h3><p><code>awaitable asyncio.shield(aw)</code></p>`,66),un=s("\u4FDD\u62A4\u4E00\u4E2A \xA0"),dn={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio-awaitables",target:"_blank",rel:"noopener noreferrer"},kn=s("\u53EF\u7B49\u5F85\u5BF9\u8C61"),hn=s("\xA0 \u9632\u6B62\u5176\u88AB \xA0"),_n={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.Task.cancel",target:"_blank",rel:"noopener noreferrer"},mn=s("\u53D6\u6D88"),vn=s("\u3002"),yn=n("p",null,[s("\u5982\u679C \xA0"),n("em",null,"aw"),s("\xA0 \u662F\u4E00\u4E2A\u534F\u7A0B\uFF0C\u5B83\u5C06\u81EA\u52A8\u88AB\u4F5C\u4E3A\u4EFB\u52A1\u8C03\u5EA6\u3002")],-1),bn=n("p",null,"\u4EE5\u4E0B\u8BED\u53E5:",-1),fn=n("p",null,[n("code",null,"res = **await** shield(something())")],-1),gn=n("p",null,"\u76F8\u5F53\u4E8E:",-1),wn=n("p",null,[n("code",null,"res = **await** something()")],-1),xn=n("em",null,"\u4E0D\u540C\u4E4B\u5904",-1),zn=s("\xA0 \u5728\u4E8E\u5982\u679C\u5305\u542B\u5B83\u7684\u534F\u7A0B\u88AB\u53D6\u6D88\uFF0C\u5728 \xA0"),Tn=n("code",null,"something()",-1),qn=s("\xA0 \u4E2D\u8FD0\u884C\u7684\u4EFB\u52A1\u4E0D\u4F1A\u88AB\u53D6\u6D88\u3002\u4ECE \xA0"),En=n("code",null,"something()",-1),Cn=s('\xA0 \u7684\u89D2\u5EA6\u770B\u6765\uFF0C\u53D6\u6D88\u64CD\u4F5C\u5E76\u6CA1\u6709\u53D1\u751F\u3002\u7136\u800C\u5176\u8C03\u7528\u8005\u5DF2\u88AB\u53D6\u6D88\uFF0C\u56E0\u6B64 "await" \u8868\u8FBE\u5F0F\u4ECD\u7136\u4F1A\u5F15\u53D1'),Fn={href:"https://docs.python.org/zh-cn/3/library/asyncio-exceptions.html#asyncio.CancelledError",target:"_blank",rel:"noopener noreferrer"},Sn=s("CancelledError"),In=s("\u3002"),An=n("h3",{id:"\u8D85\u65F6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u8D85\u65F6","aria-hidden":"true"},"#"),s(" \u8D85\u65F6")],-1),Pn=n("p",null,[n("code",null,"coroutine asyncio.wait_for(aw, timeout)")],-1),Ln=s("\u7B49\u5F85 \xA0"),Nn=n("em",null,"aw",-1),On=s("\xA0"),jn={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio-awaitables",target:"_blank",rel:"noopener noreferrer"},Qn=s("\u53EF\u7B49\u5F85\u5BF9\u8C61"),Bn=s("\xA0 \u5B8C\u6210\uFF0C\u6307\u5B9A timeout \u79D2\u6570\u540E\u8D85\u65F6\u3002"),Rn=n("p",null,[s("\u5982\u679C \xA0"),n("em",null,"aw"),s("\xA0 \u662F\u4E00\u4E2A\u534F\u7A0B\uFF0C\u5B83\u5C06\u81EA\u52A8\u88AB\u4F5C\u4E3A\u4EFB\u52A1\u8C03\u5EA6\u3002")],-1),Wn=n("p",null,[n("em",null,"timeout"),s("\xA0 \u53EF\u4EE5\u4E3A \xA0"),n("code",null,"None"),s("\uFF0C\u4E5F\u53EF\u4EE5\u4E3A float \u6216 int \u578B\u6570\u503C\u8868\u793A\u7684\u7B49\u5F85\u79D2\u6570\u3002\u5982\u679C \xA0"),n("em",null,"timeout"),s("\xA0 \u4E3A \xA0"),n("code",null,"None"),s("\uFF0C\u5219\u7B49\u5F85\u76F4\u5230\u5B8C\u6210\u3002")],-1),Xn=s("\u5982\u679C\u53D1\u751F\u8D85\u65F6\uFF0C\u4EFB\u52A1\u5C06\u53D6\u6D88\u5E76\u5F15\u53D1 \xA0"),Dn={href:"https://docs.python.org/zh-cn/3/library/asyncio-exceptions.html#asyncio.TimeoutError",target:"_blank",rel:"noopener noreferrer"},Vn=s("asyncio.TimeoutError"),Mn=s("."),Un=s("\u8981\u907F\u514D\u4EFB\u52A1 \xA0"),Gn={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.Task.cancel",target:"_blank",rel:"noopener noreferrer"},Hn=s("\u53D6\u6D88"),Jn=s("\uFF0C\u53EF\u4EE5\u52A0\u4E0A \xA0"),Kn={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.shield",target:"_blank",rel:"noopener noreferrer"},Yn=s("shield()"),Zn=s("\u3002"),$n=e(`<p>\u6B64\u51FD\u6570\u5C06\u7B49\u5F85\u76F4\u5230 Future \u786E\u5B9E\u88AB\u53D6\u6D88\uFF0C\u6240\u4EE5\u603B\u7B49\u5F85\u65F6\u95F4\u53EF\u80FD\u8D85\u8FC7 \xA0<em>timeout</em>\u3002 \u5982\u679C\u5728\u53D6\u6D88\u671F\u95F4\u53D1\u751F\u4E86\u5F02\u5E38\uFF0C\u5F02\u5E38\u5C06\u4F1A\u88AB\u4F20\u64AD\u3002</p><p>\u5982\u679C\u7B49\u5F85\u88AB\u53D6\u6D88\uFF0C\u5219 \xA0<em>aw</em>\xA0 \u6307\u5B9A\u7684\u5BF9\u8C61\u4E5F\u4F1A\u88AB\u53D6\u6D88\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">eternity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Sleep for one hour</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3600</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;yay!&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Wait for at most 1 second</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>wait_for<span class="token punctuation">(</span>eternity<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> asyncio<span class="token punctuation">.</span>TimeoutError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;timeout!&#39;</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Expected output:</span>
<span class="token comment">#</span>
<span class="token comment">#     timeout!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B80\u5355\u7B49\u5F85" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u7B49\u5F85" aria-hidden="true">#</a> \u7B80\u5355\u7B49\u5F85</h3>`,4),ns=s("\u5E76\u53D1\u5730\u8FD0\u884C \xA0"),ss=n("em",null,"aws",-1),as=s("\xA0 \u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u7684 \xA0"),ts={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio-awaitables",target:"_blank",rel:"noopener noreferrer"},es=s("\u53EF\u7B49\u5F85\u5BF9\u8C61"),os=s("\xA0 \u5E76\u8FDB\u5165\u963B\u585E\u72B6\u6001\u76F4\u5230\u6EE1\u8DB3 \xA0"),ps=n("em",null,"return_when",-1),cs=s("\xA0 \u6240\u6307\u5B9A\u7684\u6761\u4EF6\u3002"),is=n("p",null,[n("em",null,"aws"),s("\xA0 \u53EF\u8FED\u4EE3\u5BF9\u8C61\u5FC5\u987B\u4E0D\u4E3A\u7A7A\u3002")],-1),ls=n("p",null,[s("\u8FD4\u56DE\u4E24\u4E2A Task/Future \u96C6\u5408:\xA0"),n("code",null,"(done, pending)"),s("\u3002")],-1),rs=n("p",null,"\u7528\u6CD5\uFF1A",-1),us=n("p",null,[n("code",null,"done, pending = **await** asyncio.wait(aws)")],-1),ds=n("p",null,[s("\u5982\u6307\u5B9A \xA0"),n("em",null,"timeout"),s("\xA0(float \u6216 int \u7C7B\u578B) \u5219\u5B83\u5C06\u88AB\u7528\u4E8E\u63A7\u5236\u8FD4\u56DE\u4E4B\u524D\u7B49\u5F85\u7684\u6700\u957F\u79D2\u6570\u3002")],-1),ks=s("\u8BF7\u6CE8\u610F\u6B64\u51FD\u6570\u4E0D\u4F1A\u5F15\u53D1 \xA0"),hs={href:"https://docs.python.org/zh-cn/3/library/asyncio-exceptions.html#asyncio.TimeoutError",target:"_blank",rel:"noopener noreferrer"},_s=s("asyncio.TimeoutError"),ms=s("\u3002\u5F53\u8D85\u65F6\u53D1\u751F\u65F6\uFF0C\u672A\u5B8C\u6210\u7684 Future \u6216 Task \u5C06\u5728\u6307\u5B9A\u79D2\u6570\u540E\u88AB\u8FD4\u56DE\u3002"),vs=e("<p><em>return_when</em>\xA0 \u6307\u5B9A\u6B64\u51FD\u6570\u5E94\u5728\u4F55\u65F6\u8FD4\u56DE\u3002\u5B83\u5FC5\u987B\u4E3A\u4EE5\u4E0B\u5E38\u6570\u4E4B\u4E00:</p><table><thead><tr><th>\u5E38\u91CF</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>FIRST_COMPLETED</td><td>\u51FD\u6570\u5C06\u5728\u4EFB\u610F\u53EF\u7B49\u5F85\u5BF9\u8C61\u7ED3\u675F\u6216\u53D6\u6D88\u65F6\u8FD4\u56DE\u3002</td></tr><tr><td>FIRST_EXCEPTION</td><td>\u51FD\u6570\u5C06\u5728\u4EFB\u610F\u53EF\u7B49\u5F85\u5BF9\u8C61\u56E0\u5F15\u53D1\u5F02\u5E38\u800C\u7ED3\u675F\u65F6\u8FD4\u56DE\u3002\u5F53\u6CA1\u6709\u5F15\u53D1\u4EFB\u4F55\u5F02\u5E38\u65F6\u5B83\u5C31\u76F8\u5F53\u4E8E \xA0ALL_COMPLETED\u3002</td></tr><tr><td>ALL_COMPLETED</td><td>\u51FD\u6570\u5C06\u5728\u6240\u6709\u53EF\u7B49\u5F85\u5BF9\u8C61\u7ED3\u675F\u6216\u53D6\u6D88\u65F6\u8FD4\u56DE\u3002</td></tr></tbody></table><p><code>asyncio.as_completed(aws, *, timeout=None)</code></p>",3),ys=s("\u5E76\u53D1\u5730\u8FD0\u884C \xA0"),bs=n("em",null,"aws",-1),fs=s("\xA0 \u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u7684 \xA0"),gs={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio-awaitables",target:"_blank",rel:"noopener noreferrer"},ws=s("\u53EF\u7B49\u5F85\u5BF9\u8C61"),xs=s("\u3002 \u8FD4\u56DE\u4E00\u4E2A\u534F\u7A0B\u7684\u8FED\u4EE3\u5668\u3002 \u6240\u8FD4\u56DE\u7684\u6BCF\u4E2A\u534F\u7A0B\u53EF\u88AB\u7B49\u5F85\u4EE5\u4ECE\u5269\u4F59\u7684\u53EF\u7B49\u5F85\u5BF9\u8C61\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u83B7\u5F97\u6700\u65E9\u7684\u4E0B\u4E00\u4E2A\u7ED3\u679C\u3002"),zs=s("\u5982\u679C\u5728\u6240\u6709 Future \u5BF9\u8C61\u5B8C\u6210\u524D\u53D1\u751F\u8D85\u65F6\u5219\u5C06\u5F15\u53D1 \xA0"),Ts={href:"https://docs.python.org/zh-cn/3/library/asyncio-exceptions.html#asyncio.TimeoutError",target:"_blank",rel:"noopener noreferrer"},qs=s("asyncio.TimeoutError"),Es=s("\u3002"),Cs=e(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">for</span> coro <span class="token keyword">in</span> as_completed<span class="token punctuation">(</span>aws<span class="token punctuation">)</span><span class="token punctuation">:</span>
    earliest_result <span class="token operator">=</span> <span class="token keyword">await</span> coro
    <span class="token comment"># ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5728\u7EBF\u7A0B\u4E2D\u8FD0\u884C" tabindex="-1"><a class="header-anchor" href="#\u5728\u7EBF\u7A0B\u4E2D\u8FD0\u884C" aria-hidden="true">#</a> \u5728\u7EBF\u7A0B\u4E2D\u8FD0\u884C</h3><p><code>coroutine asyncio.to_thread(func, /, *args, **kwargs)</code></p><p>\u5728\u4E0D\u540C\u7684\u7EBF\u7A0B\u4E2D\u5F02\u6B65\u5730\u8FD0\u884C\u51FD\u6570 \xA0<em>func</em>\u3002</p>`,4),Fs=s("\u5411\u6B64\u51FD\u6570\u63D0\u4F9B\u7684\u4EFB\u4F55 *args \u548C **kwargs \u4F1A\u88AB\u76F4\u63A5\u4F20\u7ED9 \xA0*func*\u3002 \u5E76\u4E14\uFF0C\u5F53\u524D \xA0"),Ss={href:"https://docs.python.org/zh-cn/3/library/contextvars.html#contextvars.Context",target:"_blank",rel:"noopener noreferrer"},Is=s("contextvars.Context"),As=s("\xA0 \u4F1A\u88AB\u4F20\u64AD\uFF0C\u5141\u8BB8\u5728\u4E0D\u540C\u7684\u7EBF\u7A0B\u4E2D\u8BBF\u95EE\u6765\u81EA\u4E8B\u4EF6\u5FAA\u73AF\u7684\u4E0A\u4E0B\u6587\u53D8\u91CF\u3002"),Ps=e(`<p>\u8FD4\u56DE\u4E00\u4E2A\u53EF\u88AB\u7B49\u5F85\u4EE5\u83B7\u53D6 \xA0<em>func</em>\xA0 \u7684\u6700\u7EC8\u7ED3\u679C\u7684\u534F\u7A0B\u3002</p><p>\u8FD9\u4E2A\u534F\u7A0B\u51FD\u6570\u4E3B\u8981\u662F\u7528\u4E8E\u6267\u884C\u5728\u5176\u4ED6\u60C5\u51B5\u4E0B\u4F1A\u963B\u585E\u4E8B\u4EF6\u5FAA\u73AF\u7684 IO \u5BC6\u96C6\u578B\u51FD\u6570/\u65B9\u6CD5\u3002 \u4F8B\u5982:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">blocking_io</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;start blocking_io at </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token comment"># Note that time.sleep() can be replaced with any blocking</span>
    <span class="token comment"># IO-bound operation, such as file operations.</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;blocking_io complete at </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;started main at </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>
        asyncio<span class="token punctuation">.</span>to_thread<span class="token punctuation">(</span>blocking_io<span class="token punctuation">)</span><span class="token punctuation">,</span>
        asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;finished main at </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Expected output:</span>
<span class="token comment">#</span>
<span class="token comment"># started main at 19:50:53</span>
<span class="token comment"># start blocking_io at 19:50:53</span>
<span class="token comment"># blocking_io complete at 19:50:54</span>
<span class="token comment"># finished main at 19:50:54</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4EFB\u4F55\u534F\u7A0B\u4E2D\u76F4\u63A5\u8C03\u7528 \xA0blocking_io() \u5C06\u4F1A\u5728\u8C03\u7528\u671F\u95F4\u963B\u585E\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u5BFC\u81F4\u989D\u5916\u7684 1 \u79D2\u8FD0\u884C\u65F6\u95F4\u3002 \u800C\u901A\u8FC7\u6539\u7528 \xA0asyncio.to_thread()\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u4E0D\u540C\u7684\u7EBF\u7A0B\u4E2D\u8FD0\u884C\u5B83\u4ECE\u800C\u4E0D\u4F1A\u963B\u585E\u4E8B\u4EF6\u5FAA\u73AF\u3002</p><h3 id="\u8DE8\u7EBF\u7A0B\u8C03\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u8DE8\u7EBF\u7A0B\u8C03\u5EA6" aria-hidden="true">#</a> \u8DE8\u7EBF\u7A0B\u8C03\u5EA6</h3><p><code>asyncio.run_coroutine_threadsafe(coro, loop)</code></p><p>\u5411\u6307\u5B9A\u4E8B\u4EF6\u5FAA\u73AF\u63D0\u4EA4\u4E00\u4E2A\u534F\u7A0B\u3002\uFF08\u7EBF\u7A0B\u5B89\u5168\uFF09</p>`,7),Ls=s("\u8FD4\u56DE\u4E00\u4E2A \xA0"),Ns={href:"https://docs.python.org/zh-cn/3/library/concurrent.futures.html#concurrent.futures.Future",target:"_blank",rel:"noopener noreferrer"},Os=s("concurrent.futures.Future"),js=s("\xA0 \u4EE5\u7B49\u5F85\u6765\u81EA\u5176\u4ED6 OS \u7EBF\u7A0B\u7684\u7ED3\u679C\u3002"),Qs=e(`<p>\u6B64\u51FD\u6570\u5E94\u8BE5\u4ECE\u53E6\u4E00\u4E2A OS \u7EBF\u7A0B\u4E2D\u8C03\u7528\uFF0C\u800C\u975E\u4E8B\u4EF6\u5FAA\u73AF\u8FD0\u884C\u6240\u5728\u7EBF\u7A0B\u3002\u793A\u4F8B:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Create a coroutine</span>
coro <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> result<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token comment"># Submit the coroutine to a given loop</span>
future <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>run_coroutine_threadsafe<span class="token punctuation">(</span>coro<span class="token punctuation">,</span> loop<span class="token punctuation">)</span>

<span class="token comment"># Wait for the result with an optional timeout argument</span>
<span class="token keyword">assert</span> future<span class="token punctuation">.</span>result<span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5728\u534F\u7A0B\u5185\u4EA7\u751F\u4E86\u5F02\u5E38\uFF0C\u5C06\u4F1A\u901A\u77E5\u8FD4\u56DE\u7684 Future \u5BF9\u8C61\u3002\u5B83\u4E5F\u53EF\u88AB\u7528\u6765\u53D6\u6D88\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u7684\u4EFB\u52A1:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    result <span class="token operator">=</span> future<span class="token punctuation">.</span>result<span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
<span class="token keyword">except</span> concurrent<span class="token punctuation">.</span>futures<span class="token punctuation">.</span>TimeoutError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;The coroutine took too long, cancelling the task...&#39;</span><span class="token punctuation">)</span>
    future<span class="token punctuation">.</span>cancel<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> exc<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;The coroutine raised an exception: </span><span class="token interpolation"><span class="token punctuation">{</span>exc<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;The coroutine returned: </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Bs=s("\u53C2\u89C1 \xA0"),Rs={href:"https://docs.python.org/zh-cn/3/library/asyncio-dev.html#asyncio-multithreading",target:"_blank",rel:"noopener noreferrer"},Ws=s("concurrency and multithreading"),Xs=s("\xA0 \u90E8\u5206\u7684\u6587\u6863\u3002"),Ds=n("p",null,[s("\u4E0D\u540C\u4E0E\u5176\u4ED6 asyncio \u51FD\u6570\uFF0C\u6B64\u51FD\u6570\u8981\u6C42\u663E\u5F0F\u5730\u4F20\u5165 \xA0"),n("em",null,"loop"),s("\xA0 \u53C2\u6570\u3002")],-1),Vs=n("h3",{id:"\u5185\u7701",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5185\u7701","aria-hidden":"true"},"#"),s(" \u5185\u7701")],-1),Ms=n("p",null,[n("code",null,"asyncio.**current_task**(*loop=None*)")],-1),Us=s("\u8FD4\u56DE\u5F53\u524D\u8FD0\u884C\u7684 \xA0"),Gs={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.Task",target:"_blank",rel:"noopener noreferrer"},Hs=s("Task"),Js=s("\xA0 \u5B9E\u4F8B\uFF0C\u5982\u679C\u6CA1\u6709\u6B63\u5728\u8FD0\u884C\u7684\u4EFB\u52A1\u5219\u8FD4\u56DE \xA0"),Ks=n("code",null,"None",-1),Ys=s("\u3002 \u5982\u679C \xA0"),Zs=n("em",null,"loop",-1),$s=s("\xA0 \u4E3A \xA0"),na=n("code",null,"None",-1),sa=s("\xA0 \u5219\u4F1A\u4F7F\u7528 \xA0"),aa={href:"https://docs.python.org/zh-cn/3/library/asyncio-eventloop.html#asyncio.get_running_loop",target:"_blank",rel:"noopener noreferrer"},ta=s("get_running_loop()"),ea=s("\xA0 \u83B7\u53D6\u5F53\u524D\u4E8B\u4EF6\u5FAA\u73AF\u3002"),oa=n("p",null,[n("code",null,"asyncio.**all_tasks**(*loop=None*)")],-1),pa=s("\u8FD4\u56DE\u4E8B\u4EF6\u5FAA\u73AF\u6240\u8FD0\u884C\u7684\u672A\u5B8C\u6210\u7684 \xA0"),ca={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.Task",target:"_blank",rel:"noopener noreferrer"},ia=s("Task"),la=s("\xA0 \u5BF9\u8C61\u7684\u96C6\u5408\u3002 \u5982\u679C \xA0"),ra=n("em",null,"loop",-1),ua=s("\xA0 \u4E3A \xA0"),da=n("code",null,"None",-1),ka=s("\uFF0C\u5219\u4F1A\u4F7F\u7528 \xA0"),ha={href:"https://docs.python.org/zh-cn/3/library/asyncio-eventloop.html#asyncio.get_running_loop",target:"_blank",rel:"noopener noreferrer"},_a=s("get_running_loop()"),ma=s("\xA0 \u83B7\u53D6\u5F53\u524D\u4E8B\u4EF6\u5FAA\u73AF\u3002"),va=n("h3",{id:"task-\u5BF9\u8C61",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#task-\u5BF9\u8C61","aria-hidden":"true"},"#"),s(" Task \u5BF9\u8C61")],-1),ya=n("p",null,[n("code",null,"class asyncio.Task(coro, *, loop=None, name=None)")],-1),ba=s("\u4E00\u4E2A\u4E0E \xA0"),fa=n("code",null,"[Future \u7C7B\u4F3C](https://docs.python.org/zh-cn/3/library/asyncio-future.html#asyncio.Future)",-1),ga=s("\xA0 \u7684\u5BF9\u8C61\uFF0C\u53EF\u8FD0\u884C Python\xA0"),wa={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#coroutine",target:"_blank",rel:"noopener noreferrer"},xa=s("\u534F\u7A0B"),za=s("\u3002\u975E\u7EBF\u7A0B\u5B89\u5168\u3002"),Ta=n("p",null,[s("Task \u5BF9\u8C61\u88AB\u7528\u6765\u5728\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u8FD0\u884C\u534F\u7A0B\u3002\u5982\u679C\u4E00\u4E2A\u534F\u7A0B\u5728\u7B49\u5F85\u4E00\u4E2A Future \u5BF9\u8C61\uFF0CTask \u5BF9\u8C61\u4F1A\u6302\u8D77\u8BE5\u534F\u7A0B\u7684\u6267\u884C\u5E76\u7B49\u5F85\u8BE5 Future \u5BF9\u8C61\u5B8C\u6210\u3002\u5F53\u8BE5 Future \u5BF9\u8C61 \xA0"),n("em",null,"\u5B8C\u6210"),s("\uFF0C\u88AB\u6253\u5305\u7684\u534F\u7A0B\u5C06\u6062\u590D\u6267\u884C\u3002")],-1),qa=n("p",null,"\u4E8B\u4EF6\u5FAA\u73AF\u4F7F\u7528\u534F\u540C\u65E5\u7A0B\u8C03\u5EA6: \u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF\u6BCF\u6B21\u8FD0\u884C\u4E00\u4E2A Task \u5BF9\u8C61\u3002\u800C\u4E00\u4E2A Task \u5BF9\u8C61\u4F1A\u7B49\u5F85\u4E00\u4E2A Future \u5BF9\u8C61\u5B8C\u6210\uFF0C\u8BE5\u4E8B\u4EF6\u5FAA\u73AF\u4F1A\u8FD0\u884C\u5176\u4ED6 Task\u3001\u56DE\u8C03\u6216\u6267\u884C IO \u64CD\u4F5C\u3002",-1),Ea=s("\u4F7F\u7528\u9AD8\u5C42\u7EA7\u7684 \xA0"),Ca={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.create_task",target:"_blank",rel:"noopener noreferrer"},Fa=s("asyncio.create_task()"),Sa=s("\xA0 \u51FD\u6570\u6765\u521B\u5EFA Task \u5BF9\u8C61\uFF0C\u4E5F\u53EF\u7528\u4F4E\u5C42\u7EA7\u7684 \xA0"),Ia={href:"https://docs.python.org/zh-cn/3/library/asyncio-eventloop.html#asyncio.loop.create_task",target:"_blank",rel:"noopener noreferrer"},Aa=s("loop.create_task()"),Pa=s("\xA0 \u6216 \xA0"),La={href:"https://docs.python.org/zh-cn/3/library/asyncio-future.html#asyncio.ensure_future",target:"_blank",rel:"noopener noreferrer"},Na=s("ensure_future()"),Oa=s("\xA0 \u51FD\u6570\u3002\u4E0D\u5EFA\u8BAE\u624B\u52A8\u5B9E\u4F8B\u5316 Task \u5BF9\u8C61\u3002"),ja=s("\u8981\u53D6\u6D88\u4E00\u4E2A\u6B63\u5728\u8FD0\u884C\u7684 Task \u5BF9\u8C61\u53EF\u4F7F\u7528 \xA0"),Qa={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.Task.cancel",target:"_blank",rel:"noopener noreferrer"},Ba=s("cancel()"),Ra=s("\xA0 \u65B9\u6CD5\u3002\u8C03\u7528\u6B64\u65B9\u6CD5\u5C06\u4F7F\u8BE5 Task \u5BF9\u8C61\u629B\u51FA\u4E00\u4E2A \xA0"),Wa={href:"https://docs.python.org/zh-cn/3/library/asyncio-exceptions.html#asyncio.CancelledError",target:"_blank",rel:"noopener noreferrer"},Xa=s("CancelledError"),Da=s("\xA0 \u5F02\u5E38\u7ED9\u6253\u5305\u7684\u534F\u7A0B\u3002\u5982\u679C\u53D6\u6D88\u671F\u95F4\u4E00\u4E2A\u534F\u7A0B\u6B63\u5728\u7B49\u5F85\u4E00\u4E2A Future \u5BF9\u8C61\uFF0C\u8BE5 Future \u5BF9\u8C61\u4E5F\u5C06\u88AB\u53D6\u6D88\u3002"),Va={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.Task.cancelled",target:"_blank",rel:"noopener noreferrer"},Ma=s("cancelled()"),Ua=s("\xA0 \u53EF\u88AB\u7528\u6765\u68C0\u6D4B Task \u5BF9\u8C61\u662F\u5426\u88AB\u53D6\u6D88\u3002\u5982\u679C\u6253\u5305\u7684\u534F\u7A0B\u6CA1\u6709\u6291\u5236 \xA0"),Ga={href:"https://docs.python.org/zh-cn/3/library/asyncio-exceptions.html#asyncio.CancelledError",target:"_blank",rel:"noopener noreferrer"},Ha=s("CancelledError"),Ja=s("\xA0 \u5F02\u5E38\u5E76\u4E14\u786E\u5B9E\u88AB\u53D6\u6D88\uFF0C\u8BE5\u65B9\u6CD5\u5C06\u8FD4\u56DE \xA0"),Ka=n("code",null,"True",-1),Ya=s("\u3002"),Za={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.Task",target:"_blank",rel:"noopener noreferrer"},$a=s("asyncio.Task"),nt=s("\xA0 \u4ECE \xA0"),st={href:"https://docs.python.org/zh-cn/3/library/asyncio-future.html#asyncio.Future",target:"_blank",rel:"noopener noreferrer"},at=s("Future"),tt=s("\xA0 \u7EE7\u627F\u4E86\u5176\u9664 \xA0"),et={href:"https://docs.python.org/zh-cn/3/library/asyncio-future.html#asyncio.Future.set_result",target:"_blank",rel:"noopener noreferrer"},ot=s("Future.set_result()"),pt=s("\xA0 \u548C \xA0"),ct={href:"https://docs.python.org/zh-cn/3/library/asyncio-future.html#asyncio.Future.set_exception",target:"_blank",rel:"noopener noreferrer"},it=s("Future.set_exception()"),lt=s("\xA0 \u4EE5\u5916\u7684\u6240\u6709 API\u3002"),rt=s("Task \u5BF9\u8C61\u652F\u6301 \xA0"),ut={href:"https://docs.python.org/zh-cn/3/library/contextvars.html#module-contextvars",target:"_blank",rel:"noopener noreferrer"},dt=s("contextvars"),kt=s("\xA0 \u6A21\u5757\u3002\u5F53\u4E00\u4E2A Task \u5BF9\u8C61\u88AB\u521B\u5EFA\uFF0C\u5B83\u5C06\u590D\u5236\u5F53\u524D\u4E0A\u4E0B\u6587\uFF0C\u7136\u540E\u5728\u590D\u5236\u7684\u4E0A\u4E0B\u6587\u4E2D\u8FD0\u884C\u5176\u534F\u7A0B\u3002"),ht=e(`<ul><li>cancel(msg=None)\uFF1A\u53D6\u6D88\u4EFB\u52A1\uFF0C\u8FD9\u5C06\u629B\u51FA CancelledError</li><li>done()\uFF1A\u5982\u679C Task \u5BF9\u8C61\u5DF2\u5B8C\u6210\uFF0C\u5219\u8FD4\u56DE true</li><li>result()\uFF1A\u8FD4\u56DE Task \u7684\u7ED3\u679C</li><li>add_done_callback(callback, *, context=None)\uFF1A\u6DFB\u52A0\u4E00\u4E2A\u56DE\u8C03\uFF0C\u5728 Task \u5B8C\u6210\u65F6\u8C03\u7528\u3002</li></ul><h2 id="stream-\u6D41" tabindex="-1"><a class="header-anchor" href="#stream-\u6D41" aria-hidden="true">#</a> Stream \u6D41 <sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></h2><p>\u6D41\u662F\u7528\u4E8E\u5904\u7406\u7F51\u7EDC\u8FDE\u63A5\u7684\u652F\u6301 async/await \u7684\u9AD8\u5C42\u7EA7\u539F\u8BED\u3002 \u6D41\u5141\u8BB8\u53D1\u9001\u548C\u63A5\u6536\u6570\u636E\uFF0C\u800C\u4E0D\u9700\u8981\u4F7F\u7528\u56DE\u8C03\u6216\u4F4E\u7EA7\u534F\u8BAE\u548C\u4F20\u8F93\u3002</p><h3 id="stream-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#stream-\u51FD\u6570" aria-hidden="true">#</a> Stream \u51FD\u6570</h3><ul><li>open_connection</li><li>start_server</li></ul><h3 id="unix-\u5957\u63A5\u5B57-socket" tabindex="-1"><a class="header-anchor" href="#unix-\u5957\u63A5\u5B57-socket" aria-hidden="true">#</a> Unix \u5957\u63A5\u5B57\uFF08Socket\uFF09</h3><ul><li>open_unix_connection</li><li>start_unix_server</li></ul><h3 id="streamreader-\u4E0E-streamwriter" tabindex="-1"><a class="header-anchor" href="#streamreader-\u4E0E-streamwriter" aria-hidden="true">#</a> StreamReader \u4E0E StreamWriter</h3><h3 id="\u4F8B\u5B50-echo-\u670D\u52A1\u5668\u4E0E\u5BA2\u6237\u7AEF" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-echo-\u670D\u52A1\u5668\u4E0E\u5BA2\u6237\u7AEF" aria-hidden="true">#</a> \u4F8B\u5B50\uFF1Aecho \u670D\u52A1\u5668\u4E0E\u5BA2\u6237\u7AEF</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">handle_echo</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> writer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> <span class="token keyword">await</span> reader<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
    message <span class="token operator">=</span> data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    addr <span class="token operator">=</span> writer<span class="token punctuation">.</span>get_extra_info<span class="token punctuation">(</span><span class="token string">&#39;peername&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Received </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string"> from </span><span class="token interpolation"><span class="token punctuation">{</span>addr<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Send: </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">await</span> writer<span class="token punctuation">.</span>drain<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Close the connection&quot;</span><span class="token punctuation">)</span>
    writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    server <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>start_server<span class="token punctuation">(</span>
        handle_echo<span class="token punctuation">,</span> <span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">)</span>

    addrs <span class="token operator">=</span> <span class="token string">&#39;, &#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>sock<span class="token punctuation">.</span>getsockname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> sock <span class="token keyword">in</span> server<span class="token punctuation">.</span>sockets<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Serving on </span><span class="token interpolation"><span class="token punctuation">{</span>addrs<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">with</span> server<span class="token punctuation">:</span>
        <span class="token keyword">await</span> server<span class="token punctuation">.</span>serve_forever<span class="token punctuation">(</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">tcp_echo_client</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>
    reader<span class="token punctuation">,</span> writer <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>open_connection<span class="token punctuation">(</span>
        <span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Send: </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>message<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    data <span class="token operator">=</span> <span class="token keyword">await</span> reader<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Received: </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Close the connection&#39;</span><span class="token punctuation">)</span>
    writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>tcp_echo_client<span class="token punctuation">(</span><span class="token string">&#39;Hello World!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u540C\u6B65\u539F\u8BED" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65\u539F\u8BED" aria-hidden="true">#</a> \u540C\u6B65\u539F\u8BED <sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></h2>`,12),_t=s("asyncio \u540C\u6B65\u539F\u8BED\u88AB\u8BBE\u8BA1\u4E3A\u4E0E \xA0"),mt={href:"https://docs.python.org/zh-cn/3.10/library/threading.html#module-threading",target:"_blank",rel:"noopener noreferrer"},vt=s("threading"),yt=s("\xA0 \u6A21\u5757\u7684\u7C7B\u4F3C\uFF0C\u4F46\u6709\u4E24\u4E2A\u5173\u952E\u6CE8\u610F\u4E8B\u9879:"),bt=s("asyncio \u539F\u8BED\u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u56E0\u6B64\u5B83\u4EEC\u4E0D\u5E94\u88AB\u7528\u4E8E OS \u7EBF\u7A0B\u540C\u6B65 (\u800C\u5E94\u5F53\u4F7F\u7528 \xA0"),ft={href:"https://docs.python.org/zh-cn/3.10/library/threading.html#module-threading",target:"_blank",rel:"noopener noreferrer"},gt=s("threading"),wt=s(")\uFF1B"),xt=s("\u8FD9\u4E9B\u540C\u6B65\u539F\u8BED\u7684\u65B9\u6CD5\u4E0D\u63A5\u53D7 \xA0"),zt=n("em",null,"timeout",-1),Tt=s("\xA0 \u53C2\u6570\uFF1B\u8BF7\u4F7F\u7528 \xA0"),qt={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio.wait_for",target:"_blank",rel:"noopener noreferrer"},Et=s("asyncio.wait_for()"),Ct=s("\xA0 \u51FD\u6570\u6765\u6267\u884C\u5E26\u6709\u8D85\u65F6\u7684\u64CD\u4F5C\u3002"),Ft=e(`<p>asyncio \u5177\u6709\u4E0B\u5217\u57FA\u672C\u540C\u6B65\u539F\u8BED:</p><h3 id="lock" tabindex="-1"><a class="header-anchor" href="#lock" aria-hidden="true">#</a> Lock</h3><p><code>class asyncio.Lock</code></p><p>\u5B9E\u73B0\u4E00\u4E2A\u7528\u4E8E asyncio \u4EFB\u52A1\u7684\u4E92\u65A5\u9501\u3002 \u975E\u7EBF\u7A0B\u5B89\u5168\u3002</p><p>asyncio \u9501\u53EF\u88AB\u7528\u6765\u4FDD\u8BC1\u5BF9\u5171\u4EAB\u8D44\u6E90\u7684\u72EC\u5360\u8BBF\u95EE\u3002</p><p>\u4F7F\u7528 Lock \u7684\u63A8\u8350\u65B9\u5F0F\u662F\u901A\u8FC7 \xA0<code>[async with](https://docs.python.org/zh-cn/3.10/reference/compound_stmts.html#async-with)</code>\xA0 \u8BED\u53E5:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>lock <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># ... later</span>
<span class="token keyword">async</span> <span class="token keyword">with</span> lock<span class="token punctuation">:</span>
    <span class="token comment"># access shared state</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u7B49\u4EF7\u4E8E\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>lock <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>Lock<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># ... later</span>
<span class="token keyword">await</span> lock<span class="token punctuation">.</span>acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token comment"># access shared state</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    lock<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>coroutine acquire()</code></p>`,10),St=s("\u83B7\u53D6\u9501\u3002 \u6B64\u65B9\u6CD5\u4F1A\u7B49\u5F85\u76F4\u81F3\u9501\u4E3A \xA0"),It=n("em",null,"unlocked",-1),At=s("\uFF0C\u5C06\u5176\u8BBE\u4E3A \xA0"),Pt=n("em",null,"locked",-1),Lt=s("\xA0 \u5E76\u8FD4\u56DE \xA0"),Nt=n("code",null,"True",-1),Ot=s("\u3002 \u5F53\u6709\u4E00\u4E2A\u4EE5\u4E0A\u7684\u534F\u7A0B\u5728 \xA0"),jt={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#asyncio.Lock.acquire",target:"_blank",rel:"noopener noreferrer"},Qt=s("acquire()"),Bt=s("\xA0 \u4E2D\u88AB\u963B\u585E\u5219\u4F1A\u7B49\u5F85\u89E3\u9501\uFF0C\u6700\u7EC8\u53EA\u6709\u4E00\u4E2A\u534F\u7A0B\u4F1A\u88AB\u6267\u884C\u3002 \u9501\u7684\u83B7\u53D6\u662F \xA0"),Rt=n("em",null,"\u516C\u5E73\u7684",-1),Wt=s(": \u88AB\u6267\u884C\u7684\u534F\u7A0B\u5C06\u662F\u7B2C\u4E00\u4E2A\u5F00\u59CB\u7B49\u5F85\u9501\u7684\u534F\u7A0B\u3002"),Xt=n("p",null,[n("code",null,"release()")],-1),Dt=n("p",null,"\u91CA\u653E\u9501\u3002",-1),Vt=n("p",null,[s("\u5F53\u9501\u4E3A \xA0"),n("em",null,"locked"),s("\xA0 \u65F6\uFF0C\u5C06\u5176\u8BBE\u4E3A \xA0"),n("em",null,"unlocked"),s("\xA0 \u5E76\u8FD4\u56DE\u3002")],-1),Mt=s("\u5982\u679C\u9501\u4E3A \xA0"),Ut=n("em",null,"unlocked",-1),Gt=s("\uFF0C\u5219\u4F1A\u5F15\u53D1 \xA0"),Ht={href:"https://docs.python.org/zh-cn/3.10/library/exceptions.html#RuntimeError",target:"_blank",rel:"noopener noreferrer"},Jt=s("RuntimeError"),Kt=s("\u3002"),Yt=e('<p><code>locked()</code></p><p>\u5982\u679C\u9501\u4E3A \xA0<em>locked</em>\xA0 \u5219\u8FD4\u56DE \xA0<code>True</code>\u3002</p><h3 id="event" tabindex="-1"><a class="header-anchor" href="#event" aria-hidden="true">#</a> Event</h3><p><code>class asyncio.Event</code></p><p>\u4E8B\u4EF6\u5BF9\u8C61\u3002 \u8BE5\u5BF9\u8C61\u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\u3002</p><p>asyncio \u4E8B\u4EF6\u53EF\u88AB\u7528\u6765\u901A\u77E5\u591A\u4E2A asyncio \u4EFB\u52A1\u5DF2\u7ECF\u6709\u4E8B\u4EF6\u53D1\u751F\u3002</p>',6),Zt=s("Event \u5BF9\u8C61\u4F1A\u7BA1\u7406\u4E00\u4E2A\u5185\u90E8\u65D7\u6807\uFF0C\u53EF\u901A\u8FC7 \xA0"),$t={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#asyncio.Event.set",target:"_blank",rel:"noopener noreferrer"},ne=s("set()"),se=s("\xA0 \u65B9\u6CD5\u5C06\u5176\u8BBE\u4E3A \xA0"),ae=n("em",null,"true",-1),te=s("\xA0 \u5E76\u901A\u8FC7 \xA0"),ee={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#asyncio.Event.clear",target:"_blank",rel:"noopener noreferrer"},oe=s("clear()"),pe=s("\xA0 \u65B9\u6CD5\u5C06\u5176\u91CD\u8BBE\u4E3A \xA0"),ce=n("em",null,"false",-1),ie=s("\u3002\xA0"),le={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#asyncio.Event.wait",target:"_blank",rel:"noopener noreferrer"},re=s("wait()"),ue=s("\xA0 \u65B9\u6CD5\u4F1A\u963B\u585E\u76F4\u81F3\u8BE5\u65D7\u6807\u88AB\u8BBE\u4E3A \xA0"),de=n("em",null,"true",-1),ke=s("\u3002 \u8BE5\u65D7\u6807\u521D\u59CB\u65F6\u4F1A\u88AB\u8BBE\u4E3A \xA0"),he=n("em",null,"false",-1),_e=s("\u3002"),me=e(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">waiter</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;waiting for it ...&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> event<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;... got it!&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Create an Event object.</span>
    event <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>Event<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># Spawn a Task to wait until &#39;event&#39; is set.</span>
    waiter_task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>waiter<span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment"># Sleep for 1 second and set the event.</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    event<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># Wait until the waiter task is finished.</span>
    <span class="token keyword">await</span> waiter_task

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>coroutine wait()</code></p><p>\u7B49\u5F85\u76F4\u81F3\u4E8B\u4EF6\u88AB\u8BBE\u7F6E\u3002</p>`,3),ve=s("\u5982\u679C\u4E8B\u4EF6\u5DF2\u88AB\u8BBE\u7F6E\uFF0C\u5219\u7ACB\u5373\u8FD4\u56DE \xA0"),ye=n("code",null,"True",-1),be=s("\u3002 \u5426\u5219\u5C06\u963B\u585E\u76F4\u81F3\u53E6\u4E00\u4E2A\u4EFB\u52A1\u8C03\u7528 \xA0"),fe={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#asyncio.Event.set",target:"_blank",rel:"noopener noreferrer"},ge=s("set()"),we=s("\u3002"),xe=n("p",null,[n("code",null,"set()")],-1),ze=n("p",null,"\u8BBE\u7F6E\u4E8B\u4EF6\u3002",-1),Te=n("p",null,"\u6240\u6709\u7B49\u5F85\u4E8B\u4EF6\u88AB\u8BBE\u7F6E\u7684\u4EFB\u52A1\u5C06\u88AB\u7ACB\u5373\u5524\u9192\u3002",-1),qe=n("p",null,[n("code",null,"clear()")],-1),Ee=n("p",null,"\u6E05\u7A7A\uFF08\u53D6\u6D88\u8BBE\u7F6E\uFF09\u4E8B\u4EF6\u3002",-1),Ce=s("\u901A\u8FC7 \xA0"),Fe={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#asyncio.Event.wait",target:"_blank",rel:"noopener noreferrer"},Se=s("wait()"),Ie=s("\xA0 \u8FDB\u884C\u7B49\u5F85\u7684\u4EFB\u52A1\u73B0\u5728\u5C06\u4F1A\u963B\u585E\u76F4\u81F3 \xA0"),Ae={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#asyncio.Event.set",target:"_blank",rel:"noopener noreferrer"},Pe=s("set()"),Le=s("\xA0 \u65B9\u6CD5\u88AB\u518D\u6B21\u8C03\u7528\u3002"),Ne=n("p",null,[n("code",null,"is_set()")],-1),Oe=n("p",null,[s("\u5982\u679C\u4E8B\u4EF6\u5DF2\u88AB\u8BBE\u7F6E\u5219\u8FD4\u56DE \xA0"),n("code",null,"True"),s("\u3002")],-1),je=n("h3",{id:"condition",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#condition","aria-hidden":"true"},"#"),s(" Condition")],-1),Qe={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#condition",target:"_blank",rel:"noopener noreferrer"},Be=s("https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html#condition"),Re=e('<h3 id="semaphore" tabindex="-1"><a class="header-anchor" href="#semaphore" aria-hidden="true">#</a> Semaphore</h3><h3 id="boundedsemaphore" tabindex="-1"><a class="header-anchor" href="#boundedsemaphore" aria-hidden="true">#</a> BoundedSemaphore</h3><h2 id="\u961F\u5217\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#\u961F\u5217\u96C6\u5408" aria-hidden="true">#</a> \u961F\u5217\u96C6\u5408 <sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></h2>',3),We=s("asyncio \u961F\u5217\u88AB\u8BBE\u8BA1\u6210\u4E0E \xA0"),Xe={href:"https://docs.python.org/zh-cn/3.10/library/queue.html#module-queue",target:"_blank",rel:"noopener noreferrer"},De=s("queue"),Ve=s("\xA0 \u6A21\u5757\u7C7B\u4F3C\u3002\u5C3D\u7BA1 asyncio \u961F\u5217\u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u4F46\u662F\u4ED6\u4EEC\u662F\u88AB\u8BBE\u8BA1\u4E13\u7528\u4E8E async/await \u4EE3\u7801\u3002"),Me=s("\u6CE8\u610F asyncio \u7684\u961F\u5217\u6CA1\u6709 \xA0"),Ue=n("em",null,"timeout",-1),Ge=s("\xA0 \u5F62\u53C2\uFF1B\u8BF7\u4F7F\u7528 \xA0"),He={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio.wait_for",target:"_blank",rel:"noopener noreferrer"},Je=s("asyncio.wait_for()"),Ke=s("\xA0 \u51FD\u6570\u4E3A\u961F\u5217\u6DFB\u52A0\u8D85\u65F6\u64CD\u4F5C\u3002"),Ye=s("\u53C2\u89C1\u4E0B\u9762\u7684 \xA0"),Ze={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html#examples",target:"_blank",rel:"noopener noreferrer"},$e=s("Examples"),no=s("\xA0 \u90E8\u5206\u3002"),so=n("h3",{id:"queue",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#queue","aria-hidden":"true"},"#"),s(" Queue")],-1),ao=n("p",null,[n("code",null,"class asyncio.Queue(maxsize=0)")],-1),to=n("p",null,"FIFO \u961F\u5217",-1),eo=s("\u5982\u679C \xA0"),oo=n("em",null,"maxsize",-1),po=s("\xA0 \u5C0F\u4E8E\u7B49\u4E8E\u96F6\uFF0C\u5219\u961F\u5217\u5C3A\u5BF8\u662F\u65E0\u9650\u7684\u3002\u5982\u679C\u662F\u5927\u4E8E \xA0"),co=n("code",null,"0",-1),io=s("\xA0 \u7684\u6574\u6570\uFF0C\u5219\u5F53\u961F\u5217\u8FBE\u5230 \xA0"),lo=n("em",null,"maxsize",-1),ro=s("\xA0 \u65F6\uFF0C\xA0"),uo=n("code",null,"await put()",-1),ko=s("\xA0 \u5C06\u963B\u585E\u81F3\u67D0\u4E2A\u5143\u7D20\u88AB \xA0"),ho={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html#asyncio.Queue.get",target:"_blank",rel:"noopener noreferrer"},_o=s("get()"),mo=s("\xA0 \u53D6\u51FA\u3002"),vo=s("\u4E0D\u50CF\u6807\u51C6\u5E93\u4E2D\u7684\u5E76\u53D1\u578B \xA0"),yo={href:"https://docs.python.org/zh-cn/3.10/library/queue.html#module-queue",target:"_blank",rel:"noopener noreferrer"},bo=s("queue"),fo=s("\xA0\uFF0C\u961F\u5217\u7684\u5C3A\u5BF8\u4E00\u76F4\u662F\u5DF2\u77E5\u7684\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 \xA0"),go={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html#asyncio.Queue.qsize",target:"_blank",rel:"noopener noreferrer"},wo=s("qsize()"),xo=s("\xA0 \u65B9\u6CD5\u8FD4\u56DE\u3002"),zo=n("li",null,"maxsize",-1),To=n("li",null,"empty()",-1),qo=n("li",null,"full()",-1),Eo=n("li",null,"coroutine join()",-1),Co=n("li",null,"get_nowait() \u4E0D\u963B\u585E\u7684\u51FA\u961F",-1),Fo=s("coroutine join() \u963B\u585E\u81F3\u961F\u5217\u4E2D\u6240\u6709\u7684\u5143\u7D20\u90FD\u88AB\u63A5\u6536\u548C\u5904\u7406\u5B8C\u6BD5\u3002 "),So=s("\u5F53\u6761\u76EE\u6DFB\u52A0\u5230\u961F\u5217\u7684\u65F6\u5019\uFF0C\u672A\u5B8C\u6210\u4EFB\u52A1\u7684\u8BA1\u6570\u5C31\u4F1A\u589E\u52A0\u3002\u6BCF\u5F53\u6D88\u8D39\u534F\u7A0B\u8C03\u7528 \xA0"),Io={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html#asyncio.Queue.task_done",target:"_blank",rel:"noopener noreferrer"},Ao=s("task_done()"),Po=s("\u8868\u793A\u8FD9\u4E2A\u6761\u76EE\u5DF2\u7ECF\u88AB\u56DE\u6536\uFF0C\u8BE5\u6761\u76EE\u6240\u6709\u5DE5\u4F5C\u5DF2\u7ECF\u5B8C\u6210\uFF0C\u672A\u5B8C\u6210\u8BA1\u6570\u5C31\u4F1A\u51CF\u5C11\u3002\u5F53\u672A\u5B8C\u6210\u8BA1\u6570\u964D\u5230\u96F6\u7684\u65F6\u5019\uFF0C\xA0"),Lo={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html#asyncio.Queue.join",target:"_blank",rel:"noopener noreferrer"},No=s("join()"),Oo=s("\u963B\u585E\u88AB\u89E3\u9664\u3002"),jo=n("li",null,"coroutine put(item)",-1),Qo=n("li",null,"put_nowait(item) \u4E0D\u963B\u585E\u7684\u5165\u961F",-1),Bo=n("li",null,"qsize()",-1),Ro=n("li",null,"task_done() \u8868\u660E\u524D\u9762\u6392\u961F\u7684\u4EFB\u52A1\u5DF2\u7ECF\u5B8C\u6210\uFF0C\u5373 get \u51FA\u6765\u7684\u5143\u7D20\u76F8\u5173\u64CD\u4F5C\u5DF2\u7ECF\u5B8C\u6210\u3002",-1),Wo=n("h3",{id:"\u4F18\u5148\u7EA7\u961F\u5217",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4F18\u5148\u7EA7\u961F\u5217","aria-hidden":"true"},"#"),s(" \u4F18\u5148\u7EA7\u961F\u5217")],-1),Xo=n("p",null,[n("code",null,"class asyncio.PriorityQueue")],-1),Do={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html#asyncio.Queue",target:"_blank",rel:"noopener noreferrer"},Vo=s("Queue"),Mo=s("\xA0 \u7684\u53D8\u4F53\uFF1B\u6309\u4F18\u5148\u7EA7\u987A\u5E8F\u53D6\u51FA\u6761\u76EE (\u6700\u5C0F\u7684\u5148\u53D6\u51FA)\u3002"),Uo=e(`<p>\u6761\u76EE\u901A\u5E38\u662F \xA0<code>(priority_number, data)</code>\xA0 \u5F62\u5F0F\u7684\u5143\u7EC4\u3002</p><h3 id="\u540E\u8FDB\u5148\u51FA\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u540E\u8FDB\u5148\u51FA\u961F\u5217" aria-hidden="true">#</a> <strong>\u540E\u8FDB\u5148\u51FA\u961F\u5217</strong></h3><p><code>class asyncio.LifoQueue</code></p><h3 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> random
<span class="token keyword">import</span> time

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> queue<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token comment"># Get a &quot;work item&quot; out of the queue.</span>
        sleep_for <span class="token operator">=</span> <span class="token keyword">await</span> queue<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># Sleep for the &quot;sleep_for&quot; seconds.</span>
        <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>sleep_for<span class="token punctuation">)</span>

        <span class="token comment"># Notify the queue that the &quot;work item&quot; has been processed.</span>
        queue<span class="token punctuation">.</span>task_done<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string"> has slept for </span><span class="token interpolation"><span class="token punctuation">{</span>sleep_for<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string"> seconds&#39;</span></span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Create a queue that we will use to store our &quot;workload&quot;.</span>
    queue <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>Queue<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># Generate random timings and put them into the queue.</span>
    total_sleep_time <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        sleep_for <span class="token operator">=</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span>
        total_sleep_time <span class="token operator">+=</span> sleep_for
        queue<span class="token punctuation">.</span>put_nowait<span class="token punctuation">(</span>sleep_for<span class="token punctuation">)</span>

    <span class="token comment"># Create three worker tasks to process the queue concurrently.</span>
    tasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>worker<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;worker-</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> queue<span class="token punctuation">)</span><span class="token punctuation">)</span>
        tasks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>task<span class="token punctuation">)</span>

    <span class="token comment"># Wait until the queue is fully processed.</span>
    started_at <span class="token operator">=</span> time<span class="token punctuation">.</span>monotonic<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> queue<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>
    total_slept_for <span class="token operator">=</span> time<span class="token punctuation">.</span>monotonic<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> started_at

    <span class="token comment"># Cancel our worker tasks.</span>
    <span class="token keyword">for</span> task <span class="token keyword">in</span> tasks<span class="token punctuation">:</span>
        task<span class="token punctuation">.</span>cancel<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Wait until all worker tasks are cancelled.</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>gather<span class="token punctuation">(</span><span class="token operator">*</span>tasks<span class="token punctuation">,</span> return_exceptions<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;====&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;3 workers slept in parallel for </span><span class="token interpolation"><span class="token punctuation">{</span>total_slept_for<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string"> seconds&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;total expected sleep time: </span><span class="token interpolation"><span class="token punctuation">{</span>total_sleep_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string"> seconds&#39;</span></span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8B\u4EF6\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u5FAA\u73AF" aria-hidden="true">#</a> \u4E8B\u4EF6\u5FAA\u73AF <sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup></h2><h3 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> <strong>\u524D\u8A00</strong></h3><p>\u4E8B\u4EF6\u5FAA\u73AF\u662F\u6BCF\u4E2A asyncio \u5E94\u7528\u7684\u6838\u5FC3\u3002 \u4E8B\u4EF6\u5FAA\u73AF\u4F1A\u8FD0\u884C\u5F02\u6B65\u4EFB\u52A1\u548C\u56DE\u8C03\uFF0C\u6267\u884C\u7F51\u7EDC IO \u64CD\u4F5C\uFF0C\u4EE5\u53CA\u8FD0\u884C\u5B50\u8FDB\u7A0B\u3002</p>`,8),Go=s("\u5E94\u7528\u5F00\u53D1\u8005\u901A\u5E38\u5E94\u5F53\u4F7F\u7528\u9AD8\u5C42\u7EA7\u7684 asyncio \u51FD\u6570\uFF0C\u4F8B\u5982 \xA0"),Ho={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio.run",target:"_blank",rel:"noopener noreferrer"},Jo=s("asyncio.run()"),Ko=s("\uFF0C\u5E94\u5F53\u5F88\u5C11\u6709\u5FC5\u8981\u5F15\u7528\u5FAA\u73AF\u5BF9\u8C61\u6216\u8C03\u7528\u5176\u65B9\u6CD5\u3002 \u672C\u8282\u6240\u9488\u5BF9\u7684\u4E3B\u8981\u662F\u4F4E\u5C42\u7EA7\u4EE3\u7801\u3001\u5E93\u548C\u6846\u67B6\u7684\u7F16\u5199\u8005\uFF0C\u4ED6\u4EEC\u9700\u8981\u66F4\u7EC6\u81F4\u5730\u63A7\u5236\u4E8B\u4EF6\u5FAA\u73AF\u884C\u4E3A\u3002"),Yo=e('<h2 id="\u9AD8\u5C42\u7EA7-api-\u7D22\u5F15" tabindex="-1"><a class="header-anchor" href="#\u9AD8\u5C42\u7EA7-api-\u7D22\u5F15" aria-hidden="true">#</a> \u9AD8\u5C42\u7EA7 API \u7D22\u5F15 <sup class="footnote-ref"><a href="#footnote6">[6]</a><a class="footnote-anchor" id="footnote-ref6"></a></sup></h2><p>\u8FD9\u4E2A\u9875\u9762\u5217\u4E3E\u4E86\u6240\u6709\u80FD\u7528\u4E8E async/wait \u7684\u9AD8\u5C42\u7EA7 asyncio API \u96C6\u3002</p><h3 id="\u4EFB\u52A1-1" tabindex="-1"><a class="header-anchor" href="#\u4EFB\u52A1-1" aria-hidden="true">#</a> \u4EFB\u52A1</h3><p>\u8FD0\u884C\u5F02\u6B65\u7A0B\u5E8F\uFF0C\u521B\u5EFA Task \u5BF9\u8C61\uFF0C\u7B49\u5F85\u591A\u4EF6\u4E8B\u8FD0\u884C\u8D85\u65F6\u7684\u516C\u5171\u96C6\u3002</p><table><thead><tr><th>run()</th><th>\u521B\u5EFA\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u8FD0\u884C\u4E00\u4E2A\u534F\u7A0B\uFF0C\u5173\u95ED\u4E8B\u4EF6\u5FAA\u73AF\u3002</th></tr></thead><tbody><tr><td>create_task()</td><td>\u542F\u52A8\u4E00\u4E2A asyncio \u7684 Task \u5BF9\u8C61\u3002</td></tr><tr><td>await\xA0sleep()</td><td>\u4F11\u7720\u51E0\u79D2\u3002</td></tr><tr><td>await\xA0gather()</td><td>\u5E76\u53D1\u6267\u884C\u6240\u6709\u4E8B\u4EF6\u7684\u8C03\u5EA6\u548C\u7B49\u5F85\u3002</td></tr><tr><td>await\xA0wait_for()</td><td>\u6709\u8D85\u65F6\u63A7\u5236\u7684\u8FD0\u884C\u3002</td></tr><tr><td>await\xA0shield()</td><td>\u5C4F\u853D\u53D6\u6D88\u64CD\u4F5C</td></tr><tr><td>await\xA0wait()</td><td>\u5B8C\u6210\u60C5\u51B5\u7684\u76D1\u63A7\u5668</td></tr><tr><td>current_task()</td><td>\u8FD4\u56DE\u5F53\u524D Task \u5BF9\u8C61</td></tr><tr><td>all_tasks()</td><td>\u8FD4\u56DE\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u6240\u6709\u7684 task \u5BF9\u8C61\u3002</td></tr><tr><td>Task</td><td>Task \u5BF9\u8C61</td></tr><tr><td>to_thread()</td><td>\u5728\u4E0D\u540C\u7684 OS \u7EBF\u7A0B\u4E2D\u5F02\u6B65\u5730\u8FD0\u884C\u4E00\u4E2A\u51FD\u6570\u3002</td></tr><tr><td>run_coroutine_threadsafe()</td><td>\u4ECE\u5176\u4ED6 OS \u7EBF\u7A0B\u4E2D\u8C03\u5EA6\u4E00\u4E2A\u534F\u7A0B\u3002</td></tr><tr><td>for\xA0in\xA0as_completed()</td><td>\u7528 \xA0for\xA0 \u5FAA\u73AF\u76D1\u63A7\u5B8C\u6210\u60C5\u51B5\u3002</td></tr></tbody></table><p><strong>\u4F8B\u5B50</strong></p>',6),Zo={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio-example-gather",target:"_blank",rel:"noopener noreferrer"},$o=s("\u4F7F\u7528 asyncio.gather() \u5E76\u884C\u8FD0\u884C"),np=s("."),sp={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio-example-waitfor",target:"_blank",rel:"noopener noreferrer"},ap=s("\u4F7F\u7528 asyncio.wait_for() \u5F3A\u5236\u8D85\u65F6"),tp=s("."),ep={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio-example-task-cancel",target:"_blank",rel:"noopener noreferrer"},op=s("\u64A4\u9500\u534F\u7A0B"),pp=s("."),cp={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio-example-sleep",target:"_blank",rel:"noopener noreferrer"},ip=s("asyncio.sleep() \u7684\u7528\u6CD5"),lp=s("."),rp=s("\u8BF7\u4E3B\u8981\u53C2\u9605 \xA0"),up={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#coroutine",target:"_blank",rel:"noopener noreferrer"},dp=s("\u534F\u7A0B\u4E0E\u4EFB\u52A1\u6587\u6863"),kp=s("."),hp=e('<h3 id="\u961F\u5217\u96C6" tabindex="-1"><a class="header-anchor" href="#\u961F\u5217\u96C6" aria-hidden="true">#</a> <strong>\u961F\u5217\u96C6</strong></h3><p>\u961F\u5217\u96C6\u88AB\u7528\u4E8E\u591A\u4E2A\u5F02\u6B65 Task \u5BF9\u8C61\u7684\u8FD0\u884C\u8C03\u5EA6\uFF0C\u5B9E\u73B0\u8FDE\u63A5\u6C60\u4EE5\u53CA\u53D1\u5E03/\u8BA2\u9605\u6A21\u5F0F\u3002</p><table><thead><tr><th>Queue</th><th>\u5148\u8FDB\u5148\u51FA\u961F\u5217</th></tr></thead><tbody><tr><td>PriorityQueue</td><td>\u4F18\u5148\u7EA7\u961F\u5217\u3002</td></tr><tr><td>LifoQueue</td><td>\u540E\u8FDB\u5148\u51FA\u961F\u5217\u3002</td></tr></tbody></table><p><strong>\u4F8B\u5B50</strong></p>',4),_p={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html#asyncio-example-queue-dist",target:"_blank",rel:"noopener noreferrer"},mp=s("\u4F7F\u7528 asyncio.Queue \u5728\u591A\u4E2A\u5E76\u53D1\u4EFB\u52A1\u95F4\u5206\u914D\u5DE5\u4F5C\u91CF"),vp=s("."),yp=s("\u8BF7\u53C2\u9605 \xA0"),bp={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html#asyncio-queues",target:"_blank",rel:"noopener noreferrer"},fp=s("\u961F\u5217\u96C6\u6587\u6863"),gp=s("."),wp=e('<h3 id="\u5B50\u8FDB\u7A0B\u96C6" tabindex="-1"><a class="header-anchor" href="#\u5B50\u8FDB\u7A0B\u96C6" aria-hidden="true">#</a> \u5B50\u8FDB\u7A0B\u96C6</h3><p>\u7528\u4E8E\u751F\u6210\u5B50\u8FDB\u7A0B\u548C\u8FD0\u884C shell \u547D\u4EE4\u7684\u5DE5\u5177\u5305\u3002</p><table><thead><tr><th>await\xA0create_subprocess_exec()</th><th>\u521B\u5EFA\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u3002</th></tr></thead><tbody><tr><td>await\xA0create_subprocess_shell()</td><td>\u8FD0\u884C\u4E00\u4E2A shell \u547D\u4EE4\u3002</td></tr></tbody></table><p><strong>\u4F8B\u5B50</strong></p>',4),xp={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-subprocess.html#asyncio-example-subprocess-shell",target:"_blank",rel:"noopener noreferrer"},zp=s("\u6267\u884C\u4E00\u4E2A shell \u547D\u4EE4"),Tp=s("."),qp=s("\u8BF7\u53C2\u9605 \xA0"),Ep={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-subprocess.html#asyncio-subprocess",target:"_blank",rel:"noopener noreferrer"},Cp=s("\u5B50\u8FDB\u7A0B APIs"),Fp=s("\xA0 \u76F8\u5173\u6587\u6863."),Sp=e('<h3 id="\u6D41" tabindex="-1"><a class="header-anchor" href="#\u6D41" aria-hidden="true">#</a> \u6D41</h3><p>\u7528\u4E8E\u7F51\u7EDC IO \u5904\u7406\u7684\u9AD8\u7EA7 API \u96C6\u3002</p><table><thead><tr><th>await\xA0open_connection()</th><th>\u5EFA\u7ACB\u4E00\u4E2A TCP \u8FDE\u63A5\u3002</th></tr></thead><tbody><tr><td>await\xA0open_unix_connection()</td><td>\u5EFA\u7ACB\u4E00\u4E2A Unix socket \u8FDE\u63A5\u3002</td></tr><tr><td>await\xA0start_server()</td><td>\u542F\u52A8 TCP \u670D\u52A1\u3002</td></tr><tr><td>await\xA0start_unix_server()</td><td>\u542F\u52A8\u4E00\u4E2A Unix \u5957\u63A5\u5B57\u670D\u52A1\u3002</td></tr><tr><td>StreamReader</td><td>\u63A5\u6536\u7F51\u7EDC\u6570\u636E\u7684\u9AD8\u7EA7 async/await \u5BF9\u8C61\u3002</td></tr><tr><td>StreamWriter</td><td>\u53D1\u9001\u7F51\u7EDC\u6570\u636E\u7684\u9AD8\u7EA7 async/await \u5BF9\u8C61\u3002</td></tr></tbody></table><p><strong>\u4F8B\u5B50</strong></p>',4),Ip={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-stream.html#asyncio-example-stream",target:"_blank",rel:"noopener noreferrer"},Ap=s("TCP \u5BA2\u6237\u7AEF\u6837\u4F8B"),Pp=s("."),Lp=s("\u8BF7\u53C2\u9605 \xA0"),Np={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-stream.html#asyncio-streams",target:"_blank",rel:"noopener noreferrer"},Op=s("streams APIs"),jp=s("\xA0 \u6587\u6863\u3002"),Qp=e('<h3 id="\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65" aria-hidden="true">#</a> <strong>\u540C\u6B65</strong></h3><p>\u80FD\u88AB\u7528\u4E8E Task \u5BF9\u8C61\u96C6\u7684\uFF0C\u7C7B\u4F3C\u7EBF\u7A0B\u7684\u540C\u6B65\u57FA\u5143\u7EC4\u4EF6\u3002</p><table><thead><tr><th>Lock</th><th>\u4E92\u65A5\u9501\u3002</th></tr></thead><tbody><tr><td>Event</td><td>\u4E8B\u4EF6\u5BF9\u8C61\u3002</td></tr><tr><td>Condition</td><td>\u6761\u4EF6\u5BF9\u8C61</td></tr><tr><td>Semaphore</td><td>\u4FE1\u53F7\u91CF</td></tr><tr><td>BoundedSemaphore</td><td>\u6709\u754C\u7684\u4FE1\u53F7\u91CF\u3002</td></tr></tbody></table><h3 id="\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u5F02\u5E38" aria-hidden="true">#</a> <strong>\u5F02\u5E38</strong></h3><table><thead><tr><th>asyncio.TimeoutError</th><th>\u7C7B\u4F3C \xA0wait_for()\xA0 \u7B49\u51FD\u6570\u5728\u8D85\u65F6\u65F6\u5019\u88AB\u5F15\u53D1\u3002\u8BF7\u6CE8\u610F \xA0asyncio.TimeoutError\xA0 \u4E0E\u5185\u5EFA\u5F02\u5E38 \xA0TimeoutError\xA0 \u65E0\u5173\u3002</th></tr></thead><tbody><tr><td>asyncio.CancelledError</td><td>\u5F53\u4E00\u4E2A Task \u5BF9\u8C61\u88AB\u53D6\u6D88\u7684\u65F6\u5019\u88AB\u5F15\u53D1\u3002\u8BF7\u53C2\u9605 \xA0Task.cancel()\u3002</td></tr></tbody></table><p><strong>\u4F8B\u5B50</strong></p>',6),Bp={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio-example-task-cancel",target:"_blank",rel:"noopener noreferrer"},Rp=s("\u5728\u53D6\u6D88\u8BF7\u6C42\u53D1\u751F\u7684\u8FD0\u884C\u4EE3\u7801\u4E2D\u5982\u4F55\u5904\u7406 CancelledError \u5F02\u5E38"),Wp=s("."),Xp=s("\u8BF7\u53C2\u9605\u5B8C\u6574\u7684 \xA0"),Dp={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-exceptions.html#asyncio-exceptions",target:"_blank",rel:"noopener noreferrer"},Vp=s("asyncio \u4E13\u7528\u5F02\u5E38"),Mp=s("\xA0 \u5217\u8868."),Up=n("h2",{id:"\u5173\u4E8E-never-awaited-\u534F\u7A0B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5173\u4E8E-never-awaited-\u534F\u7A0B","aria-hidden":"true"},"#"),s(" \u5173\u4E8E never-awaited \u534F\u7A0B")],-1),Gp=s("\u5F53\u534F\u7A0B\u51FD\u6570\u88AB\u8C03\u7528\u800C\u4E0D\u662F\u88AB\u7B49\u5F85\u65F6 (\u5373\u6267\u884C \xA0"),Hp=n("code",null,"coro()",-1),Jp=s("\xA0 \u800C\u4E0D\u662F \xA0"),Kp=n("code",null,"await coro()",-1),Yp=s(") \u6216\u8005\u534F\u7A0B\u6CA1\u6709\u901A\u8FC7 \xA0"),Zp={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio.create_task",target:"_blank",rel:"noopener noreferrer"},$p=s("asyncio.create_task()"),nc=s("\xA0 \u88AB\u6392\u5165\u8BA1\u5212\u65E5\u7A0B\uFF0Casyncio \u5C06\u4F1A\u53D1\u51FA\u4E00\u6761 \xA0"),sc={href:"https://docs.python.org/zh-cn/3.10/library/exceptions.html#RuntimeWarning",target:"_blank",rel:"noopener noreferrer"},ac=s("RuntimeWarning"),tc=s(":"),ec=e(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;never scheduled&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    test<span class="token punctuation">(</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># test.py:7: RuntimeWarning: coroutine &#39;test&#39; was never awaited</span>
<span class="token comment">#  test()</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),oc=s("\u901A\u5E38\u7684\u4FEE\u590D\u65B9\u6CD5\u662F "),pc=n("code",null,"await",-1),cc=s(" \u534F\u7A0B\u6216\u8005\u8C03\u7528 \xA0"),ic={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-task.html#asyncio.create_task",target:"_blank",rel:"noopener noreferrer"},lc=s("asyncio.create_task()"),rc=s("\xA0 \u51FD\u6570:"),uc=e(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> test<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># \u5F00\u59CB\u8FD0\u884C\u5E76\u7B49\u5F85\u5B8C\u6210</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># \u5F00\u59CB\u8FD0\u884C</span>
        <span class="token keyword">await</span> task  <span class="token comment"># \u7B49\u5F85\u5B8C\u6210</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr class="footnotes-sep">`,2),dc={class:"footnotes"},kc={class:"footnotes-list"},hc={id:"footnote1",class:"footnote-item"},_c={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html",target:"_blank",rel:"noopener noreferrer"},mc=s("\u534F\u7A0B\u4E0E\u4EFB\u52A1"),vc=s(),yc=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"\u21A9\uFE0E",-1),bc={id:"footnote2",class:"footnote-item"},fc={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-stream.html",target:"_blank",rel:"noopener noreferrer"},gc=s("Stream \u6D41"),wc=s(),xc=n("a",{href:"#footnote-ref2",class:"footnote-backref"},"\u21A9\uFE0E",-1),zc={id:"footnote3",class:"footnote-item"},Tc={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-sync.html",target:"_blank",rel:"noopener noreferrer"},qc=s("\u540C\u6B65\u539F\u8BED"),Ec=s(),Cc=n("a",{href:"#footnote-ref3",class:"footnote-backref"},"\u21A9\uFE0E",-1),Fc={id:"footnote4",class:"footnote-item"},Sc={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-queue.html",target:"_blank",rel:"noopener noreferrer"},Ic=s("\u961F\u5217\u96C6\u5408"),Ac=s(),Pc=n("a",{href:"#footnote-ref4",class:"footnote-backref"},"\u21A9\uFE0E",-1),Lc={id:"footnote5",class:"footnote-item"},Nc={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-eventloop.html",target:"_blank",rel:"noopener noreferrer"},Oc=s("\u4E8B\u4EF6\u5FAA\u73AF"),jc=s(),Qc=n("a",{href:"#footnote-ref5",class:"footnote-backref"},"\u21A9\uFE0E",-1),Bc={id:"footnote6",class:"footnote-item"},Rc={href:"https://docs.python.org/zh-cn/3.10/library/asyncio-api-index.html",target:"_blank",rel:"noopener noreferrer"},Wc=s("\u9AD8\u5C42\u7EA7 API \u7D22\u5F15"),Xc=s(),Dc=n("a",{href:"#footnote-ref6",class:"footnote-backref"},"\u21A9\uFE0E",-1);function Vc(Mc,Uc){const t=o("ExternalLinkIcon"),p=o("RouterLink");return i(),l("div",null,[n("div",d,[k,n("p",null,[h,n("a",_,[m,a(t)]),v])]),y,n("p",null,[b,a(p,{to:"/code/language/python/python-concurrent.html#%E5%8D%8F%E7%A8%8B%E7%9A%84%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8A%E4%BB%A3%E7%A0%81"},{default:r(()=>[f]),_:1})]),g,n("ul",null,[n("li",null,[w,n("a",x,[z,a(t)]),T]),n("li",null,[q,n("a",E,[C,a(t)]),F]),n("li",null,[S,n("a",I,[A,a(t)]),P]),n("li",null,[L,n("a",N,[O,a(t)]),j]),n("li",null,[n("a",Q,[B,a(t)]),R])]),W,n("ul",null,[n("li",null,[X,n("a",D,[V,a(t)]),M,n("a",U,[G,a(t)]),H,n("a",J,[K,a(t)]),Y,n("a",Z,[$,a(t)]),nn]),n("li",null,[sn,n("a",an,[tn,a(t)]),en]),n("li",null,[on,n("a",pn,[cn,a(t)]),ln])]),rn,n("p",null,[un,n("a",dn,[kn,a(t)]),hn,n("a",_n,[mn,a(t)]),vn]),yn,bn,fn,gn,wn,n("p",null,[xn,zn,Tn,qn,En,Cn,n("a",Fn,[Sn,a(t)]),In]),An,Pn,n("p",null,[Ln,Nn,On,n("a",jn,[Qn,a(t)]),Bn]),Rn,Wn,n("p",null,[Xn,n("a",Dn,[Vn,a(t)]),Mn]),n("p",null,[Un,n("a",Gn,[Hn,a(t)]),Jn,n("a",Kn,[Yn,a(t)]),Zn]),$n,n("p",null,[ns,ss,as,n("a",ts,[es,a(t)]),os,ps,cs]),is,ls,rs,us,ds,n("p",null,[ks,n("a",hs,[_s,a(t)]),ms]),vs,n("p",null,[ys,bs,fs,n("a",gs,[ws,a(t)]),xs]),n("p",null,[zs,n("a",Ts,[qs,a(t)]),Es]),Cs,n("p",null,[Fs,n("a",Ss,[Is,a(t)]),As]),Ps,n("p",null,[Ls,n("a",Ns,[Os,a(t)]),js]),Qs,n("p",null,[Bs,n("a",Rs,[Ws,a(t)]),Xs]),Ds,Vs,Ms,n("p",null,[Us,n("a",Gs,[Hs,a(t)]),Js,Ks,Ys,Zs,$s,na,sa,n("a",aa,[ta,a(t)]),ea]),oa,n("p",null,[pa,n("a",ca,[ia,a(t)]),la,ra,ua,da,ka,n("a",ha,[_a,a(t)]),ma]),va,ya,n("p",null,[ba,fa,ga,n("a",wa,[xa,a(t)]),za]),Ta,qa,n("p",null,[Ea,n("a",Ca,[Fa,a(t)]),Sa,n("a",Ia,[Aa,a(t)]),Pa,n("a",La,[Na,a(t)]),Oa]),n("p",null,[ja,n("a",Qa,[Ba,a(t)]),Ra,n("a",Wa,[Xa,a(t)]),Da]),n("p",null,[n("a",Va,[Ma,a(t)]),Ua,n("a",Ga,[Ha,a(t)]),Ja,Ka,Ya]),n("p",null,[n("a",Za,[$a,a(t)]),nt,n("a",st,[at,a(t)]),tt,n("a",et,[ot,a(t)]),pt,n("a",ct,[it,a(t)]),lt]),n("p",null,[rt,n("a",ut,[dt,a(t)]),kt]),ht,n("p",null,[_t,n("a",mt,[vt,a(t)]),yt]),n("ul",null,[n("li",null,[bt,n("a",ft,[gt,a(t)]),wt]),n("li",null,[xt,zt,Tt,n("a",qt,[Et,a(t)]),Ct])]),Ft,n("p",null,[St,It,At,Pt,Lt,Nt,Ot,n("a",jt,[Qt,a(t)]),Bt,Rt,Wt]),Xt,Dt,Vt,n("p",null,[Mt,Ut,Gt,n("a",Ht,[Jt,a(t)]),Kt]),Yt,n("p",null,[Zt,n("a",$t,[ne,a(t)]),se,ae,te,n("a",ee,[oe,a(t)]),pe,ce,ie,n("a",le,[re,a(t)]),ue,de,ke,he,_e]),me,n("p",null,[ve,ye,be,n("a",fe,[ge,a(t)]),we]),xe,ze,Te,qe,Ee,n("p",null,[Ce,n("a",Fe,[Se,a(t)]),Ie,n("a",Ae,[Pe,a(t)]),Le]),Ne,Oe,je,n("p",null,[n("a",Qe,[Be,a(t)])]),Re,n("p",null,[We,n("a",Xe,[De,a(t)]),Ve]),n("p",null,[Me,Ue,Ge,n("a",He,[Je,a(t)]),Ke]),n("p",null,[Ye,n("a",Ze,[$e,a(t)]),no]),so,ao,to,n("p",null,[eo,oo,po,co,io,lo,ro,uo,ko,n("a",ho,[_o,a(t)]),mo]),n("p",null,[vo,n("a",yo,[bo,a(t)]),fo,n("a",go,[wo,a(t)]),xo]),n("ul",null,[zo,To,qo,Eo,Co,n("li",null,[Fo,n("ul",null,[n("li",null,[So,n("a",Io,[Ao,a(t)]),Po,n("a",Lo,[No,a(t)]),Oo])])]),jo,Qo,Bo,Ro]),Wo,Xo,n("p",null,[n("a",Do,[Vo,a(t)]),Mo]),Uo,n("p",null,[Go,n("a",Ho,[Jo,a(t)]),Ko]),Yo,n("ul",null,[n("li",null,[n("a",Zo,[$o,a(t)]),np]),n("li",null,[n("a",sp,[ap,a(t)]),tp]),n("li",null,[n("a",ep,[op,a(t)]),pp]),n("li",null,[n("a",cp,[ip,a(t)]),lp]),n("li",null,[rp,n("a",up,[dp,a(t)]),kp])]),hp,n("ul",null,[n("li",null,[n("a",_p,[mp,a(t)]),vp]),n("li",null,[yp,n("a",bp,[fp,a(t)]),gp])]),wp,n("ul",null,[n("li",null,[n("a",xp,[zp,a(t)]),Tp]),n("li",null,[qp,n("a",Ep,[Cp,a(t)]),Fp])]),Sp,n("ul",null,[n("li",null,[n("a",Ip,[Ap,a(t)]),Pp]),n("li",null,[Lp,n("a",Np,[Op,a(t)]),jp])]),Qp,n("ul",null,[n("li",null,[n("a",Bp,[Rp,a(t)]),Wp]),n("li",null,[Xp,n("a",Dp,[Vp,a(t)]),Mp])]),Up,n("p",null,[Gp,Hp,Jp,Kp,Yp,n("a",Zp,[$p,a(t)]),nc,n("a",sc,[ac,a(t)]),tc]),ec,n("p",null,[oc,pc,cc,n("a",ic,[lc,a(t)]),rc]),uc,n("section",dc,[n("ol",kc,[n("li",hc,[n("p",null,[n("a",_c,[mc,a(t)]),vc,yc])]),n("li",bc,[n("p",null,[n("a",fc,[gc,a(t)]),wc,xc])]),n("li",zc,[n("p",null,[n("a",Tc,[qc,a(t)]),Ec,Cc])]),n("li",Fc,[n("p",null,[n("a",Sc,[Ic,a(t)]),Ac,Pc])]),n("li",Lc,[n("p",null,[n("a",Nc,[Oc,a(t)]),jc,Qc])]),n("li",Bc,[n("p",null,[n("a",Rc,[Wc,a(t)]),Xc,Dc])])])])])}var Jc=c(u,[["render",Vc],["__file","python-asyncio.html.vue"]]);export{Jc as default};
