import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as o,a as s,b as c,d as a,e as n,r as i}from"./app.82b3fc8e.js";const l={},u=a(`<h2 id="euler\u6846\u67B6\u6E90\u7801\u89E3\u8BFB-\u6DF1\u5165\u63A2\u7A76nodeestimator" tabindex="-1"><a class="header-anchor" href="#euler\u6846\u67B6\u6E90\u7801\u89E3\u8BFB-\u6DF1\u5165\u63A2\u7A76nodeestimator" aria-hidden="true">#</a> Euler\u6846\u67B6\u6E90\u7801\u89E3\u8BFB\uFF1A\u6DF1\u5165\u63A2\u7A76NodeEstimator</h2><blockquote><p>\u672C\u6587\u4E00\u63A2Euler\u7684\u56FE\u91C7\u6837\u6D41\u7A0B\uFF0C\u4ECE\u4EE3\u7801\u5C42\u9762\u6DF1\u5165\u5206\u6790NodeEstimator\u3002\u7B2C\u4E00\u6B21\u5199\u8FD9\u79CD\u6E90\u7801\u5206\u6790\u7684\u6587\u7AE0\uFF0C\u7531\u4E8E\u8C03\u7528\u6808\u7565\u6DF1\uFF0C\u4E14\u9119\u4EBA\u6587\u5B57\u529F\u5E95\u8584\u5F31\uFF0C\u81F4\u4F7F\u884C\u6587\u7A0D\u663E\u7E41\u7410\uFF0C\u8FD8\u671B\u8BFB\u8005\u89C1\u8C05\u3002</p></blockquote><h2 id="estimator\u7684\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#estimator\u7684\u521B\u5EFA" aria-hidden="true">#</a> Estimator\u7684\u521B\u5EFA</h2><p>NodeEstimator\u5728\u8BAD\u7EC3\u65F6\uFF0C\u4F1A\u521B\u5EFA\u4E00\u4E2Atf.estimator.Estimator\u6765\u8FDB\u884C\u8BAD\u7EC3\uFF0C\u6211\u4EEC\u9996\u5148\u6765\u770B\u4E00\u4E0Btf.estimator.Estimator\u662F\u5982\u4F55\u521B\u5EFA\u7684\u3002</p><p>\u9996\u5148\uFF0CNodeEstimator\u4E3ABaseEstimator\u7684\u5B50\u7C7B\uFF0C\u4E3B\u8981\u662F\u91CD\u5199\u4E86</p><ul><li>train_input_fn()\uFF1A\u76F4\u63A5\u8FD4\u56DEbatch_size\uFF0C\u4F1A\u88ABget_train_from_input() \u63A5\u6536</li><li>get_train_from_input()\uFF1A\u91C7\u6837inputs\u4E2A\u8282\u70B9\uFF0C\u8FD4\u56DEn_id\uFF081-D tensor of nodes\uFF09</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">NodeEstimator</span><span class="token punctuation">(</span>BaseEstimator<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model_class<span class="token punctuation">,</span> params<span class="token punctuation">,</span> run_config<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>NodeEstimator<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>model_class<span class="token punctuation">,</span> params<span class="token punctuation">,</span> run_config<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_train_from_input</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inputs<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">:</span>
        result <span class="token operator">=</span> tf_euler<span class="token punctuation">.</span>sample_node<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span> params<span class="token punctuation">[</span><span class="token string">&#39;train_node_type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># \u8BBF\u95EEeuler\u670D\u52A1\u5668\u8FDB\u884C\u91C7\u6837</span>
        result<span class="token punctuation">.</span>set_shape<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>params<span class="token punctuation">[</span><span class="token string">&#39;batch_size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
        <span class="token comment"># set_shape\u7528\u4E8E\u63D0\u4F9B\u989D\u5916shape\u4FE1\u606F\uFF0C\u56E0\u4E3A\u4E0D\u80FD\u901A\u8FC7\u8BA1\u7B97\u56FE\u6765infer</span>
        <span class="token keyword">return</span> result

    <span class="token keyword">def</span> <span class="token function">train_input_fn</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>params<span class="token punctuation">[</span><span class="token string">&#39;batch_size&#39;</span><span class="token punctuation">]</span>

    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u56DE\u5230\u7236\u7C7B BaseEstimator\uFF0C\u5728\u8BAD\u7EC3\u65F6\u8C03\u7528 train() \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u521B\u5EFA\u4E00\u4E2A tf.estimator.Estimator\uFF0C\u5E76\u4F7F\u7528\u5176\u8FDB\u884C\u8BAD\u7EC3\u3002</p><p>\u8FD9\u91CC\u6709\u51E0\u4E2A\u91CD\u8981\u7684\u51FD\u6570\u9700\u8981\u5173\u6CE8\uFF1A</p><ul><li>input_fn\uFF1A\u7528\u4E8E\u6A21\u578B\u6570\u636E\u7684\u63D0\u4F9B\uFF0C\u8FD9\u91CC\u5C31\u662F\u524D\u6587\u63D0\u5230<a href="craftdocs://open?blockId=D0ADA26B-9672-4CA3-A399-CA6F5BB180EC&amp;spaceId=4725d35f-0536-9d85-0a69-346665ba7ebe">train_input_fn()</a>\uFF0C\u76F4\u63A5\u8FD4\u56DEbatch_size</li><li>model_fn\uFF1A\u7528\u4E8E\u6A21\u578B\u7684\u8BAD\u7EC3\uFF0C\u8FD4\u56DE\u7684\u662F\u5305\u88C5\u597D\u8BAD\u7EC3\u903B\u8F91\u7684tf.estimator.EstimatorSpec\uFF0C\u8FD9\u91CC\u4F20\u5165\u7684\u662F BaseEstimator._model_fn()</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">BaseEstimator</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">def</span> <span class="token function">train</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        estimator <span class="token operator">=</span> tf<span class="token punctuation">.</span>estimator<span class="token punctuation">.</span>Estimator<span class="token punctuation">(</span>
                model_fn<span class="token operator">=</span>self<span class="token punctuation">.</span>_model_fn<span class="token punctuation">,</span>
                params<span class="token operator">=</span>self<span class="token punctuation">.</span>params<span class="token punctuation">,</span>
                config<span class="token operator">=</span>self<span class="token punctuation">.</span>run_config<span class="token punctuation">,</span>
                model_dir<span class="token operator">=</span>self<span class="token punctuation">.</span>params<span class="token punctuation">[</span><span class="token string">&#39;model_dir&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> self<span class="token punctuation">.</span>profiling<span class="token punctuation">:</span>
            hooks <span class="token operator">=</span> <span class="token punctuation">[</span>tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span>ProfilerHook<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> output_dir<span class="token operator">=</span><span class="token string">&quot;prof_dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            hooks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>profiling<span class="token punctuation">,</span> hooks<span class="token punctuation">)</span>
        total_step <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            total_step <span class="token operator">=</span> self<span class="token punctuation">.</span>params<span class="token punctuation">[</span><span class="token string">&#39;total_step&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            total_step <span class="token operator">=</span> <span class="token boolean">None</span>
        estimator<span class="token punctuation">.</span>train<span class="token punctuation">(</span>input_fn<span class="token operator">=</span>self<span class="token punctuation">.</span>train_input_fn<span class="token punctuation">,</span>
                        hooks<span class="token operator">=</span>hooks<span class="token punctuation">,</span>
                        <span class="token comment">#steps=self.params[&#39;total_step&#39;])</span>
                        steps<span class="token operator">=</span>total_step<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EE7\u7EED\u770B BaseEstimator._model_fn()\uFF0C\u4ED6\u662F tf.estimator.Estimator \u8F93\u5165\u7684 model_fn\uFF0C\u5176\u7B7E\u540D\u56FA\u5B9A\u4E3A features, labels, mode, params\uFF1A</p><ul><li>features\uFF1Ainput_fn \u8FD4\u56DE\u7684\u7B2C\u4E00\u9879</li><li>labels\uFF1Ainput_fn \u8FD4\u56DE\u7684\u7B2C\u4E8C\u9879\uFF08\u8FD9\u91CC\u6CA1\u6709\uFF09</li><li>mode\uFF1Atrain or eval</li><li>params\uFF1A\u4E00\u4E2A\u88C5\u6709\u8D85\u53C2\u6570\u7684dict</li><li>\u8FD4\u56DE tf.estimator.EstimatorSpec\uFF08\u6307\u660E\u4E86\u5982\u4F55\u8BAD\u7EC3\uFF09</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">BaseEstimator</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">def</span> <span class="token function">_model_fn</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> features<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> self<span class="token punctuation">.</span>model_function
        <span class="token keyword">if</span> mode <span class="token operator">==</span> tf<span class="token punctuation">.</span>estimator<span class="token punctuation">.</span>ModeKeys<span class="token punctuation">.</span>TRAIN<span class="token punctuation">:</span>
            spec <span class="token operator">=</span> self<span class="token punctuation">.</span>train_model_init<span class="token punctuation">(</span>model<span class="token punctuation">,</span> features<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> params<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> mode <span class="token operator">==</span> tf<span class="token punctuation">.</span>estimator<span class="token punctuation">.</span>ModeKeys<span class="token punctuation">.</span>EVAL<span class="token punctuation">:</span>
            spec <span class="token operator">=</span> self<span class="token punctuation">.</span>evaluate_model_init<span class="token punctuation">(</span>model<span class="token punctuation">,</span> features<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> params<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            spec <span class="token operator">=</span> self<span class="token punctuation">.</span>infer_model_init<span class="token punctuation">(</span>model<span class="token punctuation">,</span> features<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> params<span class="token punctuation">)</span>
        <span class="token keyword">return</span> spec
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u5728\u8BAD\u7EC3\u65F6\u8C03\u7528\u4E86 BaseEstimator.train_model_init()</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">BaseEstimator</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">def</span> <span class="token function">train_model_init</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model<span class="token punctuation">,</span> features<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">:</span>
        source <span class="token operator">=</span> self<span class="token punctuation">.</span>get_train_from_input<span class="token punctuation">(</span>features<span class="token punctuation">,</span> params<span class="token punctuation">)</span>  <span class="token comment"># \u8F93\u5165 features=batch_size \u8F93\u51FA n_id</span>
        _<span class="token punctuation">,</span> loss<span class="token punctuation">,</span> metric_name<span class="token punctuation">,</span> metric <span class="token operator">=</span> model<span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token comment"># \u8F93\u5165 n_id \u8F93\u51FA loss\uFF08\u91C7\u6837\u5728\u5185\u90E8\u8FDB\u884C\uFF09</span>
        global_step <span class="token operator">=</span> tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span>get_or_create_global_step<span class="token punctuation">(</span><span class="token punctuation">)</span>
        optimizer <span class="token operator">=</span> tf_euler<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>optimizers<span class="token punctuation">.</span>get<span class="token punctuation">(</span>
                             params<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;optimizer&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;adam&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
                             params<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;learning_rate&#39;</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        train_op <span class="token operator">=</span> optimizer<span class="token punctuation">.</span>minimize<span class="token punctuation">(</span>loss<span class="token punctuation">,</span> global_step<span class="token punctuation">)</span>
        hooks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        tensor_to_log <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;step&#39;</span><span class="token punctuation">:</span> global_step<span class="token punctuation">,</span>
                         <span class="token string">&#39;loss&#39;</span><span class="token punctuation">:</span> loss<span class="token punctuation">,</span>
                         metric_name<span class="token punctuation">:</span> metric<span class="token punctuation">}</span>
        hooks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>
                tf<span class="token punctuation">.</span>train<span class="token punctuation">.</span>LoggingTensorHook<span class="token punctuation">(</span>
                    tensor_to_log<span class="token punctuation">,</span> every_n_iter<span class="token operator">=</span>params<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;log_steps&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        spec <span class="token operator">=</span> tf<span class="token punctuation">.</span>estimator<span class="token punctuation">.</span>EstimatorSpec<span class="token punctuation">(</span>mode<span class="token operator">=</span>mode<span class="token punctuation">,</span>
                                          loss<span class="token operator">=</span>loss<span class="token punctuation">,</span>
                                          train_op<span class="token operator">=</span>train_op<span class="token punctuation">,</span>
                                          training_hooks<span class="token operator">=</span>hooks<span class="token punctuation">)</span>
        <span class="token keyword">return</span> spec
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u624D\u662F\u4E3B\u8981\u914D\u7F6E\u8BAD\u7EC3\u65F6Estimator\u7684\u884C\u4E3A\u7684\u5730\u65B9\uFF1A</p><ol><li>\u4F7F\u7528<a href="craftdocs://open?blockId=2DD583FB-B6B5-418A-BCBD-4351E60DDE1C&amp;spaceId=4725d35f-0536-9d85-0a69-346665ba7ebe">get_train_from_input()</a>\u6765\u83B7\u53D6\u4E00\u4E2Amini-batch\u7684\u8282\u70B9id</li><li>\u5C06\u8282\u70B9id\u8F93\u5165\u6A21\u578Bmodel\uFF0C\u5F97\u5230\u635F\u5931\u51FD\u6570</li><li>\u751F\u6210\u8BAD\u7EC3op\uFF0C\u4EE5\u53CA\u4E00\u4E9B\u8F85\u52A9\u7684\u6307\u6807</li><li>\u521B\u5EFAtf.estimator.EstimatorSpec \u5E76\u8FD4\u56DE</li></ol><h2 id="\u6D88\u606F\u4F20\u9012\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u6D88\u606F\u4F20\u9012\u6D41\u7A0B" aria-hidden="true">#</a> \u6D88\u606F\u4F20\u9012\u6D41\u7A0B</h2><p>\u5176\u5B9E\u672C\u6587\u5230\u8FD9\u91CC\u5C31\u5E94\u8BE5\u7ED3\u675F\u4E86\uFF0C\u4F46\u662F\u6211\u8FD8\u60F3\u8981\u77E5\u9053\u6A21\u578B\u662F\u5982\u4F55\u91C7\u6837\u7684\uFF0C\u6D88\u606F\u662F\u5982\u4F55\u4F20\u9012\u7684\uFF0Cmodel\u91CC\u9762\u5177\u4F53\u505A\u4E86\u4EC0\u4E48\uFF0C\u4E8E\u662F\u6211\u4EEC\u5C06NodeEstimator\u5E94\u7528\u5728\u4E00\u4E2A\u5177\u4F53\u7684\u4F8B\u5B50\u4E2D\uFF0C\u770B\u770B\u5177\u4F53\u4F1A\u53D1\u751F\u4EC0\u4E48\u3002</p>`,20),k=n("\u4EE5\u4E0B\u662FEuler\u5B98\u65B9\u7684\u4E00\u4E2A"),r={href:"https://github.com/alibaba/euler/tree/master/examples/graphsage",target:"_blank",rel:"noopener noreferrer"},d=n("\u4F8B\u5B50"),v=n("\u7684\u7B80\u5316\u7248\uFF1A"),m=a(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> absolute_import
<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> division
<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> print_function

<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
<span class="token keyword">import</span> tf_euler

<span class="token keyword">from</span> euler_estimator <span class="token keyword">import</span> NodeEstimator
<span class="token keyword">from</span> graphsage <span class="token keyword">import</span> SupervisedGraphSage

config <span class="token operator">=</span> tf<span class="token punctuation">.</span>ConfigProto<span class="token punctuation">(</span><span class="token punctuation">)</span>
config<span class="token punctuation">.</span>gpu_options<span class="token punctuation">.</span>allow_growth <span class="token operator">=</span> <span class="token boolean">True</span>

dataset <span class="token operator">=</span> <span class="token string">&#39;cora&#39;</span>
hidden_dim <span class="token operator">=</span> <span class="token number">32</span>
layers <span class="token operator">=</span> <span class="token number">2</span>
fanouts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>
batch_size <span class="token operator">=</span> <span class="token number">32</span>
num_epochs <span class="token operator">=</span> <span class="token number">10</span>
log_steps <span class="token operator">=</span> <span class="token number">20</span>  <span class="token comment"># Number of steps to print log</span>
model_dir <span class="token operator">=</span> <span class="token string">&#39;ckpt&#39;</span> <span class="token comment"># Model checkpoint</span>
learning_rate <span class="token operator">=</span> <span class="token number">0.01</span> <span class="token comment"># Learning rate</span>
optimizer <span class="token operator">=</span> <span class="token string">&#39;adam&#39;</span> <span class="token comment"># Optimizer algorithm</span>
run_mode <span class="token operator">=</span> <span class="token string">&#39;train&#39;</span> <span class="token comment"># Run mode</span>

euler_graph <span class="token operator">=</span> tf_euler<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>get_dataset<span class="token punctuation">(</span>dataset<span class="token punctuation">)</span>
euler_graph<span class="token punctuation">.</span>load_graph<span class="token punctuation">(</span><span class="token punctuation">)</span>

dims <span class="token operator">=</span> <span class="token punctuation">[</span>hidden_dim<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>layers <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> run_mode <span class="token operator">==</span> <span class="token string">&#39;train&#39;</span><span class="token punctuation">:</span>
    metapath <span class="token operator">=</span> <span class="token punctuation">[</span>euler_graph<span class="token punctuation">.</span>train_edge_type<span class="token punctuation">]</span> <span class="token operator">*</span> layers  <span class="token comment"># metapath = [[&#39;train&#39;], [&#39;train&#39;]]</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    metapath <span class="token operator">=</span> <span class="token punctuation">[</span>euler_graph<span class="token punctuation">.</span>all_edge_type<span class="token punctuation">]</span> <span class="token operator">*</span> layers

num_steps <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>euler_graph<span class="token punctuation">.</span>total_size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> batch_size <span class="token operator">*</span> num_epochs<span class="token punctuation">)</span>

model <span class="token operator">=</span> SupervisedGraphSage<span class="token punctuation">(</span>dims<span class="token punctuation">,</span> fanouts<span class="token punctuation">,</span> metapath<span class="token punctuation">,</span>
                            euler_graph<span class="token punctuation">.</span>feature_idx<span class="token punctuation">,</span>
                            euler_graph<span class="token punctuation">.</span>feature_dim<span class="token punctuation">,</span>
                            euler_graph<span class="token punctuation">.</span>label_idx<span class="token punctuation">,</span>
                            euler_graph<span class="token punctuation">.</span>label_dim<span class="token punctuation">)</span>

params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;train_node_type&#39;</span><span class="token punctuation">:</span> euler_graph<span class="token punctuation">.</span>train_node_type<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token string">&#39;batch_size&#39;</span><span class="token punctuation">:</span> batch_size<span class="token punctuation">,</span>
          <span class="token string">&#39;optimizer&#39;</span><span class="token punctuation">:</span> optimizer<span class="token punctuation">,</span>
          <span class="token string">&#39;learning_rate&#39;</span><span class="token punctuation">:</span> learning_rate<span class="token punctuation">,</span>
          <span class="token string">&#39;log_steps&#39;</span><span class="token punctuation">:</span> log_steps<span class="token punctuation">,</span>
          <span class="token string">&#39;model_dir&#39;</span><span class="token punctuation">:</span> model_dir<span class="token punctuation">,</span>
          <span class="token string">&#39;id_file&#39;</span><span class="token punctuation">:</span> euler_graph<span class="token punctuation">.</span>id_file<span class="token punctuation">,</span>
          <span class="token string">&#39;infer_dir&#39;</span><span class="token punctuation">:</span> model_dir<span class="token punctuation">,</span>
          <span class="token string">&#39;total_step&#39;</span><span class="token punctuation">:</span> num_steps<span class="token punctuation">}</span>

config <span class="token operator">=</span> tf<span class="token punctuation">.</span>estimator<span class="token punctuation">.</span>RunConfig<span class="token punctuation">(</span>log_step_count_steps<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>

model_estimator <span class="token operator">=</span> NodeEstimator<span class="token punctuation">(</span>model<span class="token punctuation">,</span> params<span class="token punctuation">,</span> config<span class="token punctuation">)</span>

<span class="token keyword">if</span> run_mode <span class="token operator">==</span> <span class="token string">&#39;train&#39;</span><span class="token punctuation">:</span>
    model_estimator<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">elif</span> run_mode <span class="token operator">==</span> <span class="token string">&#39;evaluate&#39;</span><span class="token punctuation">:</span>
    model_estimator<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">elif</span> run_mode <span class="token operator">==</span> <span class="token string">&#39;infer&#39;</span><span class="token punctuation">:</span>
    model_estimator<span class="token punctuation">.</span>infer<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&#39;Run mode not exist!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F20\u5165\u7684model\u4E3ASupervisedGraphSage\uFF0C\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">SupervisedGraphSage</span><span class="token punctuation">(</span>SuperviseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> dims<span class="token punctuation">,</span> fanouts<span class="token punctuation">,</span> metapath<span class="token punctuation">,</span>
                 feature_idx<span class="token punctuation">,</span> feature_dim<span class="token punctuation">,</span>
                 label_idx<span class="token punctuation">,</span> label_dim<span class="token punctuation">,</span> max_id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>SupervisedGraphSage<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>label_idx<span class="token punctuation">,</span>
                                                  label_dim<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>gnn <span class="token operator">=</span> GNN<span class="token punctuation">(</span><span class="token string">&#39;sage&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sage&#39;</span><span class="token punctuation">,</span> dims<span class="token punctuation">,</span> fanouts<span class="token punctuation">,</span> metapath<span class="token punctuation">,</span>
                       feature_idx<span class="token punctuation">,</span> feature_dim<span class="token punctuation">,</span> max_id<span class="token operator">=</span>max_id<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">embed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>gnn<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0CGNN\u4E3A\u4E00\u4E2A\u6D88\u606F\u4F20\u9012\u5C42\uFF0C\u6211\u4EEC\u6682\u65F6\u4E0D\u53BB\u5173\u5FC3\uFF0C\u6211\u4EEC\u5148\u6765\u770B\u4E00\u4E0B\u4ED6\u7684\u7236\u7C7Btf_euler.python.mp_utils.base.SupervisedModel\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">SuperviseModel</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> label_idx<span class="token punctuation">,</span> label_dim<span class="token punctuation">,</span> metric_name<span class="token operator">=</span><span class="token string">&#39;f1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>label_idx <span class="token operator">=</span> label_idx
        self<span class="token punctuation">.</span>label_dim <span class="token operator">=</span> label_dim
        self<span class="token punctuation">.</span>metric_name <span class="token operator">=</span> metric_name
        self<span class="token punctuation">.</span>metric_class <span class="token operator">=</span> tf_euler<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>metrics<span class="token punctuation">.</span>get<span class="token punctuation">(</span>metric_name<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>out_fc <span class="token operator">=</span> tf<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span>label_dim<span class="token punctuation">,</span> use_bias<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">embed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> NotImplementedError

    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inputs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        label<span class="token punctuation">,</span> <span class="token operator">=</span> tf_euler<span class="token punctuation">.</span>get_dense_feature<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span>
                                            <span class="token punctuation">[</span>self<span class="token punctuation">.</span>label_idx<span class="token punctuation">]</span><span class="token punctuation">,</span>
                                            <span class="token punctuation">[</span>self<span class="token punctuation">.</span>label_dim<span class="token punctuation">]</span><span class="token punctuation">)</span>
        embedding <span class="token operator">=</span> self<span class="token punctuation">.</span>embed<span class="token punctuation">(</span>inputs<span class="token punctuation">)</span>
        logit <span class="token operator">=</span> self<span class="token punctuation">.</span>out_fc<span class="token punctuation">(</span>embedding<span class="token punctuation">)</span>

        metric <span class="token operator">=</span> self<span class="token punctuation">.</span>metric_class<span class="token punctuation">(</span>
            label<span class="token punctuation">,</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>logit<span class="token punctuation">)</span><span class="token punctuation">)</span>
        loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>sigmoid_cross_entropy_with_logits<span class="token punctuation">(</span>
            labels<span class="token operator">=</span>label<span class="token punctuation">,</span> logits<span class="token operator">=</span>logit<span class="token punctuation">)</span>
        loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>loss<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>embedding<span class="token punctuation">,</span> loss<span class="token punctuation">,</span> self<span class="token punctuation">.</span>metric_name<span class="token punctuation">,</span> metric<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u7C7B\u5177\u4F53\u505A\u4E86\u5982\u4E0B\u5DE5\u4F5C\uFF1A</p><ul><li>\u5C06\u5F97\u5230\u7684inputs\uFF08n_id\uFF09\u4F7F\u7528euler\u670D\u52A1\u5668\u83B7\u53D6\u8282\u70B9\u5BF9\u5E94\u7684\u6807\u7B7E</li><li>\u4F7F\u7528embed()\u65B9\u6CD5\u83B7\u53D6\u8282\u70B9\u5BF9\u5E94\u7684embedding</li><li>\u901A\u8FC7out_fc\uFF08\u4E00\u4E2A\u7EBF\u6027\u5C42\uFF09\u83B7\u53D6\u8F93\u51FAlogit</li><li>\u8BA1\u7B97metric\u548Closs</li></ul><p>\u8FD9\u91CC\u8FD8\u662F\u6CA1\u6709\u91C7\u6837\u7684\u903B\u8F91\uFF0C\u4E8E\u662F\u6211\u4EEC\u53EF\u4EE5\u63A8\u65AD\u91C7\u6837\u7684\u6D41\u7A0B\u5728\u4E4B\u524D\u5FFD\u7565\u7684GNN\u5C42\u4E2D\uFF0C\u6211\u4EEC\u53CD\u8FC7\u6765\u770BGNN\u5C42\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> tf_euler<span class="token punctuation">.</span>python<span class="token punctuation">.</span>mp_utils<span class="token punctuation">.</span>base_gnn <span class="token keyword">import</span> BaseGNNNet
<span class="token keyword">from</span> tf_euler<span class="token punctuation">.</span>python<span class="token punctuation">.</span>mp_utils<span class="token punctuation">.</span>base <span class="token keyword">import</span> SuperviseModel<span class="token punctuation">,</span> UnsuperviseModel


<span class="token keyword">class</span> <span class="token class-name">GNN</span><span class="token punctuation">(</span>BaseGNNNet<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> conv<span class="token punctuation">,</span> flow<span class="token punctuation">,</span>
                 dims<span class="token punctuation">,</span> fanouts<span class="token punctuation">,</span> metapath<span class="token punctuation">,</span>
                 feature_idx<span class="token punctuation">,</span> feature_dim<span class="token punctuation">,</span>
                 add_self_loops<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                 max_id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>GNN<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>conv<span class="token operator">=</span>conv<span class="token punctuation">,</span>
                                  flow<span class="token operator">=</span>flow<span class="token punctuation">,</span>
                                  dims<span class="token operator">=</span>dims<span class="token punctuation">,</span>
                                  fanouts<span class="token operator">=</span>fanouts<span class="token punctuation">,</span>
                                  metapath<span class="token operator">=</span>metapath<span class="token punctuation">,</span>
                                  add_self_loops<span class="token operator">=</span>add_self_loops<span class="token punctuation">,</span>
                                  max_id<span class="token operator">=</span>max_id<span class="token punctuation">,</span>
                                  <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>feature_idx<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            feature_idx <span class="token operator">=</span> <span class="token punctuation">[</span>feature_idx<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>feature_dim<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            feature_dim <span class="token operator">=</span> <span class="token punctuation">[</span>feature_dim<span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>feature_idx <span class="token operator">=</span> feature_idx
        self<span class="token punctuation">.</span>feature_dim <span class="token operator">=</span> feature_dim

    <span class="token keyword">def</span> <span class="token function">to_x</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        x<span class="token punctuation">,</span> <span class="token operator">=</span> tf_euler<span class="token punctuation">.</span>get_dense_feature<span class="token punctuation">(</span>n_id<span class="token punctuation">,</span>
                                        self<span class="token punctuation">.</span>feature_idx<span class="token punctuation">,</span>
                                        self<span class="token punctuation">.</span>feature_dim<span class="token punctuation">)</span>
        <span class="token keyword">return</span> x
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>GNN\u5C42\u53EA\u662F\u91CD\u5199\u4E86\u4E00\u4E2A to_x() \u65B9\u6CD5\uFF0C\u53EA\u662F\u5C06\u8F93\u5165\u7684\u8282\u70B9id\u4F7F\u7528euler\u670D\u52A1\u5668\u8F6C\u6362\u4E3A\u8282\u70B9\u5BF9\u5E94\u7684\u7279\u5F81\u3002</p><p>\u4E8E\u662F\u6211\u4EEC\u7EE7\u7EED\u53BB\u770B\u4ED6\u7684\u7236\u7C7Btf_euler.python.mp_utils.base_gnn.BaseGNNNet\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">BaseGNNNet</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> conv<span class="token punctuation">,</span> flow<span class="token punctuation">,</span> dims<span class="token punctuation">,</span>
                 fanouts<span class="token punctuation">,</span> metapath<span class="token punctuation">,</span>
                 add_self_loops<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                 max_id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
                 <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        conv_class <span class="token operator">=</span> utils<span class="token punctuation">.</span>get_conv_class<span class="token punctuation">(</span>conv<span class="token punctuation">)</span>
        flow_class <span class="token operator">=</span> utils<span class="token punctuation">.</span>get_flow_class<span class="token punctuation">(</span>flow<span class="token punctuation">)</span>
        <span class="token keyword">if</span> flow_class <span class="token operator">==</span> <span class="token string">&#39;whole&#39;</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>whole_graph <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>whole_graph <span class="token operator">=</span> <span class="token boolean">False</span>
        self<span class="token punctuation">.</span>convs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> dim <span class="token keyword">in</span> dims<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>convs<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>get_conv<span class="token punctuation">(</span>conv_class<span class="token punctuation">,</span> dim<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fc <span class="token operator">=</span> tf<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span>dims<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>sampler <span class="token operator">=</span> flow_class<span class="token punctuation">(</span>fanouts<span class="token punctuation">,</span> metapath<span class="token punctuation">,</span> add_self_loops<span class="token punctuation">,</span> max_id<span class="token operator">=</span>max_id<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_conv</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> conv_class<span class="token punctuation">,</span> dim<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> conv_class<span class="token punctuation">(</span>dim<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">to_x</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> NotImplementedError

    <span class="token keyword">def</span> <span class="token function">to_edge</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id_src<span class="token punctuation">,</span> n_id_dst<span class="token punctuation">,</span> e_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> e_id

    <span class="token keyword">def</span> <span class="token function">get_edge_attr</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> block<span class="token punctuation">)</span><span class="token punctuation">:</span>
        n_id_dst <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span>block<span class="token punctuation">.</span>n_id<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
        n_id_src<span class="token operator">=</span> mp_ops<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>n_id_dst<span class="token punctuation">,</span> block<span class="token punctuation">.</span>res_n_id<span class="token punctuation">)</span>
        n_id_src <span class="token operator">=</span> mp_ops<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>n_id_src<span class="token punctuation">,</span>
                                 block<span class="token punctuation">.</span>edge_index<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        n_id_dst <span class="token operator">=</span> mp_ops<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>n_id_dst<span class="token punctuation">,</span>
                                 block<span class="token punctuation">.</span>edge_index<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        n_id_src <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>n_id_src<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int64<span class="token punctuation">)</span>
        n_id_dst <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>n_id_dst<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int64<span class="token punctuation">)</span>
        edge_attr <span class="token operator">=</span> self<span class="token punctuation">.</span>to_edge<span class="token punctuation">(</span>n_id_src<span class="token punctuation">,</span> n_id_dst<span class="token punctuation">,</span> block<span class="token punctuation">.</span>e_id<span class="token punctuation">)</span>
        <span class="token keyword">return</span> edge_attr



    <span class="token keyword">def</span> <span class="token function">calculate_conv</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> conv<span class="token punctuation">,</span> inputs<span class="token punctuation">,</span> edge_index<span class="token punctuation">,</span>
                       size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> edge_attr<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> conv<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span> edge_index<span class="token punctuation">,</span> size<span class="token operator">=</span>size<span class="token punctuation">,</span> edge_attr<span class="token operator">=</span>edge_attr<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        data_flow <span class="token operator">=</span> self<span class="token punctuation">.</span>sampler<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>
        num_layers <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>convs<span class="token punctuation">)</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>to_x<span class="token punctuation">(</span>data_flow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>n_id<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i<span class="token punctuation">,</span> conv<span class="token punctuation">,</span> block <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>num_layers<span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>convs<span class="token punctuation">,</span> data_flow<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> block<span class="token punctuation">.</span>e_id <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                edge_attr <span class="token operator">=</span> <span class="token boolean">None</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                edge_attr <span class="token operator">=</span> self<span class="token punctuation">.</span>get_edge_attr<span class="token punctuation">(</span>block<span class="token punctuation">)</span>
            x_src <span class="token operator">=</span> mp_ops<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>x<span class="token punctuation">,</span> block<span class="token punctuation">.</span>res_n_id<span class="token punctuation">)</span>
            x_dst <span class="token operator">=</span> <span class="token boolean">None</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>whole_graph <span class="token keyword">else</span> x
            x <span class="token operator">=</span> self<span class="token punctuation">.</span>calculate_conv<span class="token punctuation">(</span>conv<span class="token punctuation">,</span>
                                    <span class="token punctuation">(</span>x_src<span class="token punctuation">,</span> x_dst<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                    block<span class="token punctuation">.</span>edge_index<span class="token punctuation">,</span>
                                    size<span class="token operator">=</span>block<span class="token punctuation">.</span>size<span class="token punctuation">,</span>
                                    edge_attr<span class="token operator">=</span>edge_attr<span class="token punctuation">)</span>
            x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>fc<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token keyword">return</span> x
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521D\u59CB\u5316\u65F6\uFF0C\u4ED6\u83B7\u53D6\u4E86\u4E24\u4E2A\u7C7B\u5BF9\u8C61\uFF1A</p><ul><li>conv_class\uFF1A\u5377\u79EF\u6C47\u805A\u65B9\u6CD5\uFF0C\u8FD9\u91CC\u662F\uFF1Atf_euler.python.convolution.SAGEConv</li><li>flow_class\uFF1A\u56FE\u62BD\u6837\u65B9\u6CD5\uFF0C\u8FD9\u91CC\u662F\uFF1Atf_euler.python.dataflow.SageDataFlow</li></ul><h3 id="\u56FE\u62BD\u6837\u65B9\u6CD5-\u6784\u9020\u6D88\u606F\u4F20\u9012\u7684\u8DEF\u5F84\u2014\u2014dataflow" tabindex="-1"><a class="header-anchor" href="#\u56FE\u62BD\u6837\u65B9\u6CD5-\u6784\u9020\u6D88\u606F\u4F20\u9012\u7684\u8DEF\u5F84\u2014\u2014dataflow" aria-hidden="true">#</a> \u56FE\u62BD\u6837\u65B9\u6CD5\uFF1A\u6784\u9020\u6D88\u606F\u4F20\u9012\u7684\u8DEF\u5F84\u2014\u2014DataFlow</h3><p>\u4F7F\u7528flow_class\u521B\u5EFA\u4E86\u4E00\u4E2A\u91C7\u6837\u5668sampler\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u4E0B\u8FD9\u4E2Asampler\u7684\u5B9A\u4E49\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> tf_euler<span class="token punctuation">.</span>python<span class="token punctuation">.</span>dataflow<span class="token punctuation">.</span>neighbor_dataflow <span class="token keyword">import</span> UniqueDataFlow

<span class="token keyword">class</span> <span class="token class-name">SageDataFlow</span><span class="token punctuation">(</span>UniqueDataFlow<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> fanouts<span class="token punctuation">,</span> metapath<span class="token punctuation">,</span>
                 add_self_loops<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                 max_id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
                 <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>SageDataFlow<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>num_hops<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>metapath<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                           add_self_loops<span class="token operator">=</span>add_self_loops<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fanouts <span class="token operator">=</span> fanouts
        self<span class="token punctuation">.</span>metapath <span class="token operator">=</span> metapath
        self<span class="token punctuation">.</span>max_id <span class="token operator">=</span> max_id

    <span class="token keyword">def</span> <span class="token function">get_neighbors</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        neighbors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        neighbor_src <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> hop_edge_types<span class="token punctuation">,</span> count <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>metapath<span class="token punctuation">,</span> self<span class="token punctuation">.</span>fanouts<span class="token punctuation">)</span><span class="token punctuation">:</span>
            n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>n_id<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            one_neighbor<span class="token punctuation">,</span> _w<span class="token punctuation">,</span> _ <span class="token operator">=</span> tf_euler<span class="token punctuation">.</span>sample_neighbor<span class="token punctuation">(</span>
                n_id<span class="token punctuation">,</span> hop_edge_types<span class="token punctuation">,</span> count<span class="token punctuation">,</span> default_node<span class="token operator">=</span>self<span class="token punctuation">.</span>max_id<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            neighbors<span class="token punctuation">.</span>append<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>one_neighbor<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            node_src <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
            node_src <span class="token operator">=</span> tf<span class="token punctuation">.</span>tile<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>node_src<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> count<span class="token punctuation">]</span><span class="token punctuation">)</span>
            node_src <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>node_src<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            neighbor_src<span class="token punctuation">.</span>append<span class="token punctuation">(</span>node_src<span class="token punctuation">)</span>
            new_n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>one_neighbor<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>new_n_id<span class="token punctuation">,</span> n_id<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
            n_id<span class="token punctuation">,</span> _ <span class="token operator">=</span> tf<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>n_id<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> neighbors<span class="token punctuation">,</span> neighbor_src
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5355\u770B\u8FD9\u4E2A\u7C7B\u770B\u4E0D\u51FA\u4EC0\u4E48\uFF0C\u6211\u4EEC\u9700\u8981\u627E\u5230\u8C03\u7528\u4ED6\u7684__call__()\u65B9\u6CD5\uFF0C\u5728\u7236\u7C7B\u4E2D\u627E\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">UniqueDataFlow</span><span class="token punctuation">(</span>NeighborDataFlow<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> num_hops<span class="token punctuation">,</span>
                 add_self_loops<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>UniqueDataFlow<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>num_hops<span class="token operator">=</span>num_hops<span class="token punctuation">,</span>
                                             add_self_loops<span class="token operator">=</span>add_self_loops<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">produce_subgraph</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>n_id<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        inv <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
        last_idx <span class="token operator">=</span> inv

        data_flow <span class="token operator">=</span> DataFlow<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>
        n_neighbors<span class="token punctuation">,</span> n_edge_src <span class="token operator">=</span> self<span class="token punctuation">.</span>get_neighbors<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>num_hops<span class="token punctuation">)</span><span class="token punctuation">:</span>
            new_n_id <span class="token operator">=</span> n_neighbors<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            edge_src <span class="token operator">=</span> n_edge_src<span class="token punctuation">[</span>i<span class="token punctuation">]</span>

            new_n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>new_n_id<span class="token punctuation">,</span> n_id<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
            new_n_id<span class="token punctuation">,</span> new_inv <span class="token operator">=</span> tf<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>new_n_id<span class="token punctuation">)</span>
            res_n_id <span class="token operator">=</span> new_inv<span class="token punctuation">[</span><span class="token operator">-</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
            <span class="token keyword">if</span> self<span class="token punctuation">.</span>add_self_loops<span class="token punctuation">:</span>
                edge_src <span class="token operator">=</span> tf<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>edge_src<span class="token punctuation">,</span> last_idx<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
                last_idx <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>new_n_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                new_inv <span class="token operator">=</span> new_inv<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">]</span>
                last_idx <span class="token operator">=</span> new_inv

            n_id <span class="token operator">=</span> new_n_id
            edge_dst <span class="token operator">=</span> new_inv
            edge_index <span class="token operator">=</span> tf<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">[</span>edge_src<span class="token punctuation">,</span> edge_dst<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
            e_id <span class="token operator">=</span> <span class="token boolean">None</span>
            data_flow<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_n_id<span class="token punctuation">,</span> res_n_id<span class="token punctuation">,</span> e_id<span class="token punctuation">,</span> edge_index<span class="token punctuation">)</span>
        <span class="token keyword">return</span> data_flow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u6837\u6CA1\u6709__call__()\u65B9\u6CD5\uFF0C\u7EE7\u7EED\u53BB\u7236\u7C7B\u627E\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> tf_euler<span class="token punctuation">.</span>python<span class="token punctuation">.</span>dataflow<span class="token punctuation">.</span>base_dataflow <span class="token keyword">import</span> DataFlow


<span class="token keyword">class</span> <span class="token class-name">NeighborDataFlow</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> num_hops<span class="token punctuation">,</span>
                 add_self_loops<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                 <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>num_hops <span class="token operator">=</span> num_hops
        self<span class="token punctuation">.</span>add_self_loops <span class="token operator">=</span> add_self_loops

    <span class="token keyword">def</span> <span class="token function">get_neighbors</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&#39;&#39;&#39;
        The neighbor sampler in a mini-batch of n_id.
        It returns: neighbors: a list of &#39;tensor&#39;;
                    neighbor_src: a list of &#39;tensor&#39;
        Input:
          n_id: input nodes
        Output:
          neighbors: [[n_id&#39;s neighbor], [n_id&#39;s neighbor&#39;s neighbor], ...]
          neighbor_src: [[n_neighbor_src], [n_neighbor_neighbor_src], ...]
        &#39;&#39;&#39;</span>
        <span class="token keyword">raise</span> NotImplementedError<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">produce_subgraph</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># \u751F\u6210\u8BA1\u7B97\u56FE\uFF08\u591A\u4E2A\u4E8C\u5206\u56FE\uFF09</span>
        n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>n_id<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        inv <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
        last_idx <span class="token operator">=</span> inv

        data_flow <span class="token operator">=</span> DataFlow<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>
        n_neighbors<span class="token punctuation">,</span> n_edge_src <span class="token operator">=</span> self<span class="token punctuation">.</span>get_neighbors<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>num_hops<span class="token punctuation">)</span><span class="token punctuation">:</span>
            new_n_id <span class="token operator">=</span> n_neighbors<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            edge_src <span class="token operator">=</span> n_edge_src<span class="token punctuation">[</span>i<span class="token punctuation">]</span>

            new_n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>new_n_id<span class="token punctuation">,</span> n_id<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
            new_inv <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>new_n_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
            res_n_id <span class="token operator">=</span> new_inv<span class="token punctuation">[</span><span class="token operator">-</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
            <span class="token keyword">if</span> self<span class="token punctuation">.</span>add_self_loops<span class="token punctuation">:</span>
                edge_src <span class="token operator">=</span> tf<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>edge_src<span class="token punctuation">,</span> last_idx<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
                last_idx <span class="token operator">=</span> new_inv
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                new_inv <span class="token operator">=</span> new_inv<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">]</span>
                last_idx <span class="token operator">=</span> new_inv

            n_id <span class="token operator">=</span> new_n_id
            edge_dst <span class="token operator">=</span> new_inv
            edge_index <span class="token operator">=</span> tf<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">[</span>edge_src<span class="token punctuation">,</span> edge_dst<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
            e_id <span class="token operator">=</span> <span class="token boolean">None</span>
            data_flow<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_n_id<span class="token punctuation">,</span> res_n_id<span class="token punctuation">,</span> e_id<span class="token punctuation">,</span> edge_index<span class="token punctuation">)</span>
        <span class="token keyword">return</span> data_flow

    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        producer <span class="token operator">=</span> self<span class="token punctuation">.</span>produce_subgraph
        <span class="token keyword">return</span> producer<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6B21\u7EC8\u4E8E\u6709\u4E86\u3002\u3002\u5177\u4F53\u6765\u8BF4\u5C31\u662F\u4F20\u5165n_id\u9700\u8981\u91C7\u6837\u7684\u8282\u70B9id\uFF0C\u8C03\u7528produce_subgraph()\u65B9\u6CD5\u6765\u83B7\u53D6\u6D88\u606F\u4F20\u9012\u7528\u7684\u8BA1\u7B97\u56FE\u3002\u8BE5\u65B9\u6CD5\u7684\u76EE\u7684\u4E3A\u521B\u5EFA\u4E00\u4E2A\u6D88\u606F\u4F20\u9012\u7684DataFlow\uFF0CDataFlow\u662F\u4E00\u4E2ABlock\u7684\u5217\u8868\uFF0C\u4EE5\u4E0B\u662F\u4E24\u8005\u7684\u5B9A\u4E49\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Block</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">,</span> res_n_id<span class="token punctuation">,</span> e_id<span class="token punctuation">,</span> edge_index<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>n_id <span class="token operator">=</span> n_id  <span class="token comment"># \u4E8C\u5206\u56FE\u4E2D\u6D88\u606F\u4F20\u9012\u7684\u8D77\u70B9</span>
        self<span class="token punctuation">.</span>res_n_id <span class="token operator">=</span> res_n_id  <span class="token comment"># \u4E8C\u5206\u56FE\u4E2D\u6D88\u606F\u4F20\u9012\u7684\u7EC8\u70B9</span>
        self<span class="token punctuation">.</span>e_id <span class="token operator">=</span> e_id  <span class="token comment"># edge_index\u4E2D\u8FB9\u7684id</span>
        self<span class="token punctuation">.</span>edge_index <span class="token operator">=</span> edge_index  <span class="token comment"># \u4E8C\u5206\u56FE\u7684\u8FB9\uFF0C[2, edge_sizes]</span>
        self<span class="token punctuation">.</span>size <span class="token operator">=</span> size  <span class="token comment"># \u4E8C\u5206\u56FE\u7684\u5F62\u72B6 (M, N)</span>


<span class="token keyword">class</span> <span class="token class-name">DataFlow</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>n_id <span class="token operator">=</span> n_id
        self<span class="token punctuation">.</span>__last_n_id__ <span class="token operator">=</span> n_id
        self<span class="token punctuation">.</span>blocks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">append</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">,</span> res_n_id<span class="token punctuation">,</span> e_id<span class="token punctuation">,</span> edge_index<span class="token punctuation">)</span><span class="token punctuation">:</span>
        size <span class="token operator">=</span> <span class="token punctuation">[</span>tf<span class="token punctuation">.</span>shape<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__last_n_id__<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>shape<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
        block <span class="token operator">=</span> Block<span class="token punctuation">(</span>n_id<span class="token punctuation">,</span> res_n_id<span class="token punctuation">,</span> e_id<span class="token punctuation">,</span> edge_index<span class="token punctuation">,</span> size<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>blocks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>block<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>__last_n_id__ <span class="token operator">=</span> n_id

    <span class="token keyword">def</span> <span class="token function">__len__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>blocks<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__getitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>idx<span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">__iter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> block <span class="token keyword">in</span> self<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            <span class="token keyword">yield</span> block
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Block\u662F\u4E00\u4E2A\u8868\u793A\u6D88\u606F\u4F20\u9012\u7684\u4E8C\u5206\u56FE\uFF0C\u4E8C\u5206\u56FE\u4E24\u8FB9\u7684\u8282\u70B9\u5206\u522B\u4E3An_id \u4E0E res_n_id\uFF0Cn_id\uFF0C\u6D88\u606F\u5C06\u4F1A\u4ECE n_id \u8868\u793A\u7684\u8282\u70B9\u4F20\u9012\u5230 res_n_id \u8868\u793A\u7684\u8282\u70B9\u3002</li><li>Block\u7684\u5F62\u72B6\u5B9A\u4E49\u6210(M, N)\uFF0C M\u4E3Asrc, N\u4E3Adst\uFF0C\u4F46\u5728Euler\u4E2D\uFF0C\u6D88\u606F\u662F\u4ECEdst\u4F20\u9012\u7ED9src\u7684\uFF08\u8FD9\u70B9\u4E0EPyG\u7684\u5B9E\u73B0\u4E0D\u540C\uFF09\u3002</li><li>n_id \u4E3A\u8282\u70B9\u539F\u672C\u7684id\uFF0C\u800Cres_n_id\u4F7F\u7528\u7684\u662Fn_id\u6570\u7EC4\u7684\u7D22\u5F15\u3002\uFF08\u8FD9\u4E2A\u5728\u540E\u9762\u7684\u4EE3\u7801\u4E2D\u4F1A\u6709\u4F53\u73B0\uFF09</li><li>DataFlow\u662F\u591A\u4E2ABlock\u7684\u5217\u8868\uFF0C\u8868\u793A\u6D88\u606F\u4ECE\u7B2Ck\u9636\u90BB\u5C45\u4E00\u7EA7\u4E00\u7EA7\u4F20\u9012\u5230\u76EE\u6807\u8282\u70B9\u7684\u5168\u90E8\u8FC7\u7A0B\u3002\u6BCF\u4F20\u9012\u4E00\u7EA7\u90FD\u4F7F\u7528\u4E00\u4E2A\u4E8C\u5206\u56FEBlock\u8868\u793A\u5176\u7ECF\u8FC7\u7684\u8282\u70B9\u3002</li><li>\u7531\u4E8E\u90BB\u5C45\u91C7\u6837\u7684\u8FC7\u7A0B\u4E0E\u6D88\u606F\u4F20\u9012\u7684\u65B9\u5411\u662F\u76F8\u53CD\u7684\uFF0C\u6240\u4EE5\u53EF\u4EE5\u770B\u5230DataFlow\u7684__getitem__\u4E0E__iter__\u65B9\u6CD5\u4E2D\u90FD\u662F\u4ECE\u540E\u5F80\u524D\u904D\u5386\u7684\u3002</li></ul><p>UniqueDataFlow\u91CD\u5199\u4E86NeighborDataFlow\u4E2D\u7684produce_subgraph()\u65B9\u6CD5\uFF0C\u4E8E\u662F\u6211\u4EEC\u76F4\u63A5\u6765\u770BUniqueDataFlow\u7C7B\u7684produce_subgraph()\u65B9\u6CD5\uFF0C\u7531\u4E8E\u4E0B\u9762\u7684\u4EE3\u7801\u4E2D\u6709\u4E24\u79CD\u8282\u70B9\u7F16\u53F7\u65B9\u5F0F\uFF0C\u5BB9\u6613\u6DF7\u4E71\uFF0C\u6211\u76F4\u63A5\u5728\u4EE3\u7801\u4E2D\u9010\u884C\u52A0\u4E0A\u6CE8\u91CA\uFF0C\u4FBF\u4E8E\u7406\u89E3\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># \u6CE8\uFF1AEuler\u6846\u67B6\u4E2D\uFF0C\u8FB9\u7684\u65B9\u5411\u6307\u5411\u7684\u4E3A\u90BB\u5C45\u91C7\u6837\u7684\u65B9\u5411\uFF0C\u6E90\u8282\u70B9\uFF08src\uFF09\u7684\u90BB\u5C45\u4E3A\u5176\u8FB9\u6307\u5411\u7684\u5176\u4ED6\u8282\u70B9\uFF08dst\uFF09\uFF0C\u4E0E\u6D88\u606F\u4F20\u9012\u7684\u65B9\u5411\u76F8\u53CD\u7684\u3002</span>
<span class="token comment"># \u6CE8\uFF1A\u4EE5\u4E0B\u7528\u8BCD\u4E2D\uFF0C&quot;\u8282\u70B9\u7F16\u53F7&quot;\u8868\u793A\u8282\u70B9\u5168\u5C40\u7684\u7F16\u53F7\uFF0C&quot;\u7D22\u5F15&quot;\u8868\u793An_id\u6570\u7EC4\u7684\u4E0B\u6807</span>
<span class="token keyword">def</span> <span class="token function">produce_subgraph</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
    n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>n_id<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># n_id \u4E3A\u9700\u8981\u91C7\u6837\u7684\u6E90\u8282\u70B9\u7F16\u53F7</span>
    inv <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># inv \u4E3A n_id\u7684\u7D22\u5F15</span>
    last_idx <span class="token operator">=</span> inv  <span class="token comment"># \u4FDD\u7559\u6700\u540E\u4E00\u6B21\u7684\u7D22\u5F15\uFF0C\u5373\u6E90\u8282\u70B9\u7684\u7D22\u5F15</span>

    data_flow <span class="token operator">=</span> DataFlow<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>  <span class="token comment"># \u521B\u5EFA\u7A7A\u7684DataFlow\uFF0C\u5C06n_id\u4F5C\u4E3A\u90BB\u5C45\u91C7\u6837\u7684\u8D77\u70B9</span>
    n_neighbors<span class="token punctuation">,</span> n_edge_src <span class="token operator">=</span> self<span class="token punctuation">.</span>get_neighbors<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>  <span class="token comment"># \u83B7\u53D6k\u9636\u7684\u90BB\u5C45</span>
    <span class="token comment"># neighbors\uFF1A\u4E00\u4E2A\u5217\u8868\uFF1A[[n_id\u7684\u90BB\u5C45], [n_id\u7684\u90BB\u5C45\u7684\u90BB\u5C45], \u2026]</span>
    <span class="token comment"># n_edge_src\uFF1A\u4E00\u4E2A\u5217\u8868\uFF1A[[n_neighbor_src], [n_neighbor_neighbor_src], \u2026]\uFF0C\u8868\u793Aneighbors\u4E2D\u90BB\u5C45\u5BF9\u5E94\u7684\u6E90\u8282\u70B9\u7D22\u5F15</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>num_hops<span class="token punctuation">)</span><span class="token punctuation">:</span>
        new_n_id <span class="token operator">=</span> n_neighbors<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment"># new_n_id\u8868\u793A\u672C\u8F6E\u90BB\u5C45\u8282\u70B9\u7F16\u53F7\uFF08dst\uFF09</span>
        edge_src <span class="token operator">=</span> n_edge_src<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  <span class="token comment"># edge_src\u8868\u793A\u672C\u8F6E\u90BB\u5C45\u7684\u6E90\u8282\u70B9\u7D22\u5F15\uFF08src\uFF09</span>

        new_n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>new_n_id<span class="token punctuation">,</span> n_id<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
        new_n_id<span class="token punctuation">,</span> new_inv <span class="token operator">=</span> tf<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>new_n_id<span class="token punctuation">)</span> <span class="token comment"># \u5C06\u90BB\u5C45\u8282\u70B9\u4E0E\u6E90\u8282\u70B9\u7F16\u53F7\u53D6\u4E00\u4E2A\u5E76\u96C6\uFF0C\u5E76\u83B7\u5F97\u65B0\u8282\u70B9\u7684\u7D22\u5F15\uFF08\u4F5C\u4E3A\u8FB9\u7684\u7EC8\u70B9\uFF09</span>
        res_n_id <span class="token operator">=</span> new_inv<span class="token punctuation">[</span><span class="token operator">-</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token comment"># res_n_id\u4E3An_id\u7684\u65B0\u7D22\u5F15\uFF0C\u5373\u6E90\u8282\u70B9\u5728\u4E0B\u4E00\u7EA7\u8282\u70B9\u5217\u8868\u4E2D\u7684\u7D22\u5F15</span>
        
        <span class="token comment"># \u4E0B\u9762\u8FD9\u5757\u4E3B\u8981\u662F\u4E3A\u4E86\u66F4\u65B0last_idx\uFF0C\u5206\u4E3A\u4E24\u79CD\u60C5\u51B5</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>add_self_loops<span class="token punctuation">:</span>  <span class="token comment"># \u6DFB\u52A0\u81EA\u73AF\u8FB9</span>
            edge_src <span class="token operator">=</span> tf<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>edge_src<span class="token punctuation">,</span> last_idx<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># \u5C06\u6E90\u8282\u70B9\u7684\u7D22\u5F15\u6DFB\u52A0\u5230\u90BB\u5C45\u7684\u6E90\u8282\u70B9\u7D22\u5F15\u540E\u9762\uFF0C\u4F5C\u4E3A\u8FB9\u7684\u6E90\u8282\u70B9</span>
            last_idx <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>new_n_id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># \u4FDD\u5B58\u6E90\u8282\u70B9\u7D22\u5F15</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment"># \u4E0D\u6DFB\u52A0\u81EA\u73AF\u8FB9</span>
            new_inv <span class="token operator">=</span> new_inv<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># \u4E0D\u6DFB\u52A0\u81EA\u73AF\u8FB9\u7684\u8BDD\uFF0C\u628A\u4E4B\u524D\u52A0\u5165\u7684\u591A\u4F59\u7D22\u5F15\u53BB\u9664\u6389</span>
            last_idx <span class="token operator">=</span> new_inv

        n_id <span class="token operator">=</span> new_n_id
        edge_dst <span class="token operator">=</span> new_inv
        edge_index <span class="token operator">=</span> tf<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">[</span>edge_src<span class="token punctuation">,</span> edge_dst<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        e_id <span class="token operator">=</span> <span class="token boolean">None</span>
        data_flow<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_n_id<span class="token punctuation">,</span> res_n_id<span class="token punctuation">,</span> e_id<span class="token punctuation">,</span> edge_index<span class="token punctuation">)</span>
    <span class="token keyword">return</span> data_flow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://res.craft.do/user/full/4725d35f-0536-9d85-0a69-346665ba7ebe/doc/388FCB1A-9845-4F79-9ED4-97E689DD8ED0/14D5F7CE-B0DB-4ED5-8194-28A4F9F94F38_2/IMG_8059.jpeg" alt="IMG_8059.jpeg" loading="lazy"></p><p>\u5173\u4E8E\u4E24\u79CD\u4E0D\u540C\u7684\u65B9\u5411</p><p>\u518D\u6765\u770B\u4E00\u4E0Bget_neighbors(n_id)\u7684\u5177\u4F53\u5B9E\u73B0\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> tf_euler<span class="token punctuation">.</span>python<span class="token punctuation">.</span>dataflow<span class="token punctuation">.</span>neighbor_dataflow <span class="token keyword">import</span> UniqueDataFlow

<span class="token keyword">class</span> <span class="token class-name">SageDataFlow</span><span class="token punctuation">(</span>UniqueDataFlow<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> fanouts<span class="token punctuation">,</span> metapath<span class="token punctuation">,</span>
                 add_self_loops<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                 max_id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
                 <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>SageDataFlow<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>num_hops<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>metapath<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                           add_self_loops<span class="token operator">=</span>add_self_loops<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>fanouts <span class="token operator">=</span> fanouts
        self<span class="token punctuation">.</span>metapath <span class="token operator">=</span> metapath
        self<span class="token punctuation">.</span>max_id <span class="token operator">=</span> max_id

    <span class="token keyword">def</span> <span class="token function">get_neighbors</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        neighbors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        neighbor_src <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> hop_edge_types<span class="token punctuation">,</span> count <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>metapath<span class="token punctuation">,</span> self<span class="token punctuation">.</span>fanouts<span class="token punctuation">)</span><span class="token punctuation">:</span>
            n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>n_id<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            one_neighbor<span class="token punctuation">,</span> _w<span class="token punctuation">,</span> _ <span class="token operator">=</span> tf_euler<span class="token punctuation">.</span>sample_neighbor<span class="token punctuation">(</span>
                n_id<span class="token punctuation">,</span> hop_edge_types<span class="token punctuation">,</span> count<span class="token punctuation">,</span> default_node<span class="token operator">=</span>self<span class="token punctuation">.</span>max_id<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            neighbors<span class="token punctuation">.</span>append<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>one_neighbor<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            node_src <span class="token operator">=</span> tf<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>size<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
            node_src <span class="token operator">=</span> tf<span class="token punctuation">.</span>tile<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>node_src<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> count<span class="token punctuation">]</span><span class="token punctuation">)</span>
            node_src <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>node_src<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            neighbor_src<span class="token punctuation">.</span>append<span class="token punctuation">(</span>node_src<span class="token punctuation">)</span>
            new_n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>one_neighbor<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            n_id <span class="token operator">=</span> tf<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>new_n_id<span class="token punctuation">,</span> n_id<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
            n_id<span class="token punctuation">,</span> _ <span class="token operator">=</span> tf<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>n_id<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> neighbors<span class="token punctuation">,</span> neighbor_src
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8C03\u7528get_neighbors(n_id)\u5BF9\u8282\u70B9\u8FDB\u884C\u90BB\u5C45\u91C7\u6837\uFF0C\u5F97\u5230\u7684\u7ED3\u679C\u4E3A\u4E24\u4E2A\u5217\u8868\uFF1A <ul><li>neighbors: [[n_id\u7684\u90BB\u5C45], [n_id\u7684\u90BB\u5C45\u7684\u90BB\u5C45], \u2026]</li><li>neighbor_src: [[n_neighbor_src], [n_neighbor_neighbor_src], \u2026]</li><li>\u5177\u4F53\u4F8B\u5B50\u5982\u4E0B\u56FE\uFF0C\u5F53n_id=[1,2,3]\u65F6\uFF0C\u5F97\u5230\u4E0B\u56FE\u7684\u7ED3\u679C\uFF1A</li></ul></li></ul><p><img src="https://res.craft.do/user/full/4725d35f-0536-9d85-0a69-346665ba7ebe/doc/388FCB1A-9845-4F79-9ED4-97E689DD8ED0/6965899C-7D53-471A-A1CF-167280644C82_2/Image.png" alt="Image.png" loading="lazy"></p><ul><li>\u4ECE\u6E90\u8282\u70B9\u5F00\u59CB\uFF0C\u8C03\u7528tf_euler.sample_neighbor\u65B9\u6CD5\u91C7\u6837\u6E90\u8282\u70B9\u7684\u7B2C\u4E00\u9636\u90BB\u5C45\uFF0C\u5E76\u4E14\u4F1A\u6839\u636Emetapath\uFF0C\u4EE5\u53CAfanouts\uFF0C\u6765\u786E\u5B9A\u8981\u91C7\u6837\u7684\u90BB\u5C45\u7684\u7C7B\u578B\u4EE5\u53CA\u6570\u91CF\u3002\u4E4B\u540E\u518D\u5FAA\u73AF\uFF0C\u76F4\u5230\u91C7\u6837\u5B8Ck\u9636\u90BB\u5C45\u3002</li></ul><p>\u81F3\u6B64\uFF0C\u6211\u4EEC\u4ECB\u7ECD\u5B8C\u4E86\u6D88\u606F\u4F20\u9012\u8DEF\u5F84\u662F\u5982\u4F55\u6784\u9020\u7684\uFF0C\u63A5\u4E0B\u6765\uFF0C\u770B\u4E00\u4E0B\u6D88\u606F\u662F\u5982\u4F55\u805A\u5408\u7684\uFF0C\u4E5F\u5C31\u662F\u56FE\u5377\u79EF\u6A21\u5757\u3002</p><h3 id="\u5377\u79EF\u6C47\u805A\u65B9\u6CD5-\u5C06\u90BB\u5C45\u6D88\u606F\u8FDB\u884C\u6C47\u805A\u2014\u2014sageconv" tabindex="-1"><a class="header-anchor" href="#\u5377\u79EF\u6C47\u805A\u65B9\u6CD5-\u5C06\u90BB\u5C45\u6D88\u606F\u8FDB\u884C\u6C47\u805A\u2014\u2014sageconv" aria-hidden="true">#</a> \u5377\u79EF\u6C47\u805A\u65B9\u6CD5\uFF1A\u5C06\u90BB\u5C45\u6D88\u606F\u8FDB\u884C\u6C47\u805A\u2014\u2014SageConv</h3><p>\u56DE\u6765\u770B\u4E00\u4E0BBaseGNNNet\u7684__call__\u65B9\u6CD5\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">BaseGNNNet</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        data_flow <span class="token operator">=</span> self<span class="token punctuation">.</span>sampler<span class="token punctuation">(</span>n_id<span class="token punctuation">)</span>
        num_layers <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>convs<span class="token punctuation">)</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>to_x<span class="token punctuation">(</span>data_flow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>n_id<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i<span class="token punctuation">,</span> conv<span class="token punctuation">,</span> block <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>num_layers<span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>convs<span class="token punctuation">,</span> data_flow<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> block<span class="token punctuation">.</span>e_id <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                edge_attr <span class="token operator">=</span> <span class="token boolean">None</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                edge_attr <span class="token operator">=</span> self<span class="token punctuation">.</span>get_edge_attr<span class="token punctuation">(</span>block<span class="token punctuation">)</span>
            x_src <span class="token operator">=</span> mp_ops<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>x<span class="token punctuation">,</span> block<span class="token punctuation">.</span>res_n_id<span class="token punctuation">)</span>
            x_dst <span class="token operator">=</span> <span class="token boolean">None</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>whole_graph <span class="token keyword">else</span> x
            x <span class="token operator">=</span> self<span class="token punctuation">.</span>calculate_conv<span class="token punctuation">(</span>conv<span class="token punctuation">,</span>
                                    <span class="token punctuation">(</span>x_src<span class="token punctuation">,</span> x_dst<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                    block<span class="token punctuation">.</span>edge_index<span class="token punctuation">,</span>
                                    size<span class="token operator">=</span>block<span class="token punctuation">.</span>size<span class="token punctuation">,</span>
                                    edge_attr<span class="token operator">=</span>edge_attr<span class="token punctuation">)</span>
            x <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>fc<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token keyword">return</span> x
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u83B7\u53D6\u6D88\u606F\u4F20\u9012\u8DEF\u5F84DataFlow\uFF1A\u4E0A\u6587\u63D0\u53CA\u7684\u8868\u793A\u6D88\u606F\u4F20\u9012\u8DEF\u5F84\u7684\u5217\u8868\uFF0C\u7531\u591A\u4E2A\u4E8C\u5206\u56FE\u6784\u6210\u3002</li><li>\u83B7\u53D6dst\u8282\u70B9\uFF08\u6D88\u606F\u7684\u53D1\u51FA\u65B9\uFF09\u7684\u7279\u5F81\uFF1Ax</li><li>\u8FDB\u884C\u5FAA\u73AF\uFF1A <ul><li>\u83B7\u53D6\u8FB9\u7684\u5C5E\u6027\uFF1Aedge_attr</li><li>\u83B7\u53D6src\u8282\u70B9\uFF08\u6D88\u606F\u7684\u63A5\u6536\u65B9\uFF09\u7684\u7279\u5F81\uFF1Ax_src</li><li>\u4F7F\u7528\u5B9A\u4E49\u7684conv\u6A21\u5757\u8FDB\u884C\u5377\u79EF\u8BA1\u7B97\uFF0C\u5B8C\u6210\u4E00\u5C42\u7684\u6D88\u606F\u4F20\u9012</li><li>\u5BF9\u5377\u79EF\u5B8C\u7684\u9690\u85CF\u7279\u5F81\u4F7F\u7528\u975E\u7EBF\u5F62\u6FC0\u6D3B\u51FD\u6570</li></ul></li><li>\u8FDB\u884C\u5B8Ck\u6B21\u5FAA\u73AF\u540E\uFF0C\u6D88\u606F\u5DF2\u7ECF\u4ECEk\u9636\u90BB\u5C45\u6C47\u805A\u5230\u6E90\u8282\u70B9</li><li>\u518D\u4F7F\u7528\u7EBF\u5F62\u5C42\u5BF9\u7279\u5F81\u8FDB\u884C\u6700\u540E\u4E00\u8F6E\u6620\u5C04</li></ul><p>\u8FD9\u91CC\u4E3B\u8981\u662F\u7531\u4E00\u4E2Aconv\u6A21\u5757\u5B8C\u6210\u7684\u5377\u79EF\u64CD\u4F5C\uFF0C\u6211\u4EEC\u4F7F\u7528SageConv\u4F5C\u4E3A\u4F8B\u5B50\u7EE7\u7EED\u6DF1\u5165\u7814\u7A76\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">SAGEConv</span><span class="token punctuation">(</span>conv<span class="token punctuation">.</span>Conv<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> dim<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>SAGEConv<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>aggr<span class="token operator">=</span><span class="token string">&#39;mean&#39;</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>self_fc <span class="token operator">=</span> tf<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span>dim<span class="token punctuation">,</span> use_bias<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>neigh_fc <span class="token operator">=</span> tf<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span>dim<span class="token punctuation">,</span> use_bias<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> edge_index<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        gather_x<span class="token punctuation">,</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>gather_feature<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> edge_index<span class="token punctuation">)</span>
        out <span class="token operator">=</span> self<span class="token punctuation">.</span>apply_edge<span class="token punctuation">(</span>gather_x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        out <span class="token operator">=</span> mp_ops<span class="token punctuation">.</span>scatter_<span class="token punctuation">(</span>self<span class="token punctuation">.</span>aggr<span class="token punctuation">,</span> out<span class="token punctuation">,</span> edge_index<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> size<span class="token operator">=</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        out <span class="token operator">=</span> self<span class="token punctuation">.</span>apply_node<span class="token punctuation">(</span>out<span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> out

    <span class="token keyword">def</span> <span class="token function">apply_edge</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_j<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> x_j

    <span class="token keyword">def</span> <span class="token function">apply_node</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> aggr_out<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>self_fc<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>neigh_fc<span class="token punctuation">(</span>aggr_out<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u70B9\u5728__call__\u65B9\u6CD5\uFF0C\u9996\u5148\u8C03\u7528\u4E86\u4E00\u4E2Agather_feature\u7684\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u5728\u5176\u7236\u7C7Bconv.Conv\u4E2D\u8FDB\u884C\u4E86\u5B9A\u4E49\uFF0C\u8BE5\u65B9\u6CD5\u5B9E\u9645\u4E0A\u5C31\u662F\u5C06\u4E8C\u5206\u56FE\u4E24\u8FB9\u7684\u7279\u5F81\uFF0C\u5373\u6E90\u8282\u70B9\u7684\u7279\u5F81\u4E0E\u76EE\u6807\u8282\u70B9\u7684\u7279\u5F81\uFF0C\u7EC6\u8282\u4E0D\u4F5C\u4ECB\u7ECD\uFF0C\u5177\u4F53\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Conv</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> aggr<span class="token operator">=</span><span class="token string">&#39;add&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>aggr <span class="token operator">=</span> aggr
        <span class="token keyword">assert</span> self<span class="token punctuation">.</span>aggr <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mean&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;max&#39;</span><span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">gather_feature</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> features<span class="token punctuation">,</span> edge_index<span class="token punctuation">)</span><span class="token punctuation">:</span>
        convert_features <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

        <span class="token keyword">for</span> feature <span class="token keyword">in</span> features<span class="token punctuation">:</span>
            convert_feature <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token keyword">assert</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>feature<span class="token punctuation">,</span> <span class="token builtin">tuple</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>feature<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span>
            <span class="token keyword">assert</span> <span class="token builtin">len</span><span class="token punctuation">(</span>feature<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span>
            <span class="token keyword">if</span> feature<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                feature<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> feature<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            <span class="token keyword">for</span> idx<span class="token punctuation">,</span> tmp <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>feature<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> tmp <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                    tmp <span class="token operator">=</span> mp_ops<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> edge_index<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span>
                convert_feature<span class="token punctuation">.</span>append<span class="token punctuation">(</span>tmp<span class="token punctuation">)</span>
            convert_features<span class="token punctuation">.</span>append<span class="token punctuation">(</span>convert_feature<span class="token punctuation">)</span>
        <span class="token keyword">return</span> convert_features

    <span class="token keyword">def</span> <span class="token function">apply_edge</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_j<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> x_j

    <span class="token keyword">def</span> <span class="token function">apply_node</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> aggr_out<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> aggr_out
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0CEuler\u7684\u6D88\u606F\u4F20\u9012\u65B9\u5411\u662Fdst\u5230src\uFF0C\u6240\u4EE5\u5728SAGEConv\u7684__call__\u65B9\u6CD5\u4E2D\uFF0C\u5148\u83B7\u53D6\u4E86dst\u7684\u7279\u5F81gather_x[1]\uFF0C\u518D\u4F7F\u7528mp_ops.scatter_\u65B9\u6CD5\uFF0C\u518DSAGEConv\u91CC\u9762\u5177\u4F53\u4F1A\u8C03\u7528mp_ops.scatter_mean\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u5C06\u8F93\u5165\u7684\u7279\u5F81\u77E9\u9635out\uFF0C\u6309\u7167edge_index[0]\u7684\u7D22\u5F15\u8FDB\u884C\u805A\u5408\uFF0C\u518D\u5BF9\u805A\u5408\u540E\u7684\u6BCF\u4E00\u5806\u884C\u5411\u91CF\u6C42\u5E73\u5747\u3002\u5176\u5B9E\u8FD9\u4E5F\u5C31\u662F\u5C06\u90BB\u5C45\u51FA\u73B0\u7684\u6240\u6709\u7279\u5F81\u805A\u5408\u5230\u4E00\u8D77\uFF08\u52A0\u5728\u4E00\u8D77\uFF09\u518D\u6C42\u4E2A\u5E73\u5747\uFF0C\u5F97\u5230\u4E86\u805A\u5408\u540E\u7684\u7ED3\u679C\u3002</p><p><img src="https://res.craft.do/user/full/4725d35f-0536-9d85-0a69-346665ba7ebe/doc/388FCB1A-9845-4F79-9ED4-97E689DD8ED0/6ADCD963-8D09-43F7-AFC2-062C801367C0_2/Image.jpeg" alt="Image.jpeg" loading="lazy"></p><p>scatter_mean\u65B9\u6CD5\u5C06\u7279\u5F81\u6309\u7167\u7D22\u5F15\u8FDB\u884C\u805A\u5408</p><p>\u81F3\u6B64\uFF0C\u6211\u4EEC\u5C31\u770B\u5B8C\u4E86\u56FE\u5377\u79EF\u6A21\u5757\u7684\u5177\u4F53\u5B9E\u73B0\u3002</p><p>\u5BF9\u4E8E\u7528\u6237\u6765\u8BF4\uFF0C\u5176\u5B9E\u4E0D\u9700\u8981\u5173\u6CE8\u4E00\u4E2A\u6A21\u5757\u7684\u5185\u90E8\u662F\u5982\u4F55\u5B9E\u73B0\u7684\uFF0C\u76F4\u63A5\u8C03\u7528\u5916\u90E8\u63A5\u53E3\u5B8C\u6210\u9700\u8981\u7684\u4EFB\u52A1\u5C31\u884C\uFF0C\u4F46\u662F\u5904\u4E8E\u5B66\u4E60\u4E0E\u7814\u7A76\u7684\u76EE\u7684\uFF0C\u8FD8\u662F\u9009\u62E9\u770B\u4E00\u770B\u6E90\u7801\uFF0C\u4E00\u662F\u53EF\u4EE5\u5B66\u4E60\u4EE3\u7801\u5177\u4F53\u5B9E\u73B0\uFF0C\u4E8C\u662F\u5728\u4F7F\u7528\u7684\u65F6\u5019\u4E5F\u66F4\u6709\u628A\u63E1\u4E00\u70B9\uFF0C\u9047\u5230\u95EE\u9898\u4E5F\u66F4\u5BB9\u6613\u5FEB\u901F\u5B9A\u4F4D\u3002</p><p>\u829C\u6E56\uFF0C\u603B\u7B97\u628A\u8FD9\u4E2A\u7B14\u8BB0\u5199\u5B8C\u4E86\u3002\u3002\u3002\u7B2C\u4E00\u6B21\u5199\u8BFB\u6E90\u7801\u7684\u7B14\u8BB0\uFF0C\u8FD8\u771F\u4E0D\u5BB9\u6613\u3002</p>`,48);function _(b,f){const p=i("ExternalLinkIcon");return e(),o("div",null,[u,s("p",null,[k,s("a",r,[d,c(p)]),v]),m])}var h=t(l,[["render",_],["__file","2021-12-30-dive_into_nodeestimator.html.vue"]]);export{h as default};
