import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as t}from"./app.f15a94a8.js";const p={},e=t(`<h2 id="\u5217\u8868-list" tabindex="-1"><a class="header-anchor" href="#\u5217\u8868-list" aria-hidden="true">#</a> \u5217\u8868 list</h2><h3 id="\u5217\u8868\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5217\u8868\u65B9\u6CD5" aria-hidden="true">#</a> \u5217\u8868\u65B9\u6CD5</h3><ul><li>list.append(obj)</li><li>list.count(obj)</li><li>list.extend(seq)</li><li>list.index(obj)</li><li>list.insert(index, obj)</li><li>list.pop([index=-1])</li><li>list.remove(obj)</li><li>list.reverse()</li><li>list.sort(cmp=None, key=None, reverse=False)</li></ul><h3 id="\u5217\u8868\u811A\u672C\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5217\u8868\u811A\u672C\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> \u5217\u8868\u811A\u672C\u64CD\u4F5C\u7B26</h3><table><thead><tr><th>Python \u8868\u8FBE\u5F0F</th><th>\u7ED3\u679C</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>len([1, 2, 3])</td><td>3</td><td>\u957F\u5EA6</td></tr><tr><td>[1, 2, 3] + [4, 5, 6]</td><td>[1, 2, 3, 4, 5, 6]</td><td>\u7EC4\u5408</td></tr><tr><td>[&#39;Hi!&#39;] * 4</td><td>[&#39;Hi!&#39;, &#39;Hi!&#39;, &#39;Hi!&#39;, &#39;Hi!&#39;]</td><td>\u91CD\u590D</td></tr><tr><td>3 in [1, 2, 3]</td><td>True</td><td>\u5143\u7D20\u662F\u5426\u5B58\u5728\u4E8E\u5217\u8868\u4E2D</td></tr><tr><td>for x in [1, 2, 3]: print x,</td><td>1 2 3</td><td>\u8FED\u4EE3</td></tr></tbody></table><h3 id="\u5217\u8868\u622A\u53D6" tabindex="-1"><a class="header-anchor" href="#\u5217\u8868\u622A\u53D6" aria-hidden="true">#</a> \u5217\u8868\u622A\u53D6</h3><table><thead><tr><th>Python \u8868\u8FBE\u5F0F</th><th>\u7ED3\u679C</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>L[2]</td><td>&#39;Taobao&#39;</td><td>\u8BFB\u53D6\u5217\u8868\u4E2D\u7B2C\u4E09\u4E2A\u5143\u7D20</td></tr><tr><td>L[-2]</td><td>&#39;Runoob&#39;</td><td>\u8BFB\u53D6\u5217\u8868\u4E2D\u5012\u6570\u7B2C\u4E8C\u4E2A\u5143\u7D20</td></tr><tr><td>L[1:]</td><td>[&#39;Runoob&#39;, &#39;Taobao&#39;]</td><td>\u4ECE\u7B2C\u4E8C\u4E2A\u5143\u7D20\u5F00\u59CB\u622A\u53D6\u5217\u8868</td></tr></tbody></table><h2 id="\u53CC\u5411\u961F\u5217-deque" tabindex="-1"><a class="header-anchor" href="#\u53CC\u5411\u961F\u5217-deque" aria-hidden="true">#</a> \u53CC\u5411\u961F\u5217 deque</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">collections</span><span class="token punctuation">.</span>deque<span class="token punctuation">(</span><span class="token punctuation">[</span>iterable<span class="token punctuation">[</span><span class="token punctuation">,</span> maxlen<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>\u82E5\u5F53\u4F5C\u4E00\u4E2A<strong>\u5355\u5411\u961F\u5217</strong>\uFF0Cappend(x) \u4E0E popleft() \u624D\u662F\u4E00\u5BF9\u3002\u3002\u3002</p><ul><li>\u82E5\u5F53\u4F5C\u4E00\u4E2A<strong>\u6808</strong>\uFF0Cappend(x)\u4E0E pop()\u5C31\u662F\u4E00\u5BF9</li></ul></div><h3 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5</h3><ul><li>append(x) \u6DFB\u52A0\u5230\u53F3\u4FA7</li><li>appendleft(x) \u6DFB\u52A0\u5230\u5DE6\u4FA7</li><li>pop() \u4ECE\u53F3\u4FA7\u51FA\u961F</li><li>popleft() \u4ECE\u5DE6\u4FA7\u51FA\u961F</li><li>clear()</li><li>copy()</li><li>count(x)</li><li>extend(iter)</li><li>extendleft(iter)</li><li>index(x[, start[, stop]])</li><li>insert(i, x)</li><li>remove(x) \u5220\u9664\u4ECE\u5DE6\u5230\u53F3\u7684\u7B2C\u4E00\u4E2A x</li><li>reverse()</li><li>rotate(n=1)</li><li>maxlen</li></ul><h3 id="recipes" tabindex="-1"><a class="header-anchor" href="#recipes" aria-hidden="true">#</a> Recipes</h3><h4 id="_1-\u7528\u4E8E\u5B9E\u73B0-tail-\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#_1-\u7528\u4E8E\u5B9E\u73B0-tail-\u7A0B\u5E8F" aria-hidden="true">#</a> 1. \u7528\u4E8E\u5B9E\u73B0 tail \u7A0B\u5E8F</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">tail</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> n<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;Return the last n lines of a file&#39;</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        <span class="token keyword">return</span> deque<span class="token punctuation">(</span>f<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BBE\u7F6E maxlen=n\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u4FDD\u7559\u6587\u672C\u6700\u540E n \u884C\u7684\u529F\u80FD\u3002</p><h4 id="_2-\u7528\u4E8E\u7EF4\u6301\u4E00\u4E2A\u5B9A\u957F\u7684\u8FD1\u671F\u6DFB\u52A0\u5143\u7D20\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_2-\u7528\u4E8E\u7EF4\u6301\u4E00\u4E2A\u5B9A\u957F\u7684\u8FD1\u671F\u6DFB\u52A0\u5143\u7D20\u5E8F\u5217" aria-hidden="true">#</a> 2. \u7528\u4E8E\u7EF4\u6301\u4E00\u4E2A\u5B9A\u957F\u7684\u8FD1\u671F\u6DFB\u52A0\u5143\u7D20\u5E8F\u5217</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">moving_average</span><span class="token punctuation">(</span>iterable<span class="token punctuation">,</span> n<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># moving_average([40, 30, 50, 46, 39, 44]) --&gt; 40.0 42.0 45.0 43.0</span>
    <span class="token comment"># http://en.wikipedia.org/wiki/Moving_average</span>
    it <span class="token operator">=</span> <span class="token builtin">iter</span><span class="token punctuation">(</span>iterable<span class="token punctuation">)</span>
    d <span class="token operator">=</span> deque<span class="token punctuation">(</span>itertools<span class="token punctuation">.</span>islice<span class="token punctuation">(</span>it<span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    d<span class="token punctuation">.</span>appendleft<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
    <span class="token keyword">for</span> elem <span class="token keyword">in</span> it<span class="token punctuation">:</span>
        s <span class="token operator">+=</span> elem <span class="token operator">-</span> d<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>
        d<span class="token punctuation">.</span>append<span class="token punctuation">(</span>elem<span class="token punctuation">)</span>
        <span class="token keyword">yield</span> s <span class="token operator">/</span> n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-\u5B9E\u73B0\u4E00\u4E2A-round-robin-scheduler" tabindex="-1"><a class="header-anchor" href="#_3-\u5B9E\u73B0\u4E00\u4E2A-round-robin-scheduler" aria-hidden="true">#</a> 3. \u5B9E\u73B0\u4E00\u4E2A round-robin scheduler</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">roundrobin</span><span class="token punctuation">(</span><span class="token operator">*</span>iterables<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&quot;roundrobin(&#39;ABC&#39;, &#39;D&#39;, &#39;EF&#39;) --&gt; A D E B F C&quot;</span>
    iterators <span class="token operator">=</span> deque<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">,</span> iterables<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> iterators<span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
                <span class="token keyword">yield</span> <span class="token builtin">next</span><span class="token punctuation">(</span>iterators<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                iterators<span class="token punctuation">.</span>rotate<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> StopIteration<span class="token punctuation">:</span>
            <span class="token comment"># Remove an exhausted iterator.</span>
            iterators<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-\u5220\u9664\u7B2C-n-\u4E2A\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_4-\u5220\u9664\u7B2C-n-\u4E2A\u5143\u7D20" aria-hidden="true">#</a> 4. \u5220\u9664\u7B2C n \u4E2A\u5143\u7D20</h4><p>\u53EF\u4EE5\u4F7F\u7528 rotate(n)\u6765\u8F7B\u677E\u5220\u9664\u7B2C n \u4E2A\u5143\u7D20</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">delete_nth</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    d<span class="token punctuation">.</span>rotate<span class="token punctuation">(</span><span class="token operator">-</span>n<span class="token punctuation">)</span>
    d<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>
    d<span class="token punctuation">.</span>rotate<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6700\u5C0F\u5806-heapq" tabindex="-1"><a class="header-anchor" href="#\u6700\u5C0F\u5806-heapq" aria-hidden="true">#</a> \u6700\u5C0F\u5806 heapq</h2><p><strong>\u51FD \u6570</strong>\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <strong>\u63CF \u8FF0</strong></p><p>heappush(heap, x)\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \u5C06 x \u538B\u5165\u5806\u4E2D</p><p>heappop(heap)\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \u4ECE\u5806\u4E2D\u5F39\u51FA\u6700\u5C0F\u7684\u5143\u7D20</p><p>heapify(heap) \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \u8BA9\u5217\u8868\u5177\u5907\u5806\u7279\u5F81</p><p>heapreplace(heap, x)\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \u5F39\u51FA\u6700\u5C0F\u7684\u5143\u7D20\uFF0C\u5E76\u5C06 x \u538B\u5165\u5806\u4E2D</p><p>nlargest(n, iter, key=None)\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \u8FD4\u56DE iter \u4E2D n \u4E2A\u6700\u5927\u7684\u5143\u7D20</p><p>nsmallest(n, iter, key=None) \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \u8FD4\u56DE iter \u4E2D n \u4E2A\u6700\u5C0F\u7684\u5143\u7D20</p><p>merge(*iters, key=None, reverse=False) \u5408\u5E76\u591A\u4E2A\u6709\u5E8F\u5217\u8868\u5F62\u6210\u5355\u72EC\u4E00\u4E2A\u6709\u5E8F\u5217\u8868</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> heapq <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> random <span class="token keyword">import</span> shuffle
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> data <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> shuffle<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> heap <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> n <span class="token keyword">in</span> data<span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> heappush<span class="token punctuation">(</span>heap<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> heap
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> heappush<span class="token punctuation">(</span>heap<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> heap
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="python-\u5982\u4F55\u5B9E\u73B0\u6700\u5927\u5806" tabindex="-1"><a class="header-anchor" href="#python-\u5982\u4F55\u5B9E\u73B0\u6700\u5927\u5806" aria-hidden="true">#</a> <strong>python \u5982\u4F55\u5B9E\u73B0\u6700\u5927\u5806\uFF1F</strong></h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># \u6700\u7B80\u5355\u7684\u65B9\u6848\u5C31\u662F\uFF0C\u7ED9\u4F60\u7684\u5806\u7684\u5143\u7D20\u52A0\u4E00\u4E2A\u503C\uFF0C\u4F7F\u503C\u9006\u5E8F\u6392\u5217\u3002\u4EE5\u4E0B\u662F\u793A\u4F8B\u4EE3\u7801\u3002</span>
<span class="token keyword">import</span> heapq
sss <span class="token operator">=</span> <span class="token string">&#39;abecgfidhjk&#39;</span>
ll <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>sss<span class="token punctuation">)</span>
heapq<span class="token punctuation">.</span>heapify<span class="token punctuation">(</span>ll<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ll<span class="token punctuation">)</span>
<span class="token comment"># [&#39;a&#39;, &#39;b&#39;, &#39;e&#39;, &#39;c&#39;, &#39;g&#39;, &#39;f&#39;, &#39;i&#39;, &#39;d&#39;, &#39;h&#39;, &#39;j&#39;, &#39;k&#39;]</span>
<span class="token comment"># \u6B64\u65F6\u82E5\u60F3\u5F97\u5230\u5927\u9876\u5806</span>
newl <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">-</span>i<span class="token punctuation">,</span> ll<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>ll<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token comment">#print(newl)</span>
heapq<span class="token punctuation">.</span>heapify<span class="token punctuation">(</span>newl<span class="token punctuation">)</span>
<span class="token comment"># \u6B64\u65F6\u5DF2\u7ECF\u6309\u7167\u7B2C\u4E00\u4E2A\u503C\u53D8\u6210\u4E86\u5C0F\u9876\u5806\uFF0C\u5373\u53D8\u6210\u4E86\u9006\u5E8F</span>
max_heap <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">while</span> newl<span class="token punctuation">:</span>
    _<span class="token punctuation">,</span> s <span class="token operator">=</span> heapq<span class="token punctuation">.</span>heappop<span class="token punctuation">(</span>newl<span class="token punctuation">)</span>
    max_heap<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8BA1\u6570\u5668-counter" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u6570\u5668-counter" aria-hidden="true">#</a> \u8BA1\u6570\u5668 Counter</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">collections</span><span class="token punctuation">.</span>Counter<span class="token punctuation">(</span><span class="token punctuation">[</span>iterable<span class="token operator">-</span><span class="token keyword">or</span><span class="token operator">-</span>mapping<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Counter \u662F\u4E00\u4E2A dict \u7684\u5B50\u7C7B\uFF0C\u5B58\u7740\u6BCF\u4E2A\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u82E5\u8BBF\u95EE\u4E0D\u5B58\u5728\u7684\u5143\u7D20\u4F1A\u8FD4\u56DE 0\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>c <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token punctuation">)</span>                           <span class="token comment"># a new, empty counter</span>
c <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;gallahad&#39;</span><span class="token punctuation">)</span>                 <span class="token comment"># a new counter from an iterable</span>
c <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token comment"># a new counter from a mapping</span>
c <span class="token operator">=</span> Counter<span class="token punctuation">(</span>cats<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> dogs<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>             <span class="token comment"># a new counter from keyword args</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F4\u63A5\u4EE5\u5B57\u5178\u7684\u65B9\u5F0F\u53BB\u8BBF\u95EE Counter</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>c<span class="token punctuation">[</span><span class="token string">&#39;cats&#39;</span><span class="token punctuation">]</span>         <span class="token comment"># return 4</span>
c<span class="token punctuation">[</span><span class="token string">&#39;cats&#39;</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token comment"># add one more cat</span>
c<span class="token punctuation">[</span><span class="token string">&#39;pigs&#39;</span><span class="token punctuation">]</span>         <span class="token comment"># missing value will return 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>elements()</strong> \u8FD4\u56DE\u4E00\u4E2A iterator \u6839\u636E\u6BCF\u4E2A\u5143\u7D20\u7684\u6570\u91CF\u6765\u8BBF\u95EE\u6240\u6709\u5143\u7D20\uFF08\u4F1A\u5FFD\u7565\u6570\u91CF\u4E3A 0 \u6216\u8D1F\u7684\u5143\u7D20\uFF09</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c <span class="token operator">=</span> Counter<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>elements<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>*<strong>*most_common**</strong>([<em>n</em>]) \u8FD4\u56DE\u4E00\u4E2A tuple \u5217\u8868\uFF0C\u5305\u542B\u6309\u5143\u7D20\u6570\u91CF\u6392\u5E8F\u7684\u6700\u5E38\u89C1\u7684\u5143\u7D20\u5217\u8868</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;abracadabra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>most_common<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>*<strong>*subtract**</strong>([<em>iterable-or-mapping</em>]) \u4E24\u4E2A Counter \u53EF\u4EE5\u76F8\u51CF</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c <span class="token operator">=</span> Counter<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> d <span class="token operator">=</span> Counter<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span>d<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c
Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>*<strong>*fromkeys**</strong>(<em>iterable</em>) \u6CA1\u6709\u5BF9 Counter \u5B9E\u73B0\u8BE5\u65B9\u6CD5\uFF08dict \u7684\u7C7B\u65B9\u6CD5\uFF0C\u7528\u4E8E\u6839\u636E dict \u7684\u952E\u751F\u6210\u4E00\u4E2A\u65B0\u7684 dict\uFF09</p><p>*<strong>*update**</strong>([<em>iterable-or-mapping</em>]) \u4E0E dict \u7684 update \u4E00\u6837</p><p>\u5176\u4ED6\u7684\u4E00\u4E9B\u64CD\u4F5C\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">sum</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                 <span class="token comment"># total of all counts</span>
c<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>                       <span class="token comment"># reset all counts</span>
<span class="token builtin">list</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>                         <span class="token comment"># list unique elements</span>
<span class="token builtin">set</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>                          <span class="token comment"># convert to a set</span>
<span class="token builtin">dict</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>                         <span class="token comment"># convert to a regular dictionary</span>
c<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>                       <span class="token comment"># convert to a list of (elem, cnt) pairs</span>
Counter<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>list_of_pairs<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># convert from a list of (elem, cnt) pairs</span>
c<span class="token punctuation">.</span>most_common<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>       <span class="token comment"># n least common elements</span>
<span class="token operator">+</span>c                              <span class="token comment"># remove zero and negative counts</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c <span class="token operator">=</span> Counter<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> d <span class="token operator">=</span> Counter<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c <span class="token operator">+</span> d                       <span class="token comment"># add two counters together:  c[x] + d[x]</span>
Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c <span class="token operator">-</span> d                       <span class="token comment"># subtract (keeping only positive counts)</span>
Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c <span class="token operator">&amp;</span> d                       <span class="token comment"># intersection:  min(c[x], d[x])</span>
Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c <span class="token operator">|</span> d                       <span class="token comment"># union:  max(c[x], d[x])</span>
Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c <span class="token operator">=</span> Counter<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">+</span>c
Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">-</span>c
Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u968F\u673A\u961F\u5217-randomizedqueue" tabindex="-1"><a class="header-anchor" href="#\u968F\u673A\u961F\u5217-randomizedqueue" aria-hidden="true">#</a> \u968F\u673A\u961F\u5217 RandomizedQueue</h2><div class="custom-container info"><p class="custom-container-title">\u76F8\u5173\u4FE1\u606F</p><p>\u81EA\u521B\u6570\u636E\u7ED3\u6784\uFF0C\u5728\u5DE5\u4F5C\u4E2D\u4F7F\u7528</p></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">RandomizedQueue</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> _iter<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">*</span>_iter<span class="token punctuation">]</span>
    <span class="token keyword">def</span> <span class="token function">append</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>val<span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">remove</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> idx <span class="token operator">&gt;=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>arr<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        r <span class="token operator">=</span> self<span class="token punctuation">.</span>arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># \u5C06\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u79FB\u52A8\u5230\u5220\u9664\u7684\u5143\u7D20\u4F4D\u7F6E</span>
        self<span class="token punctuation">.</span>arr<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> r
    <span class="token keyword">def</span> <span class="token function">getRandom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>arr<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">def</span> <span class="token function">popRandom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>arr<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        idx <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>idx<span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__len__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5165\u961F\uFF1AO(1)</li><li>\u83B7\u53D6\u968F\u673A\u5143\u7D20\uFF1AO(1)</li><li>\u968F\u673A\u51FA\u961F\uFF1AO(1)</li><li>\u5220\u9664\u6307\u5B9A\u4F4D\u7F6E\u7684\u5143\u7D20\uFF1AO(1)</li></ul>`,55),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","python-data-structures.html.vue"]]);export{k as default};
